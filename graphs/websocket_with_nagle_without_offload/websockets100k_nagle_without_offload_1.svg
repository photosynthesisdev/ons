<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>tick_sched_handle (12,733,840 samples, 0.23%)</title><rect x="58.3" y="405" width="2.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="61.27" y="415.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_external_malloc (8,537,835 samples, 0.15%)</title><rect x="1085.1" y="501" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1088.15" y="511.5" ></text>
</g>
<g >
<title>pypy_g_fastfunc_descr_lt_2_4 (13,351,117 samples, 0.24%)</title><rect x="913.3" y="485" width="2.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="916.34" y="495.5" ></text>
</g>
<g >
<title>pypy_g_register_finalizer___pypy_interpreter_executionc (13,126,785 samples, 0.24%)</title><rect x="379.2" y="485" width="2.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="382.16" y="495.5" ></text>
</g>
<g >
<title>__qdisc_run (13,625,637 samples, 0.24%)</title><rect x="735.3" y="133" width="2.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="738.30" y="143.5" ></text>
</g>
<g >
<title>tick_sched_timer (12,733,840 samples, 0.23%)</title><rect x="58.3" y="421" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="61.27" y="431.5" ></text>
</g>
<g >
<title>pypy_g_clear_vable_token (27,543,632 samples, 0.49%)</title><rect x="337.6" y="485" width="5.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="340.64" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ccall_clock_gettime (16,187,338 samples, 0.29%)</title><rect x="334.2" y="485" width="3.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="337.21" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handle_jitexception_11 (13,160,547 samples, 0.24%)</title><rect x="925.4" y="485" width="2.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="928.43" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25,124,605 samples, 0.45%)</title><rect x="268.1" y="469" width="5.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="271.08" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (17,969,383 samples, 0.32%)</title><rect x="448.8" y="277" width="3.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="451.79" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch (9,795,849 samples, 0.18%)</title><rect x="504.7" y="245" width="2.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="507.70" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (17,969,383 samples, 0.32%)</title><rect x="448.8" y="229" width="3.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="451.79" y="239.5" ></text>
</g>
<g >
<title>drm_mode_list_lessees_ioctl (23,123,748 samples, 0.42%)</title><rect x="719.3" y="181" width="4.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="722.28" y="191.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (684,600 samples, 0.01%)</title><rect x="1166.2" y="373" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1169.21" y="383.5" ></text>
</g>
<g >
<title>pypy_g_call_stub_561 (18,467,203 samples, 0.33%)</title><rect x="882.0" y="485" width="3.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="885.02" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_identityhash (9,998,624 samples, 0.18%)</title><rect x="286.8" y="485" width="2.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="289.84" y="495.5" ></text>
</g>
<g >
<title>__getpid (122,603,944 samples, 2.20%)</title><rect x="249.8" y="485" width="26.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="252.84" y="495.5" >_..</text>
</g>
<g >
<title>sock_recvmsg (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="421" width="28.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1036.63" y="431.5" >so..</text>
</g>
<g >
<title>pypy_g_scoped_alloc_buffer_str (22,369,209 samples, 0.40%)</title><rect x="1003.6" y="485" width="4.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1006.64" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1637___simple_call__function_ (11,664,911 samples, 0.21%)</title><rect x="1152.4" y="501" width="2.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1155.41" y="511.5" ></text>
</g>
<g >
<title>__wake_up (14,675,236 samples, 0.26%)</title><rect x="536.0" y="325" width="3.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="538.99" y="335.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (684,600 samples, 0.01%)</title><rect x="1166.2" y="469" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1169.21" y="479.5" ></text>
</g>
<g >
<title>pypy_g_resume_in_blackhole (10,476,527 samples, 0.19%)</title><rect x="928.2" y="469" width="2.2" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="931.22" y="479.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__pure_lookup_where_with_method_cach (22,529,037 samples, 0.40%)</title><rect x="856.7" y="485" width="4.7" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="859.66" y="495.5" ></text>
</g>
<g >
<title>lockd_up (10,360,884 samples, 0.19%)</title><rect x="706.1" y="149" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="709.07" y="159.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (9,795,849 samples, 0.18%)</title><rect x="504.7" y="229" width="2.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="507.70" y="239.5" ></text>
</g>
<g >
<title>pypy_g__ll_malloc_varsize_no_length__Signed_Signed_Sign (12,098,307 samples, 0.22%)</title><rect x="1127.1" y="501" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1130.08" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (40,413,007 samples, 0.73%)</title><rect x="476.9" y="245" width="8.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="479.87" y="255.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (23,123,748 samples, 0.42%)</title><rect x="719.3" y="197" width="4.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="722.28" y="207.5" ></text>
</g>
<g >
<title>pypy_g_get_and_call_function__star_0 (10,405,592 samples, 0.19%)</title><rect x="923.2" y="485" width="2.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="926.23" y="495.5" ></text>
</g>
<g >
<title>visit_groups_merge (1,543,248 samples, 0.03%)</title><rect x="561.3" y="197" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="564.31" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (28,822,312 samples, 0.52%)</title><rect x="493.2" y="197" width="6.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="496.21" y="207.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (72,244,492 samples, 1.30%)</title><rect x="695.9" y="165" width="15.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="698.85" y="175.5" ></text>
</g>
<g >
<title>drm_mode_atomic_ioctl (24,193,074 samples, 0.43%)</title><rect x="711.2" y="181" width="5.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="714.16" y="191.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_getfield_vable_i (15,591,698 samples, 0.28%)</title><rect x="1081.8" y="501" width="3.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1084.84" y="511.5" ></text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (14,432,846 samples, 0.26%)</title><rect x="779.3" y="485" width="3.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="782.27" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (52,889,220 samples, 0.95%)</title><rect x="550.1" y="261" width="11.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="553.10" y="271.5" ></text>
</g>
<g >
<title>apply_mask (10,250,371 samples, 0.18%)</title><rect x="275.8" y="485" width="2.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="278.82" y="495.5" ></text>
</g>
<g >
<title>tcp_push (403,663,302 samples, 7.25%)</title><rect x="674.3" y="341" width="85.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="677.32" y="351.5" >tcp_push</text>
</g>
<g >
<title>__sys_sendto (536,015,432 samples, 9.63%)</title><rect x="646.3" y="421" width="113.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="649.27" y="431.5" >__sys_sendto</text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (13,040,875 samples, 0.23%)</title><rect x="874.9" y="485" width="2.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="877.92" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (14,522,611 samples, 0.26%)</title><rect x="61.0" y="485" width="3.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.97" y="495.5" ></text>
</g>
<g >
<title>tcp_write_xmit (403,663,302 samples, 7.25%)</title><rect x="674.3" y="309" width="85.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="677.32" y="319.5" >tcp_write_..</text>
</g>
<g >
<title>cfree (13,295,765 samples, 0.24%)</title><rect x="421.8" y="405" width="2.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="424.76" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12,494,051 samples, 0.22%)</title><rect x="430.0" y="389" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="432.97" y="399.5" ></text>
</g>
<g >
<title>pypy3.10 (5,568,730,284 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >pypy3.10</text>
</g>
<g >
<title>ip_local_out (367,099,082 samples, 6.59%)</title><rect x="679.0" y="245" width="77.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="682.05" y="255.5" >ip_local..</text>
</g>
<g >
<title>pypy_g__monotonic_impl (9,029,298 samples, 0.16%)</title><rect x="327.4" y="485" width="2.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="330.45" y="495.5" ></text>
</g>
<g >
<title>ep_poll (340,052,034 samples, 6.11%)</title><rect x="446.6" y="325" width="72.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="449.61" y="335.5" >ep_poll</text>
</g>
<g >
<title>__tcp_transmit_skb (389,411,285 samples, 6.99%)</title><rect x="674.3" y="293" width="82.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="677.32" y="303.5" >__tcp_tra..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_inline_call_r_v (14,867,142 samples, 0.27%)</title><rect x="782.3" y="485" width="3.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="785.32" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_unpin (12,600,875 samples, 0.23%)</title><rect x="1087.0" y="501" width="2.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1089.96" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (17,150,591 samples, 0.31%)</title><rect x="657.1" y="309" width="3.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="660.10" y="319.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (12,567,578 samples, 0.23%)</title><rect x="444.0" y="325" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="446.95" y="335.5" ></text>
</g>
<g >
<title>[unknown] (3,063,738,431 samples, 55.02%)</title><rect x="381.9" y="501" width="649.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="384.94" y="511.5" >[unknown]</text>
</g>
<g >
<title>dma_direct_unmap_page (10,595,589 samples, 0.19%)</title><rect x="738.2" y="69" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="741.19" y="79.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (12,999,431 samples, 0.23%)</title><rect x="1048.8" y="341" width="2.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1051.82" y="351.5" ></text>
</g>
<g >
<title>skb_copy (24,706,610 samples, 0.44%)</title><rect x="742.9" y="85" width="5.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="745.95" y="95.5" ></text>
</g>
<g >
<title>put_prev_task_fair (31,345,210 samples, 0.56%)</title><rect x="512.0" y="229" width="6.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="515.03" y="239.5" ></text>
</g>
<g >
<title>switch_fpu_return (15,702,333 samples, 0.28%)</title><rect x="518.7" y="357" width="3.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="521.67" y="367.5" ></text>
</g>
<g >
<title>pypy_epoll_wait (12,664,751 samples, 0.23%)</title><rect x="776.6" y="485" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="779.58" y="495.5" ></text>
</g>
<g >
<title>[[vdso]] (15,943,392 samples, 0.29%)</title><rect x="1068.0" y="469" width="3.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1071.00" y="479.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (12,999,431 samples, 0.23%)</title><rect x="1048.8" y="309" width="2.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1051.82" y="319.5" ></text>
</g>
<g >
<title>do_epoll_wait (352,619,612 samples, 6.33%)</title><rect x="444.0" y="341" width="74.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="446.95" y="351.5" >do_epoll..</text>
</g>
<g >
<title>dequeue_task_fair (40,061,355 samples, 0.72%)</title><rect x="490.8" y="229" width="8.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="493.83" y="239.5" ></text>
</g>
<g >
<title>inet_sendmsg (536,015,432 samples, 9.63%)</title><rect x="646.3" y="389" width="113.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="649.27" y="399.5" >inet_sendmsg</text>
</g>
<g >
<title>sock_poll (20,235,620 samples, 0.36%)</title><rect x="542.4" y="277" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="545.36" y="287.5" ></text>
</g>
<g >
<title>ctx_sched_in (1,543,248 samples, 0.03%)</title><rect x="561.3" y="213" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="564.31" y="223.5" ></text>
</g>
<g >
<title>__libc_send (559,169,106 samples, 10.04%)</title><rect x="641.4" y="485" width="118.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="644.37" y="495.5" >__libc_send</text>
</g>
<g >
<title>ipt_do_table (14,115,419 samples, 0.25%)</title><rect x="716.3" y="197" width="3.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="719.29" y="207.5" ></text>
</g>
<g >
<title>remote_function (684,600 samples, 0.01%)</title><rect x="1166.2" y="421" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1169.21" y="431.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (14,252,017 samples, 0.26%)</title><rect x="756.8" y="293" width="3.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="759.83" y="303.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (132,534,349 samples, 2.38%)</title><rect x="381.9" y="485" width="28.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="384.94" y="495.5" >[..</text>
</g>
<g >
<title>__skb_datagram_iter (12,999,431 samples, 0.23%)</title><rect x="1048.8" y="357" width="2.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1051.82" y="367.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1441___simple_call__function_ (18,477,811 samples, 0.33%)</title><rect x="358.2" y="485" width="3.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="361.18" y="495.5" ></text>
</g>
<g >
<title>drm_mode_atomic_ioctl (13,200,261 samples, 0.24%)</title><rect x="711.2" y="165" width="2.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="714.16" y="175.5" ></text>
</g>
<g >
<title>pypy_g__ll_list_resize_hint_really_look_inside_iff__lis (13,677,565 samples, 0.25%)</title><rect x="321.9" y="485" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="324.94" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (25,377,737 samples, 0.46%)</title><rect x="499.3" y="229" width="5.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="502.32" y="239.5" ></text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (22,870,041 samples, 0.41%)</title><rect x="329.4" y="485" width="4.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="332.36" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_delete_by_entry_index__dicttablePtr_Sign (12,880,242 samples, 0.23%)</title><rect x="991.2" y="485" width="2.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="994.25" y="495.5" ></text>
</g>
<g >
<title>pypy_g_W_Root_getclass (9,699,080 samples, 0.17%)</title><rect x="854.6" y="485" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="857.60" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (157,271,476 samples, 2.82%)</title><rect x="532.6" y="373" width="33.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="535.56" y="383.5" >__..</text>
</g>
<g >
<title>lock_sock_nested (10,228,998 samples, 0.18%)</title><rect x="1046.7" y="373" width="2.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1049.65" y="383.5" ></text>
</g>
<g >
<title>clock_gettime (30,624,094 samples, 0.55%)</title><rect x="278.0" y="485" width="6.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="280.99" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="469" width="28.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1036.63" y="479.5" >do..</text>
</g>
<g >
<title>vgetargskeywords (32,290,730 samples, 0.58%)</title><rect x="1024.3" y="485" width="6.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1027.30" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_append_charpsize__stringbuilderPtr_arrayPtr_S (9,730,196 samples, 0.17%)</title><rect x="985.7" y="485" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="988.66" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (96,708,540 samples, 1.74%)</title><rect x="13.0" y="501" width="20.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="15.95" y="511.5" ></text>
</g>
<g >
<title>__sys_recvfrom (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="437" width="28.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1036.63" y="447.5" >__..</text>
</g>
<g >
<title>[perf-86324.map] (1,514,752,299 samples, 27.20%)</title><rect x="61.0" y="501" width="320.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="63.97" y="511.5" >[perf-86324.map]</text>
</g>
<g >
<title>pypy_epoll_wait (13,142,244 samples, 0.24%)</title><rect x="529.8" y="405" width="2.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="532.78" y="415.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_writebarrier_before_copy (14,166,706 samples, 0.25%)</title><rect x="810.8" y="485" width="3.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="813.77" y="495.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (70,757,383 samples, 1.27%)</title><rect x="1175.0" y="501" width="15.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1178.01" y="511.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (12,932,055 samples, 0.23%)</title><rect x="754.1" y="117" width="2.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="757.09" y="127.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (684,600 samples, 0.01%)</title><rect x="1166.2" y="453" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1169.21" y="463.5" ></text>
</g>
<g >
<title>__schedule (74,482,726 samples, 1.34%)</title><rect x="550.1" y="277" width="15.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="553.10" y="287.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (29,467,790 samples, 0.53%)</title><rect x="456.0" y="277" width="6.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="458.99" y="287.5" ></text>
</g>
<g >
<title>update_process_times (12,733,840 samples, 0.23%)</title><rect x="58.3" y="389" width="2.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="61.27" y="399.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (54,163,840 samples, 0.97%)</title><rect x="1154.9" y="501" width="11.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1157.88" y="511.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (16,371,256 samples, 0.29%)</title><rect x="1132.3" y="501" width="3.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1135.29" y="511.5" ></text>
</g>
<g >
<title>dev_queue_xmit (145,066,471 samples, 2.61%)</title><rect x="726.1" y="165" width="30.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="729.09" y="175.5" >de..</text>
</g>
<g >
<title>skb_entail (19,385,015 samples, 0.35%)</title><rect x="664.4" y="341" width="4.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="667.42" y="351.5" ></text>
</g>
<g >
<title>tg3_write32 (11,151,672 samples, 0.20%)</title><rect x="748.2" y="85" width="2.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="751.18" y="95.5" ></text>
</g>
<g >
<title>pypy_g_W_BytesObject_shortcut___len__ (9,848,158 samples, 0.18%)</title><rect x="852.5" y="485" width="2.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="855.52" y="495.5" ></text>
</g>
<g >
<title>__libc_recv (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="501" width="28.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1036.63" y="511.5" >__..</text>
</g>
<g >
<title>pypy_g_force_from_resumedata (14,146,497 samples, 0.25%)</title><rect x="916.2" y="485" width="3.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="919.17" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handler_jit_merge_point (13,295,765 samples, 0.24%)</title><rect x="973.0" y="485" width="2.8" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="975.96" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (22,002,922 samples, 0.40%)</title><rect x="348.4" y="485" width="4.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="351.40" y="495.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (18,335,448 samples, 0.33%)</title><rect x="653.2" y="293" width="3.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="656.21" y="303.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (25,786,739 samples, 0.46%)</title><rect x="464.6" y="277" width="5.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="467.62" y="287.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (12,999,431 samples, 0.23%)</title><rect x="1048.8" y="373" width="2.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1051.82" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_disable (11,564,532 samples, 0.21%)</title><rect x="479.5" y="181" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="482.47" y="191.5" ></text>
</g>
<g >
<title>validate_xmit_skb (12,932,055 samples, 0.23%)</title><rect x="754.1" y="101" width="2.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="757.09" y="111.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (684,600 samples, 0.01%)</title><rect x="1166.2" y="485" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1169.21" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output2 (145,066,471 samples, 2.61%)</title><rect x="726.1" y="181" width="30.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="729.09" y="191.5" >ip..</text>
</g>
<g >
<title>pypy_g_Signature_find_w_argname (52,595,954 samples, 0.94%)</title><rect x="1108.6" y="501" width="11.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1111.62" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (536,015,432 samples, 9.63%)</title><rect x="646.3" y="437" width="113.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="649.27" y="447.5" >__x64_sys_sendto</text>
</g>
<g >
<title>pick_next_task_idle (41,889,884 samples, 0.75%)</title><rect x="509.8" y="245" width="8.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="512.79" y="255.5" ></text>
</g>
<g >
<title>tg3_tx_skb_unmap.isra.0 (16,731,261 samples, 0.30%)</title><rect x="750.5" y="101" width="3.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="753.55" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch (1,554,421 samples, 0.03%)</title><rect x="561.3" y="261" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="564.31" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (12,733,840 samples, 0.23%)</title><rect x="58.3" y="357" width="2.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="61.27" y="367.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (24,909,396 samples, 0.45%)</title><rect x="573.6" y="453" width="5.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="576.61" y="463.5" ></text>
</g>
<g >
<title>epoll_wait (179,519,717 samples, 3.22%)</title><rect x="532.6" y="421" width="38.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="535.56" y="431.5" >epo..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (87,425,776 samples, 1.57%)</title><rect x="785.5" y="485" width="18.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="788.47" y="495.5" ></text>
</g>
<g >
<title>rpc_pipefs_notifier_list (11,151,672 samples, 0.20%)</title><rect x="748.2" y="101" width="2.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="751.18" y="111.5" ></text>
</g>
<g >
<title>sock_poll (29,467,790 samples, 0.53%)</title><rect x="456.0" y="261" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="458.99" y="271.5" ></text>
</g>
<g >
<title>[unknown] (702,439,116 samples, 12.61%)</title><rect x="421.8" y="453" width="148.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="424.76" y="463.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1525___simple_call__function_ (23,819,784 samples, 0.43%)</title><rect x="362.1" y="485" width="5.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="365.09" y="495.5" ></text>
</g>
<g >
<title>kmalloc_slab (9,300,826 samples, 0.17%)</title><rect x="742.9" y="37" width="2.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="745.95" y="47.5" ></text>
</g>
<g >
<title>auth_flavors (10,595,589 samples, 0.19%)</title><rect x="738.2" y="101" width="2.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="741.19" y="111.5" ></text>
</g>
<g >
<title>sched_clock_cpu (16,593,715 samples, 0.30%)</title><rect x="481.9" y="213" width="3.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="484.92" y="223.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (15,363,762 samples, 0.28%)</title><rect x="539.1" y="309" width="3.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="542.10" y="319.5" ></text>
</g>
<g >
<title>pypy_g_eq_w (12,698,473 samples, 0.23%)</title><rect x="1147.6" y="501" width="2.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1150.59" y="511.5" ></text>
</g>
<g >
<title>pypy_g_comparison_eq_impl (11,563,680 samples, 0.21%)</title><rect x="889.4" y="485" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="892.43" y="495.5" ></text>
</g>
<g >
<title>pypy_g_makespecialisedtuple2 (34,474,605 samples, 0.62%)</title><rect x="996.3" y="485" width="7.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="999.34" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_disable_all (11,564,532 samples, 0.21%)</title><rect x="479.5" y="165" width="2.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="482.47" y="175.5" ></text>
</g>
<g >
<title>__ip_finish_output (145,066,471 samples, 2.61%)</title><rect x="726.1" y="197" width="30.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="729.09" y="207.5" >__..</text>
</g>
<g >
<title>copy_user_generic_unrolled (9,562,409 samples, 0.17%)</title><rect x="651.2" y="325" width="2.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="654.19" y="335.5" ></text>
</g>
<g >
<title>pypy_g_BuiltinCode1_fastcall_1 (12,593,361 samples, 0.23%)</title><rect x="589.8" y="469" width="2.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="592.82" y="479.5" ></text>
</g>
<g >
<title>pypy_g_handler_int_copy (12,643,314 samples, 0.23%)</title><rect x="970.3" y="485" width="2.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="973.28" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (536,015,432 samples, 9.63%)</title><rect x="646.3" y="453" width="113.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="649.27" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>pypy_g_funccall_valuestack__AccessDirect_None (9,291,879 samples, 0.17%)</title><rect x="639.4" y="469" width="2.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="642.40" y="479.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_writebarrier_before_copy (27,306,222 samples, 0.49%)</title><rect x="617.8" y="469" width="5.8" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="620.78" y="479.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (96,437,566 samples, 1.73%)</title><rect x="695.9" y="197" width="20.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="698.85" y="207.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (44,699,761 samples, 0.80%)</title><rect x="1099.1" y="501" width="9.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1102.15" y="511.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (51,926,176 samples, 0.93%)</title><rect x="539.1" y="325" width="11.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="542.10" y="335.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (15,762,174 samples, 0.28%)</title><rect x="367.1" y="485" width="3.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="370.14" y="495.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (403,663,302 samples, 7.25%)</title><rect x="674.3" y="325" width="85.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="677.32" y="335.5" >__tcp_push..</text>
</g>
<g >
<title>rcu_all_qs (16,326,794 samples, 0.29%)</title><rect x="546.6" y="293" width="3.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="549.65" y="303.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (9,562,409 samples, 0.17%)</title><rect x="651.2" y="341" width="2.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="654.19" y="351.5" ></text>
</g>
<g >
<title>drm_connector_attach_content_protection_property (72,244,492 samples, 1.30%)</title><rect x="695.9" y="181" width="15.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="698.85" y="191.5" ></text>
</g>
<g >
<title>memset_erms (15,405,784 samples, 0.28%)</title><rect x="744.9" y="37" width="3.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="747.92" y="47.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_rawrefcount_create_link_py (20,287,082 samples, 0.36%)</title><rect x="806.5" y="485" width="4.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="809.47" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (548,785,653 samples, 9.85%)</title><rect x="643.6" y="469" width="116.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="646.57" y="479.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (11,120,769 samples, 0.20%)</title><rect x="284.5" y="485" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="287.48" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handler_inline_call_r_v (187,998,929 samples, 3.38%)</title><rect x="930.4" y="485" width="39.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="933.44" y="495.5" >pyp..</text>
</g>
<g >
<title>aa_sk_perm (21,418,077 samples, 0.38%)</title><rect x="1057.9" y="373" width="4.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1060.86" y="383.5" ></text>
</g>
<g >
<title>pypy_g_newfloat (12,210,573 samples, 0.22%)</title><rect x="1166.4" y="501" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1169.36" y="511.5" ></text>
</g>
<g >
<title>pypy_g__match_keywords__v1018___simple_call__function_ (12,287,854 samples, 0.22%)</title><rect x="324.8" y="485" width="2.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="327.84" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_fail (31,574,952 samples, 0.57%)</title><rect x="297.1" y="485" width="6.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="300.10" y="495.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (28,602,170 samples, 0.51%)</title><rect x="1168.9" y="501" width="6.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1171.95" y="511.5" ></text>
</g>
<g >
<title>ep_send_events_proc (29,467,790 samples, 0.53%)</title><rect x="456.0" y="293" width="6.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="458.99" y="303.5" ></text>
</g>
<g >
<title>pypy_g__ll_1_weakref_create__pypy_interpreter_generator (24,458,613 samples, 0.44%)</title><rect x="314.4" y="485" width="5.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="317.38" y="495.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (36,564,847 samples, 0.66%)</title><rect x="740.4" y="101" width="7.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="743.44" y="111.5" ></text>
</g>
<g >
<title>epoll_wait (496,481,390 samples, 8.92%)</title><rect x="424.6" y="405" width="105.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="427.57" y="415.5" >epoll_wait</text>
</g>
<g >
<title>update_cfs_group (21,064,436 samples, 0.38%)</title><rect x="554.7" y="229" width="4.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="557.66" y="239.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,228,998 samples, 0.18%)</title><rect x="1046.7" y="357" width="2.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1049.65" y="367.5" ></text>
</g>
<g >
<title>default_wake_function (17,969,383 samples, 0.32%)</title><rect x="448.8" y="245" width="3.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="451.79" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,383,453 samples, 0.19%)</title><rect x="641.4" y="469" width="2.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="644.37" y="479.5" ></text>
</g>
<g >
<title>ep_poll (157,271,476 samples, 2.82%)</title><rect x="532.6" y="341" width="33.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="535.56" y="351.5" >ep..</text>
</g>
<g >
<title>_copy_to_iter (12,999,431 samples, 0.23%)</title><rect x="1048.8" y="325" width="2.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1051.82" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1,036,392,983 samples, 18.61%)</title><rect x="421.8" y="485" width="219.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="424.76" y="495.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_ExecutionContext_leave (11,650,877 samples, 0.21%)</title><rect x="804.0" y="485" width="2.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="807.00" y="495.5" ></text>
</g>
<g >
<title>ip_send_check (28,041,805 samples, 0.50%)</title><rect x="679.0" y="213" width="6.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="682.05" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (12,733,840 samples, 0.23%)</title><rect x="58.3" y="469" width="2.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="61.27" y="479.5" ></text>
</g>
<g >
<title>pypy_g_JitCode_get_live_vars_info (10,297,028 samples, 0.18%)</title><rect x="813.8" y="485" width="2.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="816.77" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ccall_send__INT_arrayPtr_Unsigned_INT (16,502,574 samples, 0.30%)</title><rect x="885.9" y="485" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="888.93" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (157,271,476 samples, 2.82%)</title><rect x="532.6" y="357" width="33.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="535.56" y="367.5" >do..</text>
</g>
<g >
<title>ctx_sched_out (11,564,532 samples, 0.21%)</title><rect x="479.5" y="213" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="482.47" y="223.5" ></text>
</g>
<g >
<title>pypy_g__operate (10,425,346 samples, 0.19%)</title><rect x="625.6" y="469" width="2.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="628.59" y="479.5" ></text>
</g>
<g >
<title>pypy_g_call_stub_201 (9,679,775 samples, 0.17%)</title><rect x="880.0" y="485" width="2.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="882.97" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (52,878,415 samples, 0.95%)</title><rect x="653.2" y="325" width="11.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="656.21" y="335.5" ></text>
</g>
<g >
<title>pypy_g__ll_list_resize_hint_really__v1368___simple_call (11,808,457 samples, 0.21%)</title><rect x="1124.6" y="501" width="2.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1127.58" y="511.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (129,900,152 samples, 2.33%)</title><rect x="33.4" y="501" width="27.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="36.45" y="511.5" >[..</text>
</g>
<g >
<title>syscall_return_via_sysret (11,401,258 samples, 0.20%)</title><rect x="273.4" y="469" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="276.41" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (74,482,726 samples, 1.34%)</title><rect x="550.1" y="309" width="15.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="553.10" y="319.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (43,313,545 samples, 0.78%)</title><rect x="1013.3" y="485" width="9.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1016.31" y="495.5" ></text>
</g>
<g >
<title>put_prev_entity (10,544,674 samples, 0.19%)</title><rect x="509.8" y="229" width="2.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="512.79" y="239.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1543___simple_call__fu (16,154,074 samples, 0.29%)</title><rect x="354.8" y="485" width="3.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="357.76" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (10,334,146 samples, 0.19%)</title><rect x="559.1" y="245" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="562.12" y="255.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__init (14,338,948 samples, 0.26%)</title><rect x="826.8" y="485" width="3.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="829.80" y="495.5" ></text>
</g>
<g >
<title>[unknown] (702,439,116 samples, 12.61%)</title><rect x="421.8" y="437" width="148.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="424.76" y="447.5" >[unknown]</text>
</g>
<g >
<title>do_syscall_64 (157,271,476 samples, 2.82%)</title><rect x="532.6" y="389" width="33.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="535.56" y="399.5" >do..</text>
</g>
<g >
<title>dequeue_task_fair (42,555,074 samples, 0.76%)</title><rect x="550.1" y="245" width="9.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="553.10" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (24,706,610 samples, 0.44%)</title><rect x="742.9" y="53" width="5.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="745.95" y="63.5" ></text>
</g>
<g >
<title>scheduler_tick (12,733,840 samples, 0.23%)</title><rect x="58.3" y="373" width="2.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="61.27" y="383.5" ></text>
</g>
<g >
<title>pypy_g_force_virtual (13,527,587 samples, 0.24%)</title><rect x="345.5" y="485" width="2.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="348.53" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (10,785,241 samples, 0.19%)</title><rect x="759.9" y="485" width="2.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="762.85" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handle_jitexception_from_blackhole_57 (10,476,527 samples, 0.19%)</title><rect x="928.2" y="485" width="2.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="931.22" y="495.5" ></text>
</g>
<g >
<title>visit_groups_merge (9,795,849 samples, 0.18%)</title><rect x="504.7" y="181" width="2.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="507.70" y="191.5" ></text>
</g>
<g >
<title>pypy_g_bytes_attach (10,751,029 samples, 0.19%)</title><rect x="877.7" y="485" width="2.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="880.69" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1,554,421 samples, 0.03%)</title><rect x="561.3" y="245" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="564.31" y="255.5" ></text>
</g>
<g >
<title>all (5,568,730,284 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (75,043,369 samples, 1.35%)</title><rect x="738.2" y="117" width="15.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="741.19" y="127.5" ></text>
</g>
<g >
<title>pypy_g_LLBuffer_get_raw_address (11,205,859 samples, 0.20%)</title><rect x="1089.6" y="501" width="2.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1092.63" y="511.5" ></text>
</g>
<g >
<title>perf_event_sched_in (9,795,849 samples, 0.18%)</title><rect x="504.7" y="213" width="2.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="507.70" y="223.5" ></text>
</g>
<g >
<title>sem_wait@@GLIBC_2.2.5 (8,537,835 samples, 0.15%)</title><rect x="1022.5" y="485" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1025.49" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_build__v1269___simple_call__function_ (7,995,715 samples, 0.14%)</title><rect x="353.1" y="485" width="1.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="356.06" y="495.5" ></text>
</g>
<g >
<title>pypy_g_LOAD_GLOBAL_cached__AccessDirect_None (11,103,000 samples, 0.20%)</title><rect x="816.0" y="485" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="818.95" y="495.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (15,290,219 samples, 0.27%)</title><rect x="466.8" y="261" width="3.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="469.84" y="271.5" ></text>
</g>
<g >
<title>pypy_g_STORE_ATTR__AccessDirect_None (20,802,193 samples, 0.37%)</title><rect x="848.1" y="485" width="4.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="851.11" y="495.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_send (12,925,552 samples, 0.23%)</title><rect x="1092.0" y="501" width="2.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1095.00" y="511.5" ></text>
</g>
<g >
<title>ep_send_events_proc (20,235,620 samples, 0.36%)</title><rect x="542.4" y="309" width="4.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="545.36" y="319.5" ></text>
</g>
<g >
<title>pypy_g_BuiltinCode1_fastcall_1.part.0 (18,292,430 samples, 0.33%)</title><rect x="592.5" y="469" width="3.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="595.48" y="479.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (52,878,415 samples, 0.95%)</title><rect x="653.2" y="341" width="11.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="656.21" y="351.5" ></text>
</g>
<g >
<title>schedule (229,311,643 samples, 4.12%)</title><rect x="470.1" y="277" width="48.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="473.08" y="287.5" >sche..</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1441___simple_call__function_ (10,065,754 samples, 0.18%)</title><rect x="1150.3" y="501" width="2.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1153.28" y="511.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (36,714,225 samples, 0.66%)</title><rect x="522.0" y="389" width="7.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="525.00" y="399.5" ></text>
</g>
<g >
<title>pypy_g_handler_setarrayitem_vable_r (12,398,544 samples, 0.22%)</title><rect x="975.8" y="485" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="978.77" y="495.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (524,752,044 samples, 9.42%)</title><rect x="648.7" y="357" width="111.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="651.66" y="367.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>netif_skb_features (12,932,055 samples, 0.23%)</title><rect x="754.1" y="85" width="2.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="757.09" y="95.5" ></text>
</g>
<g >
<title>pypy_g__extend_from_tuple__v354___simple_call__function (13,559,774 samples, 0.24%)</title><rect x="306.1" y="485" width="2.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="309.14" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output (154,095,769 samples, 2.77%)</title><rect x="724.2" y="213" width="32.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="727.18" y="223.5" >ip..</text>
</g>
<g >
<title>pypy_g_jit_rvmprof_code (17,165,790 samples, 0.31%)</title><rect x="982.0" y="485" width="3.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="985.03" y="495.5" ></text>
</g>
<g >
<title>sock_sendmsg (536,015,432 samples, 9.63%)</title><rect x="646.3" y="405" width="113.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="649.27" y="415.5" >sock_sendmsg</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="485" width="28.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1036.63" y="495.5" >en..</text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (18,335,448 samples, 0.33%)</title><rect x="653.2" y="309" width="3.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="656.21" y="319.5" ></text>
</g>
<g >
<title>pypy_g_shortcut_comparison (23,264,986 samples, 0.42%)</title><rect x="1008.4" y="485" width="4.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1011.38" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (421,795,877 samples, 7.57%)</title><rect x="432.6" y="389" width="89.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="435.62" y="399.5" >entry_SYSC..</text>
</g>
<g >
<title>pypy_g__ll_dict_setitem_lookup_done__v1669___simple_cal (11,225,003 samples, 0.20%)</title><rect x="319.6" y="485" width="2.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="322.57" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (22,248,241 samples, 0.40%)</title><rect x="565.9" y="405" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="568.89" y="415.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (63,468,043 samples, 1.14%)</title><rect x="448.8" y="309" width="13.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="451.79" y="319.5" ></text>
</g>
<g >
<title>pypy_g_BaseCpyTypedescr_allocate (12,773,272 samples, 0.23%)</title><rect x="1079.1" y="501" width="2.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1082.14" y="511.5" ></text>
</g>
<g >
<title>nf_hook_slow (133,676,733 samples, 2.40%)</title><rect x="695.9" y="213" width="28.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="698.85" y="223.5" >nf..</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_ignore_finalizer (14,663,349 samples, 0.26%)</title><rect x="289.0" y="485" width="3.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="291.96" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (60,415,408 samples, 1.08%)</title><rect x="596.4" y="469" width="12.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="599.36" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (157,271,476 samples, 2.82%)</title><rect x="532.6" y="405" width="33.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="535.56" y="415.5" >en..</text>
</g>
<g >
<title>pick_next_task_fair (14,253,254 samples, 0.26%)</title><rect x="506.8" y="245" width="3.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="509.77" y="255.5" ></text>
</g>
<g >
<title>pick_next_task_fair (20,039,085 samples, 0.36%)</title><rect x="561.6" y="261" width="4.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="564.64" y="271.5" ></text>
</g>
<g >
<title>dequeue_entity (28,822,312 samples, 0.52%)</title><rect x="493.2" y="213" width="6.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="496.21" y="223.5" ></text>
</g>
<g >
<title>pypy_g__run_forever (51,586,165 samples, 0.93%)</title><rect x="578.9" y="453" width="10.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="581.88" y="463.5" ></text>
</g>
<g >
<title>ip_queue_xmit (367,099,082 samples, 6.59%)</title><rect x="679.0" y="277" width="77.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="682.05" y="287.5" >ip_queue..</text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (16,624,084 samples, 0.30%)</title><rect x="987.7" y="485" width="3.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="990.73" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_malloc (9,780,369 samples, 0.18%)</title><rect x="1077.1" y="501" width="2.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1080.06" y="511.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (9,029,298 samples, 0.16%)</title><rect x="724.2" y="197" width="1.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="727.18" y="207.5" ></text>
</g>
<g >
<title>iptable_filter_hook (51,284,775 samples, 0.92%)</title><rect x="685.0" y="213" width="10.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="687.99" y="223.5" ></text>
</g>
<g >
<title>timerqueue_add (10,496,520 samples, 0.19%)</title><rect x="464.6" y="245" width="2.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="467.62" y="255.5" ></text>
</g>
<g >
<title>pypy_g__getitem_correct_indirection__v940___simple_call (25,351,579 samples, 0.46%)</title><rect x="309.0" y="485" width="5.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="312.01" y="495.5" ></text>
</g>
<g >
<title>[perf-86324.map] (876,807,200 samples, 15.75%)</title><rect x="64.0" y="485" width="185.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="67.05" y="495.5" >[perf-86324.map]</text>
</g>
<g >
<title>__errno_location (11,738,278 samples, 0.21%)</title><rect x="1031.1" y="501" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1034.14" y="511.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_2_2 (12,007,153 samples, 0.22%)</title><rect x="910.8" y="485" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="913.80" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (11,564,532 samples, 0.21%)</title><rect x="479.5" y="149" width="2.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="482.47" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,733,840 samples, 0.23%)</title><rect x="58.3" y="453" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="61.27" y="463.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (42,722,995 samples, 0.77%)</title><rect x="1138.5" y="501" width="9.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1141.53" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (12,770,221 samples, 0.23%)</title><rect x="643.6" y="453" width="2.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="646.57" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (406,378,756 samples, 7.30%)</title><rect x="435.9" y="373" width="86.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="438.89" y="383.5" >do_syscall..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (21,418,077 samples, 0.38%)</title><rect x="1057.9" y="389" width="4.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1060.86" y="399.5" ></text>
</g>
<g >
<title>cfree (25,365,507 samples, 0.46%)</title><rect x="762.1" y="485" width="5.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="765.14" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_int (11,619,639 samples, 0.21%)</title><rect x="1096.7" y="501" width="2.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1099.68" y="511.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (51,099,194 samples, 0.92%)</title><rect x="1051.6" y="405" width="10.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1054.58" y="415.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (8,537,835 samples, 0.15%)</title><rect x="460.4" y="245" width="1.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="463.42" y="255.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (28,158,247 samples, 0.51%)</title><rect x="479.5" y="229" width="5.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="482.47" y="239.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (11,240,212 samples, 0.20%)</title><rect x="462.2" y="309" width="2.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="465.23" y="319.5" ></text>
</g>
<g >
<title>hdmi_mode_alternate_clock (13,625,637 samples, 0.24%)</title><rect x="735.3" y="117" width="2.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="738.30" y="127.5" ></text>
</g>
<g >
<title>tcp_sendmsg (536,015,432 samples, 9.63%)</title><rect x="646.3" y="373" width="113.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="649.27" y="383.5" >tcp_sendmsg</text>
</g>
<g >
<title>schedule_hrtimeout_range (255,098,382 samples, 4.58%)</title><rect x="464.6" y="309" width="54.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="467.62" y="319.5" >sched..</text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (54,752,114 samples, 0.98%)</title><rect x="627.8" y="469" width="11.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="630.80" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (135,789,715 samples, 2.44%)</title><rect x="1033.6" y="453" width="28.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1036.63" y="463.5" >__..</text>
</g>
<g >
<title>tcp_recvmsg (84,690,521 samples, 1.52%)</title><rect x="1033.6" y="389" width="18.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1036.63" y="399.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (11,055,729 samples, 0.20%)</title><rect x="303.8" y="485" width="2.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="306.79" y="495.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (55,352,706 samples, 0.99%)</title><rect x="410.0" y="485" width="11.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="413.03" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (15,943,392 samples, 0.29%)</title><rect x="1068.0" y="485" width="3.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1071.00" y="495.5" ></text>
</g>
<g >
<title>pypy_g_hash_w (17,109,303 samples, 0.31%)</title><rect x="978.4" y="485" width="3.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="981.40" y="495.5" ></text>
</g>
<g >
<title>clock_gettime (33,189,101 samples, 0.60%)</title><rect x="1064.3" y="501" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1067.34" y="511.5" ></text>
</g>
<g >
<title>pypy_g_make_ref (11,137,779 samples, 0.20%)</title><rect x="994.0" y="485" width="2.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="996.98" y="495.5" ></text>
</g>
<g >
<title>tcp_in_window (13,661,023 samples, 0.25%)</title><rect x="708.3" y="149" width="2.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="711.27" y="159.5" ></text>
</g>
<g >
<title>pypy_g_LOAD_GLOBAL_cached__AccessDirect_None (9,541,909 samples, 0.17%)</title><rect x="623.6" y="469" width="2.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="626.56" y="479.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (16,030,870 samples, 0.29%)</title><rect x="452.6" y="293" width="3.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="455.59" y="303.5" ></text>
</g>
<g >
<title>pypy_g__ll_strhash__rpy_stringPtr (10,276,973 samples, 0.18%)</title><rect x="861.4" y="485" width="2.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="864.43" y="495.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (367,099,082 samples, 6.59%)</title><rect x="679.0" y="261" width="77.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="682.05" y="271.5" >__ip_que..</text>
</g>
<g >
<title>entry_SYSCALL_64 (63,942,781 samples, 1.15%)</title><rect x="254.5" y="469" width="13.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="257.53" y="479.5" ></text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (41,338,300 samples, 0.74%)</title><rect x="863.6" y="485" width="8.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="866.61" y="495.5" ></text>
</g>
<g >
<title>pypy_g_force_virtual (9,291,879 samples, 0.17%)</title><rect x="919.2" y="485" width="1.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="922.17" y="495.5" ></text>
</g>
<g >
<title>__perf_event_enable (684,600 samples, 0.01%)</title><rect x="1166.2" y="389" width="0.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1169.21" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (25,124,605 samples, 0.45%)</title><rect x="268.1" y="453" width="5.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="271.08" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (145,066,471 samples, 2.61%)</title><rect x="726.1" y="149" width="30.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="729.09" y="159.5" >__..</text>
</g>
<g >
<title>newidle_balance (20,039,085 samples, 0.36%)</title><rect x="561.6" y="245" width="4.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="564.64" y="255.5" ></text>
</g>
<g >
<title>inet_recvmsg (84,690,521 samples, 1.52%)</title><rect x="1033.6" y="405" width="18.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1036.63" y="415.5" ></text>
</g>
<g >
<title>trace_event_type_funcs_xprt_transmit (10,595,589 samples, 0.19%)</title><rect x="738.2" y="85" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="741.19" y="95.5" ></text>
</g>
<g >
<title>pypy_g_monotonic_1 (15,647,250 samples, 0.28%)</title><rect x="375.8" y="485" width="3.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="378.85" y="495.5" ></text>
</g>
<g >
<title>__schedule (197,248,990 samples, 3.54%)</title><rect x="476.9" y="261" width="41.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="479.87" y="271.5" >__s..</text>
</g>
<g >
<title>cfree (9,146,870 samples, 0.16%)</title><rect x="1062.4" y="501" width="1.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1065.40" y="511.5" ></text>
</g>
<g >
<title>event_function (684,600 samples, 0.01%)</title><rect x="1166.2" y="405" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1169.21" y="415.5" ></text>
</g>
<g >
<title>__wake_up (17,969,383 samples, 0.32%)</title><rect x="448.8" y="293" width="3.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="451.79" y="303.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (255,098,382 samples, 4.58%)</title><rect x="464.6" y="293" width="54.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="467.62" y="303.5" >sched..</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_register_finalizer (40,659,911 samples, 0.73%)</title><rect x="609.2" y="469" width="8.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="612.16" y="479.5" ></text>
</g>
<g >
<title>ctx_sched_in (9,795,849 samples, 0.18%)</title><rect x="504.7" y="197" width="2.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="507.70" y="207.5" ></text>
</g>
<g >
<title>[unknown] (793,114,403 samples, 14.24%)</title><rect x="421.8" y="469" width="168.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="424.76" y="479.5" >[unknown]</text>
</g>
<g >
<title>deactivate_task (76,254,740 samples, 1.37%)</title><rect x="488.5" y="245" width="16.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="491.54" y="255.5" ></text>
</g>
<g >
<title>put_prev_entity (31,345,210 samples, 0.56%)</title><rect x="512.0" y="213" width="6.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="515.03" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (15,417,121 samples, 0.28%)</title><rect x="432.6" y="373" width="3.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="435.62" y="383.5" ></text>
</g>
<g >
<title>ip_output (154,095,769 samples, 2.77%)</title><rect x="724.2" y="229" width="32.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="727.18" y="239.5" >ip..</text>
</g>
<g >
<title>pypy_g_ObjectListStrategy_init_from_list_w (14,255,265 samples, 0.26%)</title><rect x="820.5" y="485" width="3.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="823.54" y="495.5" ></text>
</g>
<g >
<title>__ksize (17,392,376 samples, 0.31%)</title><rect x="660.7" y="293" width="3.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="663.73" y="303.5" ></text>
</g>
<g >
<title>pypy_g_ccall_pypy_epoll_wait__INT_arrayPtr_arrayPtr_INT (13,105,959 samples, 0.24%)</title><rect x="1135.8" y="501" width="2.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1138.76" y="511.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (684,600 samples, 0.01%)</title><rect x="1166.2" y="437" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1169.21" y="447.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (10,496,520 samples, 0.19%)</title><rect x="464.6" y="261" width="2.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="467.62" y="271.5" ></text>
</g>
<g >
<title>__ip_local_out (213,003,313 samples, 3.82%)</title><rect x="679.0" y="229" width="45.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="682.05" y="239.5" >__ip..</text>
</g>
<g >
<title>perf_event_sched_in (1,543,248 samples, 0.03%)</title><rect x="561.3" y="229" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="564.31" y="239.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_2 (9,865,772 samples, 0.18%)</title><rect x="921.1" y="485" width="2.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="924.14" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (48,142,066 samples, 0.86%)</title><rect x="837.9" y="485" width="10.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="840.91" y="495.5" ></text>
</g>
<g >
<title>malloc (26,851,580 samples, 0.48%)</title><rect x="1071.4" y="501" width="5.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1074.37" y="511.5" ></text>
</g>
<g >
<title>get_l4proto (10,992,813 samples, 0.20%)</title><rect x="714.0" y="165" width="2.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="716.96" y="175.5" ></text>
</g>
<g >
<title>pypy_g_comparison_lt_impl (10,212,867 samples, 0.18%)</title><rect x="891.9" y="485" width="2.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="894.88" y="495.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (20,235,620 samples, 0.36%)</title><rect x="542.4" y="293" width="4.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="545.36" y="303.5" ></text>
</g>
<g >
<title>pypy_g_allocate_instance__W_BytesObject (12,059,528 samples, 0.22%)</title><rect x="872.4" y="485" width="2.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="875.37" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (11,564,532 samples, 0.21%)</title><rect x="479.5" y="197" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="482.47" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14,642,256 samples, 0.26%)</title><rect x="485.4" y="245" width="3.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="488.44" y="255.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_loop (67,425,137 samples, 1.21%)</title><rect x="894.0" y="485" width="14.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.04" y="495.5" ></text>
</g>
<g >
<title>pypy_g_MIFrame_run_one_step (10,550,818 samples, 0.19%)</title><rect x="818.3" y="485" width="2.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="821.30" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (12,733,840 samples, 0.23%)</title><rect x="58.3" y="485" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="61.27" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (14,179,726 samples, 0.25%)</title><rect x="570.6" y="453" width="3.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="573.60" y="463.5" ></text>
</g>
<g >
<title>pthread_testcancel (16,785,088 samples, 0.30%)</title><rect x="773.0" y="485" width="3.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="776.02" y="495.5" ></text>
</g>
<g >
<title>pypy_g_Reader_next_item (9,174,190 samples, 0.16%)</title><rect x="1094.7" y="501" width="2.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1097.74" y="511.5" ></text>
</g>
<g >
<title>pypy_g_force_now_1 (9,728,170 samples, 0.17%)</title><rect x="343.5" y="485" width="2.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="346.47" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (352,619,612 samples, 6.33%)</title><rect x="444.0" y="357" width="74.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="446.95" y="367.5" >__x64_sy..</text>
</g>
<g >
<title>inflate (26,012,732 samples, 0.47%)</title><rect x="767.5" y="485" width="5.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="770.51" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (24,706,610 samples, 0.44%)</title><rect x="742.9" y="69" width="5.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="745.95" y="79.5" ></text>
</g>
<g >
<title>[unknown] (522,919,399 samples, 9.39%)</title><rect x="421.8" y="421" width="110.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="424.76" y="431.5" >[unknown]</text>
</g>
<g >
<title>ksize (17,392,376 samples, 0.31%)</title><rect x="660.7" y="309" width="3.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="663.73" y="319.5" ></text>
</g>
<g >
<title>pypy_g_PyErr_Occurred (23,779,317 samples, 0.43%)</title><rect x="292.1" y="485" width="5.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="295.07" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (74,482,726 samples, 1.34%)</title><rect x="550.1" y="325" width="15.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="553.10" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (12,733,840 samples, 0.23%)</title><rect x="58.3" y="437" width="2.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="61.27" y="447.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (22,725,165 samples, 0.41%)</title><rect x="1119.8" y="501" width="4.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1122.76" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (38,058,195 samples, 0.68%)</title><rect x="829.8" y="485" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="832.84" y="495.5" ></text>
</g>
<g >
<title>mutex_lock (16,326,794 samples, 0.29%)</title><rect x="546.6" y="309" width="3.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="549.65" y="319.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader___init__ (15,310,687 samples, 0.27%)</title><rect x="823.6" y="485" width="3.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="826.56" y="495.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (11,263,388 samples, 0.20%)</title><rect x="646.3" y="357" width="2.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="649.27" y="367.5" ></text>
</g>
<g >
<title>pypy_g_ll_streq__rpy_stringPtr_rpy_stringPtr (25,318,370 samples, 0.45%)</title><rect x="370.5" y="485" width="5.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="373.48" y="495.5" ></text>
</g>
<g >
<title>schedule (74,482,726 samples, 1.34%)</title><rect x="550.1" y="293" width="15.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="553.10" y="303.5" ></text>
</g>
<g >
<title>pypy_g_bh_getfield_gc_i___ptr (12,473,972 samples, 0.22%)</title><rect x="1129.6" y="501" width="2.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1132.64" y="511.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (11,653,183 samples, 0.21%)</title><rect x="908.3" y="485" width="2.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="911.33" y="495.5" ></text>
</g>
<g >
<title>sch_direct_xmit (87,975,424 samples, 1.58%)</title><rect x="738.2" y="133" width="18.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="741.19" y="143.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (27,336,401 samples, 0.49%)</title><rect x="668.5" y="341" width="5.8" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="671.52" y="351.5" ></text>
</g>
<g >
<title>__wake_up_common (17,969,383 samples, 0.32%)</title><rect x="448.8" y="261" width="3.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="451.79" y="271.5" ></text>
</g>
</g>
</svg>
