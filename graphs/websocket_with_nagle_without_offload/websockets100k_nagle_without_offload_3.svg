<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>nf_conntrack_tcp_packet (13,137,773 samples, 0.24%)</title><rect x="615.8" y="149" width="2.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="618.82" y="159.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (11,156,739 samples, 0.20%)</title><rect x="542.9" y="309" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="545.89" y="319.5" ></text>
</g>
<g >
<title>pypy_g_ll_grow_and_append__stringbuilderPtr_rpy_stringP (15,575,637 samples, 0.28%)</title><rect x="387.1" y="469" width="3.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="390.11" y="479.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__R (12,746,386 samples, 0.23%)</title><rect x="880.6" y="469" width="2.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="883.59" y="479.5" ></text>
</g>
<g >
<title>__ip_local_out (108,977,997 samples, 1.98%)</title><rect x="610.2" y="213" width="23.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="613.15" y="223.5" >_..</text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_async_forcing (14,748,137 samples, 0.27%)</title><rect x="318.5" y="469" width="3.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="321.51" y="479.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_register_finalizer (11,956,740 samples, 0.22%)</title><rect x="564.5" y="453" width="2.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="567.50" y="463.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (290,964,362 samples, 5.29%)</title><rect x="610.2" y="245" width="62.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="613.15" y="255.5" >__ip_q..</text>
</g>
<g >
<title>all (5,495,470,564 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>pypy_g__check_len_result (314,716,504 samples, 5.73%)</title><rect x="809.3" y="469" width="67.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="812.32" y="479.5" >pypy_g_..</text>
</g>
<g >
<title>rb_next (14,072,615 samples, 0.26%)</title><rect x="23.8" y="325" width="3.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="26.79" y="335.5" ></text>
</g>
<g >
<title>kfree_skbmem (11,570,464 samples, 0.21%)</title><rect x="1019.0" y="341" width="2.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1022.01" y="351.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader___init__ (17,350,080 samples, 0.32%)</title><rect x="764.2" y="469" width="3.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="767.23" y="479.5" ></text>
</g>
<g >
<title>pypy_g_force_now_1 (67,987,006 samples, 1.24%)</title><rect x="359.8" y="469" width="14.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="362.82" y="479.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (93,013,810 samples, 1.69%)</title><rect x="406.0" y="469" width="19.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="408.95" y="479.5" ></text>
</g>
<g >
<title>sock_poll (58,606,781 samples, 1.07%)</title><rect x="463.6" y="261" width="12.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="466.56" y="271.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_1 (14,885,502 samples, 0.27%)</title><rect x="931.6" y="469" width="3.2" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="934.61" y="479.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (13,054,889 samples, 0.24%)</title><rect x="502.1" y="181" width="2.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="505.08" y="191.5" ></text>
</g>
<g >
<title>pypy_g_bh_getfield_gc_i___ptr (12,560,913 samples, 0.23%)</title><rect x="1127.1" y="485" width="2.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1130.12" y="495.5" ></text>
</g>
<g >
<title>__sys_recvfrom (134,177,000 samples, 2.44%)</title><rect x="1012.3" y="421" width="28.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1015.30" y="431.5" >__..</text>
</g>
<g >
<title>__libc_recv (167,272,741 samples, 3.04%)</title><rect x="1009.2" y="485" width="35.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1012.18" y="495.5" >__l..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_virtualref_info (13,459,625 samples, 0.24%)</title><rect x="1080.1" y="485" width="2.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1083.07" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (25,702,146 samples, 0.47%)</title><rect x="458.0" y="277" width="5.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="461.04" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (12,914,217 samples, 0.23%)</title><rect x="460.8" y="229" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="463.79" y="239.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (15,457,864 samples, 0.28%)</title><rect x="32.2" y="325" width="3.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="35.22" y="335.5" ></text>
</g>
<g >
<title>pypy_g_handler_setfield_vable_i (20,935,690 samples, 0.38%)</title><rect x="949.7" y="469" width="4.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="952.69" y="479.5" ></text>
</g>
<g >
<title>update_load_avg (27,608,801 samples, 0.50%)</title><rect x="502.1" y="197" width="5.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="505.08" y="207.5" ></text>
</g>
<g >
<title>skb_entail (16,482,397 samples, 0.30%)</title><rect x="603.7" y="325" width="3.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="606.70" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2,858,507,576 samples, 52.02%)</title><rect x="395.4" y="485" width="613.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="398.40" y="495.5" >[unknown]</text>
</g>
<g >
<title>pick_next_task_idle (16,908,193 samples, 0.31%)</title><rect x="539.3" y="245" width="3.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="542.26" y="255.5" ></text>
</g>
<g >
<title>pypy_g_resume_in_blackhole (27,900,721 samples, 0.51%)</title><rect x="938.2" y="453" width="6.0" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="941.23" y="463.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (13,576,819 samples, 0.25%)</title><rect x="1021.5" y="357" width="2.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1024.49" y="367.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1637___simple_call__function_ (11,966,702 samples, 0.22%)</title><rect x="1158.5" y="485" width="2.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1161.47" y="495.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (12,559,764 samples, 0.23%)</title><rect x="889.7" y="469" width="2.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="892.68" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (522,293,725 samples, 9.50%)</title><rect x="433.1" y="389" width="112.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="436.14" y="399.5" >entry_SYSCALL..</text>
</g>
<g >
<title>tcp_write_xmit (319,424,704 samples, 5.81%)</title><rect x="607.2" y="293" width="68.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="610.24" y="303.5" >tcp_wri..</text>
</g>
<g >
<title>psi_task_change (66,355,725 samples, 1.21%)</title><rect x="508.0" y="229" width="14.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="511.01" y="239.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (27,252,830 samples, 0.50%)</title><rect x="1184.1" y="485" width="5.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1187.15" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (28,809,728 samples, 0.52%)</title><rect x="776.5" y="469" width="6.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="779.55" y="479.5" ></text>
</g>
<g >
<title>pypy_g_LOAD_GLOBAL_cached__AccessDirect_None (10,028,239 samples, 0.18%)</title><rect x="567.1" y="453" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="570.07" y="463.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (15,457,864 samples, 0.28%)</title><rect x="32.2" y="341" width="3.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="35.22" y="351.5" ></text>
</g>
<g >
<title>PyPyTuple_New (8,778,811 samples, 0.16%)</title><rect x="397.6" y="469" width="1.9" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="400.64" y="479.5" ></text>
</g>
<g >
<title>pypy_g_comparison_eq_impl (28,946,158 samples, 0.53%)</title><rect x="898.6" y="469" width="6.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="901.63" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (13,301,214 samples, 0.24%)</title><rect x="295.8" y="453" width="2.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="298.82" y="463.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_recvinto (9,500,064 samples, 0.17%)</title><rect x="1075.8" y="485" width="2.0" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1078.76" y="495.5" ></text>
</g>
<g >
<title>validate_xmit_skb (22,226,694 samples, 0.40%)</title><rect x="656.3" y="85" width="4.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="659.26" y="95.5" ></text>
</g>
<g >
<title>pypy_g_WeakrefLifeline_get_or_make_weakref (45,228,021 samples, 0.82%)</title><rect x="328.4" y="469" width="9.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="331.37" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1459___simple_call__fu (14,265,783 samples, 0.26%)</title><rect x="384.0" y="469" width="3.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="387.05" y="479.5" ></text>
</g>
<g >
<title>pypy_g_W_Weakref_compare (14,126,575 samples, 0.26%)</title><rect x="806.3" y="469" width="3.0" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="809.28" y="479.5" ></text>
</g>
<g >
<title>schedule (294,666,181 samples, 5.36%)</title><rect x="479.6" y="277" width="63.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="482.62" y="287.5" >schedule</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_external_malloc (14,054,214 samples, 0.26%)</title><rect x="1072.7" y="485" width="3.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1075.74" y="495.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (36,059,980 samples, 0.66%)</title><rect x="450.3" y="309" width="7.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="453.30" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (14,072,615 samples, 0.26%)</title><rect x="23.8" y="373" width="3.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="26.79" y="383.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (28,966,796 samples, 0.53%)</title><rect x="966.8" y="469" width="6.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="969.80" y="479.5" ></text>
</g>
<g >
<title>tcp_send_mss (13,205,221 samples, 0.24%)</title><rect x="675.8" y="325" width="2.9" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="678.82" y="335.5" ></text>
</g>
<g >
<title>update_curr (20,726,264 samples, 0.38%)</title><rect x="497.6" y="197" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="500.63" y="207.5" ></text>
</g>
<g >
<title>ep_poll (442,393,421 samples, 8.05%)</title><rect x="450.3" y="325" width="95.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="453.30" y="335.5" >ep_poll</text>
</g>
<g >
<title>drm_connector_init_panel_orientation_property (11,398,621 samples, 0.21%)</title><rect x="610.2" y="197" width="2.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="613.15" y="207.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (13,576,819 samples, 0.25%)</title><rect x="1021.5" y="325" width="2.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1024.49" y="335.5" ></text>
</g>
<g >
<title>flexible_sched_in (24,767,563 samples, 0.45%)</title><rect x="530.4" y="165" width="5.4" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="533.44" y="175.5" ></text>
</g>
<g >
<title>pypy_g__operate (29,635,803 samples, 0.54%)</title><rect x="1118.2" y="485" width="6.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1121.20" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (18,591,035 samples, 0.34%)</title><rect x="1041.1" y="469" width="4.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1044.11" y="479.5" ></text>
</g>
<g >
<title>ipt_do_table (69,425,668 samples, 1.26%)</title><rect x="618.6" y="165" width="15.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="621.64" y="175.5" ></text>
</g>
<g >
<title>pypy_g_ExecutionContext_leave (13,313,867 samples, 0.24%)</title><rect x="743.3" y="469" width="2.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="746.28" y="479.5" ></text>
</g>
<g >
<title>epoll_wait (579,975,390 samples, 10.55%)</title><rect x="425.9" y="405" width="124.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="428.93" y="415.5" >epoll_wait</text>
</g>
<g >
<title>__update_load_avg_se (14,553,912 samples, 0.26%)</title><rect x="504.9" y="181" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="507.89" y="191.5" ></text>
</g>
<g >
<title>pypy_g_create_ref (27,688,833 samples, 0.50%)</title><rect x="907.8" y="469" width="6.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="910.83" y="479.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_getfield_vable_i (11,808,523 samples, 0.21%)</title><rect x="1070.2" y="485" width="2.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1073.21" y="495.5" ></text>
</g>
<g >
<title>pypy_g_force_now (14,639,677 samples, 0.27%)</title><rect x="356.7" y="469" width="3.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="359.67" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (148,681,706 samples, 2.71%)</title><rect x="1009.2" y="453" width="31.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1012.18" y="463.5" >do..</text>
</g>
<g >
<title>dev_hard_start_xmit (78,616,990 samples, 1.43%)</title><rect x="639.4" y="101" width="16.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="642.38" y="111.5" ></text>
</g>
<g >
<title>rb_erase (16,201,594 samples, 0.29%)</title><rect x="476.1" y="245" width="3.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="479.14" y="255.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (14,072,615 samples, 0.26%)</title><rect x="23.8" y="389" width="3.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="26.79" y="399.5" ></text>
</g>
<g >
<title>__fdget (11,824,896 samples, 0.22%)</title><rect x="438.3" y="341" width="2.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="441.35" y="351.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__pure_lookup_where_with_method_cach (15,583,199 samples, 0.28%)</title><rect x="325.0" y="469" width="3.4" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="328.03" y="479.5" ></text>
</g>
<g >
<title>ctx_sched_in (62,870,629 samples, 1.14%)</title><rect x="522.3" y="197" width="13.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="525.26" y="207.5" ></text>
</g>
<g >
<title>pypy_g_get_and_call_function__star_0 (15,908,247 samples, 0.29%)</title><rect x="934.8" y="469" width="3.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="937.81" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (13,565,110 samples, 0.25%)</title><rect x="378.2" y="469" width="2.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="381.21" y="479.5" ></text>
</g>
<g >
<title>__ip_finish_output (144,231,731 samples, 2.62%)</title><rect x="633.6" y="181" width="30.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="636.55" y="191.5" >__..</text>
</g>
<g >
<title>pypy_g_Reader_next_item (10,548,621 samples, 0.19%)</title><rect x="1077.8" y="485" width="2.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1080.80" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (310,867,775 samples, 5.66%)</title><rect x="476.1" y="309" width="66.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="479.14" y="319.5" >schedul..</text>
</g>
<g >
<title>deflate (16,861,170 samples, 0.31%)</title><rect x="560.9" y="453" width="3.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="563.88" y="463.5" ></text>
</g>
<g >
<title>pypy_g_ll_append_0_9__stringbuilderPtr_rpy_stringPtr (17,690,017 samples, 0.32%)</title><rect x="374.4" y="469" width="3.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="377.41" y="479.5" ></text>
</g>
<g >
<title>[unknown] (608,554,850 samples, 11.07%)</title><rect x="425.9" y="453" width="130.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="428.93" y="463.5" >[unknown]</text>
</g>
<g >
<title>__kfree_skb (11,570,464 samples, 0.21%)</title><rect x="1019.0" y="357" width="2.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1022.01" y="367.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (10,799,633 samples, 0.20%)</title><rect x="473.8" y="245" width="2.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="476.82" y="255.5" ></text>
</g>
<g >
<title>inet_recvmsg (75,083,085 samples, 1.37%)</title><rect x="1014.8" y="389" width="16.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1017.84" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (148,681,706 samples, 2.71%)</title><rect x="1009.2" y="469" width="31.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1012.18" y="479.5" >en..</text>
</g>
<g >
<title>do_user_addr_fault (54,732,264 samples, 1.00%)</title><rect x="23.8" y="421" width="11.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="26.79" y="431.5" ></text>
</g>
<g >
<title>pypy_g_LOAD_GLOBAL_cached__AccessDirect_None (14,382,330 samples, 0.26%)</title><rect x="754.7" y="469" width="3.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="757.73" y="479.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (11,858,677 samples, 0.22%)</title><rect x="1012.3" y="405" width="2.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1015.30" y="415.5" ></text>
</g>
<g >
<title>[perf-86324.map] (1,598,795,588 samples, 29.09%)</title><rect x="52.1" y="485" width="343.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.10" y="495.5" >[perf-86324.map]</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_setarrayitem_vable_r (13,665,350 samples, 0.25%)</title><rect x="709.5" y="469" width="2.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="712.46" y="479.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition.cold (19,665,654 samples, 0.36%)</title><rect x="734.6" y="469" width="4.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="737.62" y="479.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (52,268,912 samples, 0.95%)</title><rect x="975.3" y="469" width="11.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="978.35" y="479.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (34,715,869 samples, 0.63%)</title><rect x="645.9" y="85" width="7.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="648.87" y="95.5" ></text>
</g>
<g >
<title>dev_queue_xmit (128,277,262 samples, 2.33%)</title><rect x="637.0" y="149" width="27.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="639.98" y="159.5" >d..</text>
</g>
<g >
<title>iptable_filter_hook (69,425,668 samples, 1.26%)</title><rect x="618.6" y="181" width="15.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="621.64" y="191.5" ></text>
</g>
<g >
<title>tcp_push (319,424,704 samples, 5.81%)</title><rect x="607.2" y="325" width="68.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="610.24" y="335.5" >tcp_push</text>
</g>
<g >
<title>__vdso_clock_gettime (26,846,766 samples, 0.49%)</title><rect x="1049.1" y="469" width="5.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1052.10" y="479.5" ></text>
</g>
<g >
<title>memcpy_erms (19,644,374 samples, 0.36%)</title><rect x="649.1" y="53" width="4.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="652.11" y="63.5" ></text>
</g>
<g >
<title>__lru_cache_add (8,896,159 samples, 0.16%)</title><rect x="26.8" y="357" width="1.9" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="29.81" y="367.5" ></text>
</g>
<g >
<title>cfree (19,943,560 samples, 0.36%)</title><rect x="556.6" y="453" width="4.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="559.60" y="463.5" ></text>
</g>
<g >
<title>pypy_g_BuiltinCode2_fastcall_2.part.0 (20,656,701 samples, 0.38%)</title><rect x="738.8" y="469" width="4.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="741.84" y="479.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (33,400,977 samples, 0.61%)</title><rect x="1129.8" y="485" width="7.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1132.81" y="495.5" ></text>
</g>
<g >
<title>dequeue_task_fair (114,536,036 samples, 2.08%)</title><rect x="483.4" y="229" width="24.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="486.42" y="239.5" >d..</text>
</g>
<g >
<title>[libc-2.31.so] (20,437,732 samples, 0.37%)</title><rect x="52.1" y="469" width="4.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="55.10" y="479.5" ></text>
</g>
<g >
<title>clock_gettime (45,488,675 samples, 0.83%)</title><rect x="1045.1" y="485" width="9.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1048.10" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output (144,231,731 samples, 2.62%)</title><rect x="633.6" y="197" width="30.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="636.55" y="207.5" >ip..</text>
</g>
<g >
<title>clock_gettime (17,476,289 samples, 0.32%)</title><rect x="301.7" y="469" width="3.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="304.66" y="479.5" ></text>
</g>
<g >
<title>pypy_g_raw_malloc_memory_pressure_varsize (14,998,657 samples, 0.27%)</title><rect x="1176.3" y="485" width="3.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1179.27" y="495.5" ></text>
</g>
<g >
<title>ip_send_check (11,599,738 samples, 0.21%)</title><rect x="664.5" y="213" width="2.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="667.52" y="223.5" ></text>
</g>
<g >
<title>nf_hook_slow (26,154,896 samples, 0.48%)</title><rect x="667.0" y="213" width="5.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="670.01" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,371,091 samples, 0.26%)</title><rect x="430.1" y="389" width="3.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="433.06" y="399.5" ></text>
</g>
<g >
<title>pypy_g_portal_11 (18,515,941 samples, 0.34%)</title><rect x="986.6" y="469" width="3.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="989.57" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ccall_pypy_epoll_wait__INT_arrayPtr_arrayPtr_INT (30,625,573 samples, 0.56%)</title><rect x="1137.0" y="485" width="6.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1139.99" y="495.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (14,797,039 samples, 0.27%)</title><rect x="1152.6" y="485" width="3.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1155.60" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (486,224,647 samples, 8.85%)</title><rect x="440.9" y="341" width="104.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="443.89" y="351.5" >do_epoll_wait</text>
</g>
<g >
<title>__do_page_fault (54,732,264 samples, 1.00%)</title><rect x="23.8" y="437" width="11.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="26.79" y="447.5" ></text>
</g>
<g >
<title>pypy_g_dispatcher_Py_14 (12,117,897 samples, 0.22%)</title><rect x="1143.6" y="485" width="2.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1146.56" y="495.5" ></text>
</g>
<g >
<title>_PyPyArg_ParseTupleAndKeywords_SizeT (10,853,582 samples, 0.20%)</title><rect x="293.5" y="469" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="296.49" y="479.5" ></text>
</g>
<g >
<title>newidle_balance (16,305,626 samples, 0.30%)</title><rect x="535.8" y="229" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="538.76" y="239.5" ></text>
</g>
<g >
<title>pypy_g_call_stub_562 (17,273,517 samples, 0.31%)</title><rect x="894.9" y="469" width="3.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="897.93" y="479.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_send_raw (15,180,777 samples, 0.28%)</title><rect x="761.0" y="469" width="3.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="763.97" y="479.5" ></text>
</g>
<g >
<title>pypy_g_len_w (13,746,711 samples, 0.25%)</title><rect x="954.2" y="469" width="2.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="957.18" y="479.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (310,867,775 samples, 5.66%)</title><rect x="476.1" y="293" width="66.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="479.14" y="303.5" >schedul..</text>
</g>
<g >
<title>__libc_send (477,083,699 samples, 8.68%)</title><rect x="579.5" y="469" width="102.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="582.46" y="479.5" >__libc_send</text>
</g>
<g >
<title>pypy3.10 (5,495,470,564 samples, 100.00%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >pypy3.10</text>
</g>
<g >
<title>__alloc_pages_nodemask (16,305,626 samples, 0.30%)</title><rect x="28.7" y="341" width="3.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="31.72" y="351.5" ></text>
</g>
<g >
<title>pypy_g__match_keywords__v1018___simple_call__function_ (12,376,002 samples, 0.23%)</title><rect x="1115.5" y="485" width="2.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1118.54" y="495.5" ></text>
</g>
<g >
<title>nf_hook_slow (82,563,441 samples, 1.50%)</title><rect x="615.8" y="197" width="17.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="618.82" y="207.5" ></text>
</g>
<g >
<title>lockd_up (13,137,773 samples, 0.24%)</title><rect x="615.8" y="133" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="618.82" y="143.5" ></text>
</g>
<g >
<title>cfree (29,891,770 samples, 0.54%)</title><rect x="685.9" y="469" width="6.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="688.93" y="479.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (13,579,740 samples, 0.25%)</title><rect x="607.2" y="261" width="3.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="610.24" y="271.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (58,606,781 samples, 1.07%)</title><rect x="463.6" y="277" width="12.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="466.56" y="287.5" ></text>
</g>
<g >
<title>pypy_g_thread_run (21,674,175 samples, 0.39%)</title><rect x="1179.5" y="485" width="4.6" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1182.49" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1525___simple_call__function_ (12,544,815 samples, 0.23%)</title><rect x="1155.8" y="485" width="2.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1158.78" y="495.5" ></text>
</g>
<g >
<title>pypy_g_assembler_call_helper_57 (13,137,773 samples, 0.24%)</title><rect x="347.6" y="469" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="350.59" y="479.5" ></text>
</g>
<g >
<title>pypy_g_from_ref (11,784,438 samples, 0.21%)</title><rect x="929.1" y="469" width="2.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="932.08" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output2 (144,231,731 samples, 2.62%)</title><rect x="633.6" y="165" width="30.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="636.55" y="175.5" >ip..</text>
</g>
<g >
<title>_raw_write_lock_irq (17,889,374 samples, 0.33%)</title><rect x="446.5" y="325" width="3.8" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="449.46" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (62,884,999 samples, 1.14%)</title><rect x="522.3" y="245" width="13.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="525.26" y="255.5" ></text>
</g>
<g >
<title>sch_direct_xmit (117,093,711 samples, 2.13%)</title><rect x="639.4" y="117" width="25.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="642.38" y="127.5" >s..</text>
</g>
<g >
<title>memset_erms (15,071,495 samples, 0.27%)</title><rect x="645.9" y="37" width="3.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="648.87" y="47.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (47,235,238 samples, 0.86%)</title><rect x="1031.0" y="373" width="10.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1033.97" y="383.5" ></text>
</g>
<g >
<title>ip_queue_xmit (290,964,362 samples, 5.29%)</title><rect x="610.2" y="261" width="62.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="613.15" y="271.5" >ip_que..</text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (47,681,009 samples, 0.87%)</title><rect x="569.2" y="453" width="10.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="572.22" y="463.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (13,137,773 samples, 0.24%)</title><rect x="615.8" y="181" width="2.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="618.82" y="191.5" ></text>
</g>
<g >
<title>pypy_g_as_pyobj (18,353,049 samples, 0.33%)</title><rect x="343.7" y="469" width="3.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="346.65" y="479.5" ></text>
</g>
<g >
<title>pypy_g_handler_rvmprof_code (11,774,265 samples, 0.21%)</title><rect x="944.2" y="469" width="2.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="947.22" y="479.5" ></text>
</g>
<g >
<title>[perf-86324.map] (1,103,763,253 samples, 20.08%)</title><rect x="56.5" y="469" width="237.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="59.49" y="479.5" >[perf-86324.map]</text>
</g>
<g >
<title>get_errno (16,957,413 samples, 0.31%)</title><rect x="1054.9" y="485" width="3.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1057.87" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_getvirtual_ptr (24,234,453 samples, 0.44%)</title><rect x="1098.8" y="485" width="5.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1101.80" y="495.5" ></text>
</g>
<g >
<title>visit_groups_merge (36,031,941 samples, 0.66%)</title><rect x="528.0" y="181" width="7.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="531.03" y="191.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (402,105,973 samples, 7.32%)</title><rect x="592.3" y="341" width="86.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="595.32" y="351.5" >tcp_sendms..</text>
</g>
<g >
<title>drm_connector_attach_content_protection_property (13,137,773 samples, 0.24%)</title><rect x="615.8" y="165" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="618.82" y="175.5" ></text>
</g>
<g >
<title>do_anonymous_page (40,659,649 samples, 0.74%)</title><rect x="26.8" y="373" width="8.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="29.81" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (498,049,543 samples, 9.06%)</title><rect x="438.3" y="357" width="107.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="441.35" y="367.5" >__x64_sys_epo..</text>
</g>
<g >
<title>sock_recvmsg (122,318,323 samples, 2.23%)</title><rect x="1014.8" y="405" width="26.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1017.84" y="415.5" >s..</text>
</g>
<g >
<title>aa_sk_perm (47,235,238 samples, 0.86%)</title><rect x="1031.0" y="357" width="10.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1033.97" y="367.5" ></text>
</g>
<g >
<title>tg3_start_xmit (13,668,514 samples, 0.25%)</title><rect x="653.3" y="85" width="3.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="656.32" y="95.5" ></text>
</g>
<g >
<title>__fget_light (15,567,912 samples, 0.28%)</title><rect x="443.1" y="325" width="3.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="446.11" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (448,484,023 samples, 8.16%)</title><rect x="582.4" y="453" width="96.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="585.36" y="463.5" >entry_SYSCA..</text>
</g>
<g >
<title>do_syscall_64 (522,293,725 samples, 9.50%)</title><rect x="433.1" y="373" width="112.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="436.14" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>dequeue_entity (114,536,036 samples, 2.08%)</title><rect x="483.4" y="213" width="24.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="486.42" y="223.5" >d..</text>
</g>
<g >
<title>pypy_g__ll_strhash__rpy_stringPtr (14,484,926 samples, 0.26%)</title><rect x="886.6" y="469" width="3.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="889.57" y="479.5" ></text>
</g>
<g >
<title>malloc (14,897,051 samples, 0.27%)</title><rect x="1058.5" y="485" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1061.51" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (16,173,952 samples, 0.29%)</title><rect x="957.1" y="469" width="3.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="960.14" y="479.5" ></text>
</g>
<g >
<title>pypy_g__after_thread_switch (12,972,537 samples, 0.24%)</title><rect x="1112.8" y="485" width="2.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1115.76" y="495.5" ></text>
</g>
<g >
<title>update_cfs_group (42,118,423 samples, 0.77%)</title><rect x="488.6" y="197" width="9.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="491.59" y="207.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__allocate_shadow (16,184,741 samples, 0.29%)</title><rect x="315.0" y="469" width="3.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="318.03" y="479.5" ></text>
</g>
<g >
<title>alloc_pages_vma (16,305,626 samples, 0.30%)</title><rect x="28.7" y="357" width="3.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="31.72" y="367.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (77,113,106 samples, 1.40%)</title><rect x="35.5" y="485" width="16.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="38.54" y="495.5" ></text>
</g>
<g >
<title>pypy_g_newint__r_int32 (14,444,929 samples, 0.26%)</title><rect x="1170.3" y="485" width="3.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1173.27" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (118,955,911 samples, 2.16%)</title><rect x="10.0" y="485" width="25.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >[..</text>
</g>
<g >
<title>pypy_g__getitem_correct_indirection__v940___simple_call (14,159,306 samples, 0.26%)</title><rect x="338.1" y="469" width="3.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="341.08" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_join_chars_trampoline__v1237___simple_call__f (14,701,912 samples, 0.27%)</title><rect x="1167.1" y="485" width="3.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1170.11" y="495.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2 (10,853,582 samples, 0.20%)</title><rect x="973.0" y="469" width="2.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="976.01" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (134,177,000 samples, 2.44%)</title><rect x="1012.3" y="437" width="28.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1015.30" y="447.5" >__..</text>
</g>
<g >
<title>__sys_sendto (435,833,103 samples, 7.93%)</title><rect x="585.1" y="405" width="93.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="588.08" y="415.5" >__sys_sendto</text>
</g>
<g >
<title>tcp_rcv_space_adjust (12,847,160 samples, 0.23%)</title><rect x="1028.2" y="357" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1031.21" y="367.5" ></text>
</g>
<g >
<title>do_page_fault (54,732,264 samples, 1.00%)</title><rect x="23.8" y="453" width="11.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="26.79" y="463.5" ></text>
</g>
<g >
<title>pypy_g_comparison_lt_impl (13,890,765 samples, 0.25%)</title><rect x="904.9" y="469" width="2.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="907.85" y="479.5" ></text>
</g>
<g >
<title>pypy_g_dropvalues__AccessDirect_None (29,974,883 samples, 0.55%)</title><rect x="1146.2" y="485" width="6.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1149.16" y="495.5" ></text>
</g>
<g >
<title>pypy_g__ll_dict_setitem_lookup_done__v1669___simple_cal (11,774,265 samples, 0.21%)</title><rect x="341.1" y="469" width="2.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="344.12" y="479.5" ></text>
</g>
<g >
<title>ep_send_events_proc (58,606,781 samples, 1.07%)</title><rect x="463.6" y="293" width="12.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="466.56" y="303.5" ></text>
</g>
<g >
<title>PyPyBytes_AS_STRING (10,437,869 samples, 0.19%)</title><rect x="395.4" y="469" width="2.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="398.40" y="479.5" ></text>
</g>
<g >
<title>[unknown] (579,975,390 samples, 10.55%)</title><rect x="425.9" y="437" width="124.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="428.93" y="447.5" >[unknown]</text>
</g>
<g >
<title>tcp_cleanup_rbuf (17,697,320 samples, 0.32%)</title><rect x="1024.4" y="357" width="3.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1027.41" y="367.5" ></text>
</g>
<g >
<title>ip_output (144,231,731 samples, 2.62%)</title><rect x="633.6" y="213" width="30.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="636.55" y="223.5" >ip..</text>
</g>
<g >
<title>pypy_g_dispatch_loop (56,313,909 samples, 1.02%)</title><rect x="913.8" y="469" width="12.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="916.78" y="479.5" ></text>
</g>
<g >
<title>pypy_g_bytes_realize (11,877,152 samples, 0.22%)</title><rect x="892.4" y="469" width="2.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="895.38" y="479.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (13,576,819 samples, 0.25%)</title><rect x="1021.5" y="341" width="2.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1024.49" y="351.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_malloc (39,587,726 samples, 0.72%)</title><rect x="1061.7" y="485" width="8.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1064.71" y="495.5" ></text>
</g>
<g >
<title>page_fault (54,732,264 samples, 1.00%)</title><rect x="23.8" y="469" width="11.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="26.79" y="479.5" ></text>
</g>
<g >
<title>brk (18,778,655 samples, 0.34%)</title><rect x="681.9" y="469" width="4.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="684.90" y="479.5" ></text>
</g>
<g >
<title>__wake_up (25,702,146 samples, 0.47%)</title><rect x="458.0" y="293" width="5.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="461.04" y="303.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (128,277,262 samples, 2.33%)</title><rect x="637.0" y="133" width="27.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="639.98" y="143.5" >_..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (26,814,015 samples, 0.49%)</title><rect x="770.8" y="469" width="5.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="773.79" y="479.5" ></text>
</g>
<g >
<title>_copy_to_iter (13,576,819 samples, 0.25%)</title><rect x="1021.5" y="309" width="2.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1024.49" y="319.5" ></text>
</g>
<g >
<title>pypy_g_endswith__str_str (15,592,107 samples, 0.28%)</title><rect x="353.3" y="469" width="3.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="356.32" y="479.5" ></text>
</g>
<g >
<title>__remove_hrtimer (14,072,615 samples, 0.26%)</title><rect x="23.8" y="341" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.79" y="351.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (2,558,965 samples, 0.05%)</title><rect x="1112.2" y="485" width="0.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1115.21" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (14,072,615 samples, 0.26%)</title><rect x="23.8" y="357" width="3.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="26.79" y="367.5" ></text>
</g>
<g >
<title>pypy_g_Signature_find_w_argname (38,195,124 samples, 0.70%)</title><rect x="1104.0" y="485" width="8.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1107.01" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,778,655 samples, 0.34%)</title><rect x="681.9" y="453" width="4.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="684.90" y="463.5" ></text>
</g>
<g >
<title>pypy_g__extend_from_tuple__v354___simple_call__function (17,209,069 samples, 0.31%)</title><rect x="876.9" y="469" width="3.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="879.89" y="479.5" ></text>
</g>
<g >
<title>sock_sendmsg (417,136,633 samples, 7.59%)</title><rect x="589.1" y="389" width="89.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="592.09" y="399.5" >sock_sendmsg</text>
</g>
<g >
<title>pypy_g_allocate__rpython_jit_metainterp_resume_ResumeDa (11,892,938 samples, 0.22%)</title><rect x="1124.6" y="485" width="2.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1127.56" y="495.5" ></text>
</g>
<g >
<title>inet_sendmsg (417,136,633 samples, 7.59%)</title><rect x="589.1" y="373" width="89.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="592.09" y="383.5" >inet_sendmsg</text>
</g>
<g >
<title>pthread_testcancel (14,634,974 samples, 0.27%)</title><rect x="694.5" y="469" width="3.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="697.48" y="479.5" ></text>
</g>
<g >
<title>pypy_g_handler_setarrayitem_vable_r (13,709,197 samples, 0.25%)</title><rect x="946.7" y="469" width="3.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="949.74" y="479.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (24,083,832 samples, 0.44%)</title><rect x="545.3" y="389" width="5.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="548.29" y="399.5" ></text>
</g>
<g >
<title>group_sched_in (24,767,563 samples, 0.45%)</title><rect x="530.4" y="149" width="5.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="533.44" y="159.5" ></text>
</g>
<g >
<title>get_errno (31,873,198 samples, 0.58%)</title><rect x="305.4" y="469" width="6.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="308.41" y="479.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (47,235,238 samples, 0.86%)</title><rect x="1031.0" y="389" width="10.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1033.97" y="399.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_recv (14,659,546 samples, 0.27%)</title><rect x="757.8" y="469" width="3.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="760.82" y="479.5" ></text>
</g>
<g >
<title>flexible_sched_in (17,227,317 samples, 0.31%)</title><rect x="524.3" y="181" width="3.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="527.33" y="191.5" ></text>
</g>
<g >
<title>pypy_g_wrapper_second_level__star_1_13 (17,194,855 samples, 0.31%)</title><rect x="996.0" y="469" width="3.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="999.03" y="479.5" ></text>
</g>
<g >
<title>[unknown] (579,975,390 samples, 10.55%)</title><rect x="425.9" y="421" width="124.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="428.93" y="431.5" >[unknown]</text>
</g>
<g >
<title>__x64_sys_sendto (435,833,103 samples, 7.93%)</title><rect x="585.1" y="421" width="93.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="588.08" y="431.5" >__x64_sys_s..</text>
</g>
<g >
<title>[libc-2.31.so] (29,951,249 samples, 0.55%)</title><rect x="399.5" y="469" width="6.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="402.52" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (66,092,721 samples, 1.20%)</title><rect x="782.7" y="469" width="14.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="785.73" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_build__v1269___simple_call__function_ (13,603,063 samples, 0.25%)</title><rect x="381.1" y="469" width="2.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="384.13" y="479.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (15,201,959 samples, 0.28%)</title><rect x="706.2" y="469" width="3.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="709.19" y="479.5" ></text>
</g>
<g >
<title>tcp_recvmsg (75,083,085 samples, 1.37%)</title><rect x="1014.8" y="373" width="16.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1017.84" y="383.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (103,525,027 samples, 1.88%)</title><rect x="712.4" y="469" width="22.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="715.39" y="479.5" >p..</text>
</g>
<g >
<title>pick_next_task_fair (16,305,626 samples, 0.30%)</title><rect x="535.8" y="245" width="3.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="538.76" y="255.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (304,544,102 samples, 5.54%)</title><rect x="607.2" y="277" width="65.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="610.24" y="287.5" >__tcp_t..</text>
</g>
<g >
<title>pypy_g_remember_young_pointer (11,214,093 samples, 0.20%)</title><rect x="393.0" y="469" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="395.99" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (28,290,685 samples, 0.51%)</title><rect x="1161.0" y="485" width="6.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1164.04" y="495.5" ></text>
</g>
<g >
<title>perf_event_sched_in (62,870,629 samples, 1.14%)</title><rect x="522.3" y="213" width="13.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="525.26" y="223.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (15,612,096 samples, 0.28%)</title><rect x="321.7" y="469" width="3.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="324.67" y="479.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (12,660,653 samples, 0.23%)</title><rect x="601.0" y="325" width="2.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="603.98" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (26,846,766 samples, 0.49%)</title><rect x="1049.1" y="453" width="5.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1052.10" y="463.5" ></text>
</g>
<g >
<title>deactivate_task (180,891,761 samples, 3.29%)</title><rect x="483.4" y="245" width="38.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="486.42" y="255.5" >dea..</text>
</g>
<g >
<title>pypy_g_newlist (13,508,826 samples, 0.25%)</title><rect x="1173.4" y="485" width="2.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1176.37" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_streq__rpy_stringPtr_rpy_stringPtr (11,808,523 samples, 0.21%)</title><rect x="390.5" y="469" width="2.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="393.45" y="479.5" ></text>
</g>
<g >
<title>auth_flavors (19,860,617 samples, 0.36%)</title><rect x="641.6" y="85" width="4.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="644.61" y="95.5" ></text>
</g>
<g >
<title>__remove_hrtimer (16,201,594 samples, 0.29%)</title><rect x="476.1" y="261" width="3.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="479.14" y="271.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (319,424,704 samples, 5.81%)</title><rect x="607.2" y="309" width="68.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="610.24" y="319.5" >__tcp_p..</text>
</g>
<g >
<title>__perf_event_task_sched_in (62,884,999 samples, 1.14%)</title><rect x="522.3" y="229" width="13.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="525.26" y="239.5" ></text>
</g>
<g >
<title>dma_direct_unmap_page (19,860,617 samples, 0.36%)</title><rect x="641.6" y="69" width="4.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="644.61" y="79.5" ></text>
</g>
<g >
<title>tcp_sendmsg (402,105,973 samples, 7.32%)</title><rect x="592.3" y="357" width="86.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="595.32" y="367.5" >tcp_sendmsg</text>
</g>
<g >
<title>pypy_g_cpy_call_external__funcPtr__objectPtr (13,557,820 samples, 0.25%)</title><rect x="350.4" y="469" width="2.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="353.41" y="479.5" ></text>
</g>
<g >
<title>ipv4_mtu (13,205,221 samples, 0.24%)</title><rect x="675.8" y="309" width="2.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="678.82" y="319.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__allocate_shadow (16,850,385 samples, 0.31%)</title><rect x="748.4" y="469" width="3.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="751.35" y="479.5" ></text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (39,906,202 samples, 0.73%)</title><rect x="697.6" y="469" width="8.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="700.62" y="479.5" ></text>
</g>
<g >
<title>reweight_entity (26,189,003 samples, 0.48%)</title><rect x="492.0" y="181" width="5.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="495.01" y="191.5" ></text>
</g>
<g >
<title>__wake_up_common (25,702,146 samples, 0.47%)</title><rect x="458.0" y="261" width="5.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="461.04" y="271.5" ></text>
</g>
<g >
<title>tcp_poll (26,253,005 samples, 0.48%)</title><rect x="468.2" y="245" width="5.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="471.19" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (448,484,023 samples, 8.16%)</title><rect x="582.4" y="437" width="96.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="585.36" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>[unknown] (715,025,568 samples, 13.01%)</title><rect x="425.9" y="469" width="153.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="428.93" y="479.5" >[unknown]</text>
</g>
<g >
<title>account_entity_dequeue (14,500,246 samples, 0.26%)</title><rect x="485.5" y="197" width="3.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="488.48" y="207.5" ></text>
</g>
<g >
<title>ip_local_out (290,964,362 samples, 5.29%)</title><rect x="610.2" y="229" width="62.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="613.15" y="239.5" >ip_loc..</text>
</g>
<g >
<title>pypy_g_STORE_ATTR__AccessDirect_None (26,377,967 samples, 0.48%)</title><rect x="796.9" y="469" width="5.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="799.93" y="479.5" ></text>
</g>
<g >
<title>pypy_g_W_BytesObject_shortcut___len__ (17,197,428 samples, 0.31%)</title><rect x="802.6" y="469" width="3.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="805.59" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_reindex__dicttablePtr_Signed_1 (15,602,373 samples, 0.28%)</title><rect x="963.4" y="469" width="3.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="966.44" y="479.5" ></text>
</g>
<g >
<title>netif_skb_features (10,520,592 samples, 0.19%)</title><rect x="656.3" y="69" width="2.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="659.26" y="79.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__prepare_virtuals.part.0 (13,203,561 samples, 0.24%)</title><rect x="768.0" y="469" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="770.96" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v3654___simple_call__function_ (13,210,615 samples, 0.24%)</title><rect x="960.6" y="469" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="963.61" y="479.5" ></text>
</g>
<g >
<title>_copy_from_iter_full (14,192,201 samples, 0.26%)</title><rect x="597.9" y="325" width="3.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="600.93" y="335.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (44,068,435 samples, 0.80%)</title><rect x="999.7" y="469" width="9.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1002.72" y="479.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,183,551 samples, 0.20%)</title><rect x="637.0" y="117" width="2.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="639.98" y="127.5" ></text>
</g>
<g >
<title>__alloc_skb (15,071,495 samples, 0.27%)</title><rect x="645.9" y="53" width="3.2" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="648.87" y="63.5" ></text>
</g>
<g >
<title>__schedule (276,990,579 samples, 5.04%)</title><rect x="483.4" y="261" width="59.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="486.42" y="271.5" >__sche..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (28,579,460 samples, 0.52%)</title><rect x="550.5" y="437" width="6.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="553.46" y="447.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (16,250,027 samples, 0.30%)</title><rect x="661.0" y="85" width="3.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="664.03" y="95.5" ></text>
</g>
<g >
<title>skb_copy (34,715,869 samples, 0.63%)</title><rect x="645.9" y="69" width="7.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="648.87" y="79.5" ></text>
</g>
<g >
<title>perf_swevent_add (24,767,563 samples, 0.45%)</title><rect x="530.4" y="133" width="5.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="533.44" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,876,873 samples, 0.25%)</title><rect x="298.7" y="453" width="3.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="301.68" y="463.5" ></text>
</g>
<g >
<title>default_wake_function (12,914,217 samples, 0.23%)</title><rect x="460.8" y="245" width="2.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="463.79" y="255.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (16,201,594 samples, 0.29%)</title><rect x="476.1" y="277" width="3.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="479.14" y="287.5" ></text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (12,934,024 samples, 0.24%)</title><rect x="312.3" y="469" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="315.25" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,778,655 samples, 0.34%)</title><rect x="681.9" y="437" width="4.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="684.90" y="447.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (15,090,850 samples, 0.27%)</title><rect x="678.7" y="453" width="3.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="681.66" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (14,072,615 samples, 0.26%)</title><rect x="23.8" y="405" width="3.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="26.79" y="415.5" ></text>
</g>
<g >
<title>iptable_filter_hook (15,015,935 samples, 0.27%)</title><rect x="612.6" y="197" width="3.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="615.60" y="207.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (84,308,927 samples, 1.53%)</title><rect x="458.0" y="309" width="18.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="461.04" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (40,659,649 samples, 0.74%)</title><rect x="26.8" y="389" width="8.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.81" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (15,457,864 samples, 0.28%)</title><rect x="32.2" y="357" width="3.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="35.22" y="367.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (11,706,102 samples, 0.21%)</title><rect x="658.5" y="69" width="2.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="661.52" y="79.5" ></text>
</g>
<g >
<title>inflate (9,922,339 samples, 0.18%)</title><rect x="692.4" y="469" width="2.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="695.35" y="479.5" ></text>
</g>
<g >
<title>pypy_g_handle_jitexception_from_blackhole_57 (27,900,721 samples, 0.51%)</title><rect x="938.2" y="469" width="6.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="941.23" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (73,797,095 samples, 1.34%)</title><rect x="1083.0" y="485" width="15.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1085.96" y="495.5" ></text>
</g>
<g >
<title>kmem_cache_free (11,570,464 samples, 0.21%)</title><rect x="1019.0" y="325" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1022.01" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (40,659,649 samples, 0.74%)</title><rect x="26.8" y="405" width="8.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.81" y="415.5" ></text>
</g>
<g >
<title>pypy_g_ExecutionContext_return_trace (10,319,024 samples, 0.19%)</title><rect x="746.1" y="469" width="2.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="749.14" y="479.5" ></text>
</g>
<g >
<title>__getpid (27,178,087 samples, 0.49%)</title><rect x="295.8" y="469" width="5.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="298.82" y="479.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (14,880,602 samples, 0.27%)</title><rect x="672.6" y="277" width="3.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="675.63" y="287.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_pin (12,872,934 samples, 0.23%)</title><rect x="752.0" y="469" width="2.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="754.97" y="479.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_2_2 (14,963,940 samples, 0.27%)</title><rect x="925.9" y="469" width="3.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="928.87" y="479.5" ></text>
</g>
<g >
<title>pypy_g_trace__gc_callback__trace_drag_out (25,537,830 samples, 0.46%)</title><rect x="990.5" y="469" width="5.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="993.54" y="479.5" ></text>
</g>
<g >
<title>pypy_g__ll_alloc_and_set_nojit__GcStruct_listLlT_Signed (15,108,016 samples, 0.27%)</title><rect x="883.3" y="469" width="3.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="886.32" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_getpid (13,876,873 samples, 0.25%)</title><rect x="298.7" y="437" width="3.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="301.68" y="447.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (38,476,721 samples, 0.70%)</title><rect x="656.3" y="101" width="8.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="659.26" y="111.5" ></text>
</g>
</g>
</svg>
