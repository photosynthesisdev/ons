<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>__check_object_size (16,338,046 samples, 0.25%)</title><rect x="546.2" y="341" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="549.19" y="351.5" ></text>
</g>
<g >
<title>ip_queue_xmit (15,200,469 samples, 0.23%)</title><rect x="276.3" y="277" width="2.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="279.34" y="287.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (136,388,320 samples, 2.07%)</title><rect x="612.8" y="149" width="24.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="615.78" y="159.5" >_..</text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (14,471,020 samples, 0.22%)</title><rect x="915.9" y="485" width="2.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="918.93" y="495.5" ></text>
</g>
<g >
<title>pypy_g_OptHeap_serialize_optheap (17,036,192 samples, 0.26%)</title><rect x="729.2" y="485" width="3.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="732.24" y="495.5" ></text>
</g>
<g >
<title>visit_groups_merge (23,416,977 samples, 0.36%)</title><rect x="439.7" y="181" width="4.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="442.75" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (54,932,715 samples, 0.83%)</title><rect x="266.5" y="453" width="9.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="269.49" y="463.5" ></text>
</g>
<g >
<title>group_sched_in (23,416,977 samples, 0.36%)</title><rect x="439.7" y="149" width="4.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="442.75" y="159.5" ></text>
</g>
<g >
<title>sch_direct_xmit (83,376,447 samples, 1.27%)</title><rect x="622.3" y="133" width="14.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="625.29" y="143.5" ></text>
</g>
<g >
<title>pypy_g_jit_rvmprof_code (23,073,736 samples, 0.35%)</title><rect x="880.1" y="485" width="4.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="883.12" y="495.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (14,390,198 samples, 0.22%)</title><rect x="381.2" y="309" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="384.16" y="319.5" ></text>
</g>
<g >
<title>pypy_g_comparison_eq_impl (14,790,877 samples, 0.22%)</title><rect x="1137.5" y="501" width="2.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1140.50" y="511.5" ></text>
</g>
<g >
<title>pypy_g__operate (17,645,893 samples, 0.27%)</title><rect x="511.7" y="469" width="3.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="514.70" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (426,735,173 samples, 6.48%)</title><rect x="369.6" y="389" width="76.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="372.57" y="399.5" >entry_SY..</text>
</g>
<g >
<title>pypy_g_handle_jitexception_from_blackhole_57 (20,063,486 samples, 0.30%)</title><rect x="867.6" y="485" width="3.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="870.61" y="495.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (87,968,585 samples, 1.34%)</title><rect x="514.9" y="469" width="15.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="517.86" y="479.5" ></text>
</g>
<g >
<title>schedule (291,108,841 samples, 4.42%)</title><rect x="393.9" y="277" width="52.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="396.89" y="287.5" >sched..</text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (22,442,934 samples, 0.34%)</title><rect x="283.7" y="485" width="4.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="286.67" y="495.5" ></text>
</g>
<g >
<title>pypy_g_Signature_find_w_argname (55,408,512 samples, 0.84%)</title><rect x="1110.6" y="501" width="9.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1113.59" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (706,677,991 samples, 10.74%)</title><rect x="538.8" y="453" width="126.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="541.79" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_epoll_wait (102,133,668 samples, 1.55%)</title><rect x="451.6" y="373" width="18.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="454.60" y="383.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (20,247,016 samples, 0.31%)</title><rect x="655.2" y="293" width="3.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="658.22" y="303.5" ></text>
</g>
<g >
<title>[unknown] (604,459,647 samples, 9.18%)</title><rect x="366.4" y="453" width="108.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.44" y="463.5" >[unknown]</text>
</g>
<g >
<title>pypy_g__get_list_of_values__R (17,315,304 samples, 0.26%)</title><rect x="764.1" y="485" width="3.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="767.12" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handler_inline_call_r_v (17,301,425 samples, 0.26%)</title><rect x="871.2" y="485" width="3.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="874.21" y="495.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject_issubtype (17,606,919 samples, 0.27%)</title><rect x="758.1" y="485" width="3.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="761.08" y="495.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_3_3 (139,227,495 samples, 2.12%)</title><rect x="821.4" y="485" width="25.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="824.45" y="495.5" >p..</text>
</g>
<g >
<title>dequeue_entity (17,488,524 samples, 0.27%)</title><rect x="463.2" y="229" width="3.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="466.24" y="239.5" ></text>
</g>
<g >
<title>inet_sendmsg (15,200,469 samples, 0.23%)</title><rect x="276.3" y="389" width="2.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="279.34" y="399.5" ></text>
</g>
<g >
<title>__ip_finish_output (238,731,564 samples, 3.63%)</title><rect x="607.7" y="197" width="42.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="610.74" y="207.5" >__ip..</text>
</g>
<g >
<title>cpuacct_charge (16,337,198 samples, 0.25%)</title><rect x="419.5" y="181" width="2.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="422.47" y="191.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (15,349,715 samples, 0.23%)</title><rect x="460.5" y="261" width="2.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="463.48" y="271.5" ></text>
</g>
<g >
<title>pypy_g__ll_1_gc_identityhash__objectPtr (28,275,311 samples, 0.43%)</title><rect x="299.0" y="485" width="5.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="302.04" y="495.5" ></text>
</g>
<g >
<title>pypy_epoll_wait (16,516,797 samples, 0.25%)</title><rect x="471.9" y="421" width="2.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="474.86" y="431.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (28,836,336 samples, 0.44%)</title><rect x="630.0" y="101" width="5.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="633.01" y="111.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (15,680,385 samples, 0.24%)</title><rect x="744.8" y="485" width="2.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="747.79" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (16,695,049 samples, 0.25%)</title><rect x="543.2" y="357" width="3.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="546.20" y="367.5" ></text>
</g>
<g >
<title>skb_copy_bits (16,982,068 samples, 0.26%)</title><rect x="632.1" y="69" width="3.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="635.14" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (102,133,668 samples, 1.55%)</title><rect x="451.6" y="389" width="18.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="454.60" y="399.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_loop (64,487,494 samples, 0.98%)</title><rect x="800.4" y="485" width="11.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="803.45" y="495.5" ></text>
</g>
<g >
<title>pypy_g_trace__gc_callback__trace_drag_out (10,077,572 samples, 0.15%)</title><rect x="931.4" y="485" width="1.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="934.42" y="495.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (18,444,471 samples, 0.28%)</title><rect x="457.2" y="293" width="3.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="460.18" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (706,677,991 samples, 10.74%)</title><rect x="538.8" y="469" width="126.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="541.79" y="479.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>ip_local_out (436,736,655 samples, 6.64%)</title><rect x="574.7" y="245" width="78.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="577.69" y="255.5" >ip_local_..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_getvirtual_ptr (14,184,324 samples, 0.22%)</title><rect x="747.6" y="485" width="2.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="750.60" y="495.5" ></text>
</g>
<g >
<title>__ip_local_out (169,869,765 samples, 2.58%)</title><rect x="574.7" y="229" width="30.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="577.69" y="239.5" >__..</text>
</g>
<g >
<title>[unknown] (3,462,637,605 samples, 52.61%)</title><rect x="334.6" y="501" width="620.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="337.60" y="511.5" >[unknown]</text>
</g>
<g >
<title>epoll_wait (143,756,338 samples, 2.18%)</title><rect x="446.1" y="421" width="25.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="449.08" y="431.5" >e..</text>
</g>
<g >
<title>pypy_g_BuiltinActivation_UwS_W_Socket_ObjSpace_nonnegin (16,923,012 samples, 0.26%)</title><rect x="1069.7" y="501" width="3.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1072.66" y="511.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (15,200,469 samples, 0.23%)</title><rect x="276.3" y="293" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="279.34" y="303.5" ></text>
</g>
<g >
<title>pypy_g_portal_11 (24,605,119 samples, 0.37%)</title><rect x="1173.0" y="501" width="4.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1176.03" y="511.5" ></text>
</g>
<g >
<title>pypy_g_AbstractAttribute_find_map_attr (24,269,426 samples, 0.37%)</title><rect x="680.0" y="485" width="4.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="682.96" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_rawrefcount_create_link_py (14,929,375 samples, 0.23%)</title><rect x="718.6" y="485" width="2.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="721.55" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1200___simple_call__fu (16,231,874 samples, 0.25%)</title><rect x="1147.5" y="501" width="2.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1150.50" y="511.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_2_2 (16,512,364 samples, 0.25%)</title><rect x="818.5" y="485" width="2.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="821.49" y="495.5" ></text>
</g>
<g >
<title>[unknown] (946,376,117 samples, 14.38%)</title><rect x="366.4" y="485" width="169.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.44" y="495.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_assembler_call_helper_57 (12,932,424 samples, 0.20%)</title><rect x="323.1" y="485" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="326.09" y="495.5" ></text>
</g>
<g >
<title>__qdisc_run (21,903,147 samples, 0.33%)</title><rect x="618.4" y="133" width="3.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="621.36" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (11,536,635 samples, 0.18%)</title><rect x="665.5" y="453" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="668.49" y="463.5" ></text>
</g>
<g >
<title>pypy_g_LifetimeManager_free_reg_whole_lifetime (26,315,536 samples, 0.40%)</title><rect x="724.5" y="485" width="4.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="727.52" y="495.5" ></text>
</g>
<g >
<title>convertitem (15,863,142 samples, 0.24%)</title><rect x="1055.1" y="501" width="2.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1058.06" y="511.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_2 (30,847,386 samples, 0.47%)</title><rect x="855.8" y="485" width="5.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="858.80" y="495.5" ></text>
</g>
<g >
<title>pypy_g_makespecialisedtuple2 (29,708,856 samples, 0.45%)</title><rect x="910.6" y="485" width="5.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="913.60" y="495.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (30,914,642 samples, 0.47%)</title><rect x="936.8" y="485" width="5.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="939.83" y="495.5" ></text>
</g>
<g >
<title>[perf-83124.map] (1,085,958,005 samples, 16.50%)</title><rect x="71.8" y="485" width="194.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="74.78" y="495.5" >[perf-83124.map]</text>
</g>
<g >
<title>pypy_g_portal_11 (16,941,476 samples, 0.26%)</title><rect x="923.2" y="485" width="3.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="926.21" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (402,177,491 samples, 6.11%)</title><rect x="374.0" y="341" width="72.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="376.98" y="351.5" >do_epoll..</text>
</g>
<g >
<title>[libc-2.31.so] (154,334,746 samples, 2.35%)</title><rect x="10.0" y="501" width="27.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >[..</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (20,366,028 samples, 0.31%)</title><rect x="480.2" y="469" width="3.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="483.17" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_virtualref_info (15,553,875 samples, 0.24%)</title><rect x="1093.1" y="501" width="2.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1096.06" y="511.5" ></text>
</g>
<g >
<title>skb_release_all (38,515,072 samples, 0.59%)</title><rect x="972.6" y="357" width="6.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="975.56" y="367.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (394,409,893 samples, 5.99%)</title><rect x="981.7" y="421" width="70.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="984.73" y="431.5" >sockfd_..</text>
</g>
<g >
<title>brk (11,536,635 samples, 0.18%)</title><rect x="665.5" y="485" width="2.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="668.49" y="495.5" ></text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (14,973,811 samples, 0.23%)</title><rect x="320.4" y="485" width="2.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="323.41" y="495.5" ></text>
</g>
<g >
<title>pypy_g_scoped_alloc__array_False_1 (20,451,168 samples, 0.31%)</title><rect x="532.5" y="469" width="3.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="535.46" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (15,200,469 samples, 0.23%)</title><rect x="276.3" y="453" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="279.34" y="463.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (20,558,164 samples, 0.31%)</title><rect x="551.3" y="309" width="3.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="554.33" y="319.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (19,109,227 samples, 0.29%)</title><rect x="601.7" y="197" width="3.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="604.72" y="207.5" ></text>
</g>
<g >
<title>all (6,581,405,297 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (12,670,386 samples, 0.19%)</title><rect x="979.5" y="405" width="2.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="982.46" y="415.5" ></text>
</g>
<g >
<title>tcp_push (620,402,358 samples, 9.43%)</title><rect x="551.3" y="341" width="111.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="554.33" y="351.5" >tcp_push</text>
</g>
<g >
<title>skb_copy (28,836,336 samples, 0.44%)</title><rect x="630.0" y="85" width="5.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="633.01" y="95.5" ></text>
</g>
<g >
<title>perf_event_sched_in (23,416,977 samples, 0.36%)</title><rect x="439.7" y="213" width="4.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="442.75" y="223.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (71,051,214 samples, 1.08%)</title><rect x="457.2" y="325" width="12.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="460.18" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (27,041,724 samples, 0.41%)</title><rect x="389.0" y="245" width="4.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="392.04" y="255.5" ></text>
</g>
<g >
<title>crtc_crc_read (13,666,405 samples, 0.21%)</title><rect x="650.5" y="181" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="653.54" y="191.5" ></text>
</g>
<g >
<title>dma_direct_map_page (16,847,355 samples, 0.26%)</title><rect x="625.1" y="85" width="3.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="628.06" y="95.5" ></text>
</g>
<g >
<title>apply_mask (12,910,356 samples, 0.20%)</title><rect x="279.1" y="485" width="2.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="282.06" y="495.5" ></text>
</g>
<g >
<title>pypy_g_newlist (26,128,449 samples, 0.40%)</title><rect x="918.5" y="485" width="4.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="921.53" y="495.5" ></text>
</g>
<g >
<title>ipt_do_table (110,811,364 samples, 1.68%)</title><rect x="581.9" y="181" width="19.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="584.85" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (17,451,339 samples, 0.27%)</title><rect x="366.4" y="389" width="3.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="369.44" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (500,711,980 samples, 7.61%)</title><rect x="962.7" y="453" width="89.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="965.68" y="463.5" >__x64_sys_..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition.cold (15,292,456 samples, 0.23%)</title><rect x="713.3" y="485" width="2.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="716.29" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_async_forcing (18,408,346 samples, 0.28%)</title><rect x="287.7" y="485" width="3.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="290.69" y="495.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,666,405 samples, 0.21%)</title><rect x="650.5" y="213" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="653.54" y="223.5" ></text>
</g>
<g >
<title>__kfree_skb (55,652,244 samples, 0.85%)</title><rect x="969.5" y="373" width="10.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="972.49" y="383.5" ></text>
</g>
<g >
<title>skb_copy_header (27,163,273 samples, 0.41%)</title><rect x="640.3" y="53" width="4.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="643.31" y="63.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_getfield_vable_i (13,386,821 samples, 0.20%)</title><rect x="1067.3" y="501" width="2.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1070.26" y="511.5" ></text>
</g>
<g >
<title>__fget_light (394,409,893 samples, 5.99%)</title><rect x="981.7" y="405" width="70.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="984.73" y="415.5" >__fget_..</text>
</g>
<g >
<title>tcp_sendmsg_locked (649,063,418 samples, 9.86%)</title><rect x="546.2" y="357" width="116.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="549.19" y="367.5" >tcp_sendmsg_lo..</text>
</g>
<g >
<title>pypy_g_handler_getfield_vable_r (16,459,318 samples, 0.25%)</title><rect x="1144.5" y="501" width="3.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1147.55" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__init (17,576,538 samples, 0.27%)</title><rect x="733.0" y="485" width="3.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="736.05" y="495.5" ></text>
</g>
<g >
<title>update_cfs_group (20,850,595 samples, 0.32%)</title><rect x="415.7" y="197" width="3.8" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="418.73" y="207.5" ></text>
</g>
<g >
<title>pypy_g_eq_w (24,524,032 samples, 0.37%)</title><rect x="1140.1" y="501" width="4.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1143.15" y="511.5" ></text>
</g>
<g >
<title>tcp_write_xmit (15,200,469 samples, 0.23%)</title><rect x="276.3" y="309" width="2.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="279.34" y="319.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (15,200,469 samples, 0.23%)</title><rect x="276.3" y="357" width="2.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="279.34" y="367.5" ></text>
</g>
<g >
<title>[unknown] (604,459,647 samples, 9.18%)</title><rect x="366.4" y="437" width="108.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.44" y="447.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (13,475,653 samples, 0.20%)</title><rect x="1187.6" y="501" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1190.58" y="511.5" ></text>
</g>
<g >
<title>epoll_wait (444,186,512 samples, 6.75%)</title><rect x="366.4" y="405" width="79.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="369.44" y="415.5" >epoll_wait</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_virtualref_info (16,083,907 samples, 0.24%)</title><rect x="736.2" y="485" width="2.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="739.20" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handle_jitexception_11 (13,116,516 samples, 0.20%)</title><rect x="325.4" y="485" width="2.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="328.41" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (114,675,740 samples, 1.74%)</title><rect x="692.7" y="485" width="20.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="695.73" y="495.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (12,323,014 samples, 0.19%)</title><rect x="549.1" y="341" width="2.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="552.12" y="351.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (36,128,116 samples, 0.55%)</title><rect x="812.0" y="485" width="6.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="815.01" y="495.5" ></text>
</g>
<g >
<title>inet_recvmsg (93,631,701 samples, 1.42%)</title><rect x="962.7" y="405" width="16.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="965.68" y="415.5" ></text>
</g>
<g >
<title>nf_hook_slow (129,920,591 samples, 1.97%)</title><rect x="581.9" y="213" width="23.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="584.85" y="223.5" >n..</text>
</g>
<g >
<title>__x64_sys_sendto (15,200,469 samples, 0.23%)</title><rect x="276.3" y="437" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="279.34" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (346,227,921 samples, 5.26%)</title><rect x="384.0" y="293" width="62.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="387.01" y="303.5" >schedu..</text>
</g>
<g >
<title>pypy_g__ll_dictnext_look_inside_iff__dictiterPtr_12 (19,428,692 samples, 0.30%)</title><rect x="312.1" y="485" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="315.10" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (25,103,044 samples, 0.38%)</title><rect x="955.4" y="485" width="4.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="958.42" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (347,721,597 samples, 5.28%)</title><rect x="383.7" y="309" width="62.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="386.74" y="319.5" >schedu..</text>
</g>
<g >
<title>update_load_avg (38,121,281 samples, 0.58%)</title><rect x="422.4" y="197" width="6.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="425.40" y="207.5" ></text>
</g>
<g >
<title>skb_clone (12,432,319 samples, 0.19%)</title><rect x="653.0" y="277" width="2.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="655.99" y="287.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (74,224,325 samples, 1.13%)</title><rect x="637.2" y="101" width="13.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="640.23" y="111.5" ></text>
</g>
<g >
<title>do_brk_flags (11,536,635 samples, 0.18%)</title><rect x="665.5" y="421" width="2.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="668.49" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_brk (11,536,635 samples, 0.18%)</title><rect x="665.5" y="437" width="2.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="668.49" y="447.5" ></text>
</g>
<g >
<title>malloc (39,583,840 samples, 0.60%)</title><rect x="1060.2" y="501" width="7.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1063.17" y="511.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (15,988,780 samples, 0.24%)</title><rect x="422.4" y="181" width="2.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="425.40" y="191.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (25,194,630 samples, 0.38%)</title><rect x="376.6" y="309" width="4.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="379.64" y="319.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (11,256,081 samples, 0.17%)</title><rect x="69.8" y="485" width="2.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.76" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (29,176,507 samples, 0.44%)</title><rect x="897.7" y="485" width="5.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="900.74" y="495.5" ></text>
</g>
<g >
<title>sock_sendmsg (682,100,816 samples, 10.36%)</title><rect x="543.2" y="405" width="122.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="546.20" y="415.5" >sock_sendmsg</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (102,133,668 samples, 1.55%)</title><rect x="451.6" y="405" width="18.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="454.60" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (30,783,825 samples, 0.47%)</title><rect x="446.1" y="405" width="5.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="449.08" y="415.5" ></text>
</g>
<g >
<title>iptable_filter_hook (110,811,364 samples, 1.68%)</title><rect x="581.9" y="197" width="19.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="584.85" y="207.5" ></text>
</g>
<g >
<title>__getpid (54,932,715 samples, 0.83%)</title><rect x="266.5" y="485" width="9.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="269.49" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (58,646,187 samples, 0.89%)</title><rect x="429.2" y="229" width="10.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="432.23" y="239.5" ></text>
</g>
<g >
<title>ep_send_events_proc (14,293,465 samples, 0.22%)</title><rect x="378.6" y="293" width="2.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="381.60" y="303.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (15,200,469 samples, 0.23%)</title><rect x="276.3" y="261" width="2.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="279.34" y="271.5" ></text>
</g>
<g >
<title>__skb_clone (12,432,319 samples, 0.19%)</title><rect x="653.0" y="261" width="2.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="655.99" y="271.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__init (13,589,279 samples, 0.21%)</title><rect x="364.0" y="469" width="2.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="367.01" y="479.5" ></text>
</g>
<g >
<title>__schedule (52,606,743 samples, 0.80%)</title><rect x="460.5" y="277" width="9.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="463.48" y="287.5" ></text>
</g>
<g >
<title>pypy_g_scoped_alloc__array_False_1 (14,853,544 samples, 0.23%)</title><rect x="1181.7" y="501" width="2.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1184.67" y="511.5" ></text>
</g>
<g >
<title>vgetargskeywords (32,066,416 samples, 0.49%)</title><rect x="949.7" y="485" width="5.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="952.67" y="495.5" ></text>
</g>
<g >
<title>flexible_sched_in (23,416,977 samples, 0.36%)</title><rect x="439.7" y="165" width="4.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="442.75" y="175.5" ></text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_fail (20,063,486 samples, 0.30%)</title><rect x="867.6" y="469" width="3.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="870.61" y="479.5" ></text>
</g>
<g >
<title>tg3_start_xmit (13,541,078 samples, 0.21%)</title><rect x="648.1" y="85" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="651.11" y="95.5" ></text>
</g>
<g >
<title>inet_sendmsg (682,100,816 samples, 10.36%)</title><rect x="543.2" y="389" width="122.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="546.20" y="399.5" >inet_sendmsg</text>
</g>
<g >
<title>pypy_g_get_strategy_from_list_object (10,173,698 samples, 0.15%)</title><rect x="530.6" y="469" width="1.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="533.63" y="479.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (18,490,115 samples, 0.28%)</title><rect x="797.1" y="485" width="3.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="800.13" y="495.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (14,996,729 samples, 0.23%)</title><rect x="783.7" y="485" width="2.7" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="786.74" y="495.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (27,041,724 samples, 0.41%)</title><rect x="389.0" y="277" width="4.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="392.04" y="287.5" ></text>
</g>
<g >
<title>pypy_g_execute_token__star_2_2 (36,527,090 samples, 0.56%)</title><rect x="846.4" y="485" width="6.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="849.41" y="495.5" ></text>
</g>
<g >
<title>pypy_g_newint__r_uint32 (32,712,216 samples, 0.50%)</title><rect x="1167.2" y="501" width="5.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1170.16" y="511.5" ></text>
</g>
<g >
<title>ip_local_out (15,200,469 samples, 0.23%)</title><rect x="276.3" y="245" width="2.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="279.34" y="255.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (19,288,068 samples, 0.29%)</title><rect x="1163.7" y="501" width="3.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1166.70" y="511.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_setarrayitem_vable_r (18,938,718 samples, 0.29%)</title><rect x="689.3" y="485" width="3.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="692.34" y="495.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (71,945,430 samples, 1.09%)</title><rect x="622.3" y="117" width="12.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="625.29" y="127.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (27,041,724 samples, 0.41%)</title><rect x="389.0" y="261" width="4.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="392.04" y="271.5" ></text>
</g>
<g >
<title>tcp_sendmsg (15,200,469 samples, 0.23%)</title><rect x="276.3" y="373" width="2.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="279.34" y="383.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (13,160,893 samples, 0.20%)</title><rect x="926.2" y="485" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="929.25" y="495.5" ></text>
</g>
<g >
<title>malloc (12,793,001 samples, 0.19%)</title><rect x="281.4" y="485" width="2.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="284.38" y="495.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (16,387,443 samples, 0.25%)</title><rect x="645.2" y="85" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="648.18" y="95.5" ></text>
</g>
<g >
<title>dequeue_task_fair (75,309,074 samples, 1.14%)</title><rect x="415.7" y="229" width="13.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="418.73" y="239.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (15,200,469 samples, 0.23%)</title><rect x="276.3" y="325" width="2.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="279.34" y="335.5" ></text>
</g>
<g >
<title>nf_hook_slow (15,200,469 samples, 0.23%)</title><rect x="276.3" y="213" width="2.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="279.34" y="223.5" ></text>
</g>
<g >
<title>ip_finish_output (238,731,564 samples, 3.63%)</title><rect x="607.7" y="213" width="42.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="610.74" y="223.5" >ip_f..</text>
</g>
<g >
<title>pypy_g_RSocket_recvinto (25,065,385 samples, 0.38%)</title><rect x="1081.1" y="501" width="4.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1084.12" y="511.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__trace_drag_out1 (15,362,975 samples, 0.23%)</title><rect x="477.4" y="469" width="2.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="480.41" y="479.5" ></text>
</g>
<g >
<title>[perf-83124.map] (1,477,101,442 samples, 22.44%)</title><rect x="69.8" y="501" width="264.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="72.76" y="511.5" >[perf-83124.map]</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (71,051,214 samples, 1.08%)</title><rect x="457.2" y="309" width="12.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="460.18" y="319.5" ></text>
</g>
<g >
<title>tcp_sendmsg (682,100,816 samples, 10.36%)</title><rect x="543.2" y="373" width="122.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="546.20" y="383.5" >tcp_sendmsg</text>
</g>
<g >
<title>pypy_g_Trace__encode (22,023,419 samples, 0.33%)</title><rect x="1120.5" y="501" width="4.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1123.52" y="511.5" ></text>
</g>
<g >
<title>__sys_recvfrom (500,711,980 samples, 7.61%)</title><rect x="962.7" y="437" width="89.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="965.68" y="447.5" >__sys_recv..</text>
</g>
<g >
<title>deflate (12,618,304 samples, 0.19%)</title><rect x="1057.9" y="501" width="2.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1060.91" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (52,716,291 samples, 0.80%)</title><rect x="1101.1" y="501" width="9.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1104.14" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (12,491,801 samples, 0.19%)</title><rect x="750.1" y="485" width="2.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="753.14" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_float (16,982,068 samples, 0.26%)</title><rect x="739.1" y="485" width="3.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="742.09" y="495.5" ></text>
</g>
<g >
<title>__tls_get_addr (14,564,698 samples, 0.22%)</title><rect x="1052.4" y="501" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1055.45" y="511.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (19,811,725 samples, 0.30%)</title><rect x="393.9" y="245" width="3.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="396.89" y="255.5" ></text>
</g>
<g >
<title>pypy_g_get_strategy_from_list_object (19,811,725 samples, 0.30%)</title><rect x="864.1" y="485" width="3.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="867.06" y="495.5" ></text>
</g>
<g >
<title>pypy_g_comparison_lt_impl (31,372,932 samples, 0.48%)</title><rect x="789.3" y="485" width="5.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="792.34" y="495.5" ></text>
</g>
<g >
<title>__update_load_avg_se (22,132,501 samples, 0.34%)</title><rect x="425.3" y="181" width="3.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="428.26" y="191.5" ></text>
</g>
<g >
<title>memset@plt (11,896,786 samples, 0.18%)</title><rect x="677.8" y="485" width="2.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="680.83" y="495.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (14,468,921 samples, 0.22%)</title><rect x="605.1" y="213" width="2.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="608.14" y="223.5" ></text>
</g>
<g >
<title>pypy_g__getitem_correct_indirection__v940___simple_call (13,888,556 samples, 0.21%)</title><rect x="296.6" y="485" width="2.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="299.55" y="495.5" ></text>
</g>
<g >
<title>pypy_g_shortcut_comparison (15,668,544 samples, 0.24%)</title><rect x="928.6" y="485" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="931.61" y="495.5" ></text>
</g>
<g >
<title>__libc_send (721,547,752 samples, 10.96%)</title><rect x="536.1" y="485" width="129.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="539.12" y="495.5" >__libc_send</text>
</g>
<g >
<title>apparmor_socket_recvmsg (12,670,386 samples, 0.19%)</title><rect x="979.5" y="389" width="2.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="982.46" y="399.5" ></text>
</g>
<g >
<title>pypy_g__ll_1_weakref_create__pypy_interpreter_generator (44,574,931 samples, 0.68%)</title><rect x="304.1" y="485" width="8.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="307.11" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11,536,635 samples, 0.18%)</title><rect x="665.5" y="469" width="2.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="668.49" y="479.5" ></text>
</g>
<g >
<title>__libc_send (15,200,469 samples, 0.23%)</title><rect x="276.3" y="485" width="2.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="279.34" y="495.5" ></text>
</g>
<g >
<title>ip_queue_xmit (494,616,246 samples, 7.52%)</title><rect x="564.3" y="277" width="88.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="567.31" y="287.5" >ip_queue_x..</text>
</g>
<g >
<title>pypy_g_JitCode_get_live_vars_info (18,381,535 samples, 0.28%)</title><rect x="721.2" y="485" width="3.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="724.23" y="495.5" ></text>
</g>
<g >
<title>pypy_g_read_int_at_mem___ptr (23,593,399 samples, 0.36%)</title><rect x="1177.4" y="501" width="4.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1180.44" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (19,768,504 samples, 0.30%)</title><rect x="466.4" y="245" width="3.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="469.37" y="255.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si_1 (18,884,297 samples, 0.29%)</title><rect x="884.3" y="485" width="3.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="887.26" y="495.5" ></text>
</g>
<g >
<title>pypy_g__ll_list_resize_hint_really__v1368___simple_call (14,541,895 samples, 0.22%)</title><rect x="1124.5" y="501" width="2.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1127.47" y="511.5" ></text>
</g>
<g >
<title>pypy_g__ll_dictnext_look_inside_iff__dictiterPtr_7 (12,630,136 samples, 0.19%)</title><rect x="315.6" y="485" width="2.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="318.59" y="495.5" ></text>
</g>
<g >
<title>__sys_sendto (682,100,816 samples, 10.36%)</title><rect x="543.2" y="421" width="122.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="546.20" y="431.5" >__sys_sendto</text>
</g>
<g >
<title>pypy_g_allocate_instance__W_BytesObject (17,795,330 samples, 0.27%)</title><rect x="777.6" y="485" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="780.58" y="495.5" ></text>
</g>
<g >
<title>tcp_recvmsg (71,989,442 samples, 1.09%)</title><rect x="966.6" y="389" width="12.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="969.56" y="399.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (20,695,886 samples, 0.31%)</title><rect x="658.9" y="293" width="3.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="661.85" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (54,932,715 samples, 0.83%)</title><rect x="266.5" y="469" width="9.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="269.49" y="479.5" ></text>
</g>
<g >
<title>pypy3.10 (6,581,405,297 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >pypy3.10</text>
</g>
<g >
<title>pypy_g__operate (14,245,138 samples, 0.22%)</title><rect x="317.9" y="485" width="2.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="320.85" y="495.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (44,295,804 samples, 0.67%)</title><rect x="637.2" y="85" width="8.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="640.23" y="95.5" ></text>
</g>
<g >
<title>ns_to_timespec64 (21,642,259 samples, 0.33%)</title><rect x="962.7" y="389" width="3.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="965.68" y="399.5" ></text>
</g>
<g >
<title>skb_copy (44,295,804 samples, 0.67%)</title><rect x="637.2" y="69" width="8.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="640.23" y="79.5" ></text>
</g>
<g >
<title>ctx_sched_in (23,416,977 samples, 0.36%)</title><rect x="439.7" y="197" width="4.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="442.75" y="207.5" ></text>
</g>
<g >
<title>sem_wait@@GLIBC_2.2.5 (40,705,235 samples, 0.62%)</title><rect x="942.4" y="485" width="7.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="945.38" y="495.5" ></text>
</g>
<g >
<title>[perf-83124.map] (13,589,279 samples, 0.21%)</title><rect x="364.0" y="485" width="2.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="367.01" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_strconcat__rpy_stringPtr_rpy_stringPtr (21,921,788 samples, 0.33%)</title><rect x="906.7" y="485" width="3.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="909.67" y="495.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (620,402,358 samples, 9.43%)</title><rect x="551.3" y="325" width="111.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="554.33" y="335.5" >__tcp_push_pe..</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v3098___simple_call__function_ (20,111,155 samples, 0.31%)</title><rect x="1160.1" y="501" width="3.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1163.10" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_grow__v1666___simple_call__function_ (19,135,132 samples, 0.29%)</title><rect x="887.6" y="485" width="3.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="890.65" y="495.5" ></text>
</g>
<g >
<title>tg3_start_xmit (11,431,017 samples, 0.17%)</title><rect x="635.2" y="117" width="2.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="638.18" y="127.5" ></text>
</g>
<g >
<title>do_epoll_wait (102,133,668 samples, 1.55%)</title><rect x="451.6" y="357" width="18.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="454.60" y="367.5" ></text>
</g>
<g >
<title>pypy_g_ll_portal_runner__Unsigned_Bool_pypy_interpreter (20,663,343 samples, 0.31%)</title><rect x="903.0" y="485" width="3.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="905.97" y="495.5" ></text>
</g>
<g >
<title>pypy_g_allocate__rpython_jit_metainterp_resume_ResumeDa (12,205,713 samples, 0.19%)</title><rect x="1130.4" y="501" width="2.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1133.42" y="511.5" ></text>
</g>
<g >
<title>[unknown] (444,186,512 samples, 6.75%)</title><rect x="366.4" y="421" width="79.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.44" y="431.5" >[unknown]</text>
</g>
<g >
<title>__calc_delta (17,488,524 samples, 0.27%)</title><rect x="463.2" y="197" width="3.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="466.24" y="207.5" ></text>
</g>
<g >
<title>pypy_g_handler_jit_merge_point (17,451,339 samples, 0.27%)</title><rect x="874.3" y="485" width="3.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="877.31" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (38,126,998 samples, 0.58%)</title><rect x="327.8" y="485" width="6.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="330.76" y="495.5" ></text>
</g>
<g >
<title>__libc_recv (541,156,836 samples, 8.22%)</title><rect x="955.4" y="501" width="97.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="958.42" y="511.5" >__libc_recv</text>
</g>
<g >
<title>__ip_local_out (15,200,469 samples, 0.23%)</title><rect x="276.3" y="229" width="2.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="279.34" y="239.5" ></text>
</g>
<g >
<title>pypy_g_ll_find_char__rpy_stringPtr_Char_Signed_Signed (22,509,623 samples, 0.34%)</title><rect x="893.7" y="485" width="4.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="896.70" y="495.5" ></text>
</g>
<g >
<title>__fget_light (17,748,191 samples, 0.27%)</title><rect x="451.6" y="341" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="454.60" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (516,053,792 samples, 7.84%)</title><rect x="959.9" y="469" width="92.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="962.92" y="479.5" >do_syscall_64</text>
</g>
<g >
<title>update_curr (17,488,524 samples, 0.27%)</title><rect x="463.2" y="213" width="3.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="466.24" y="223.5" ></text>
</g>
<g >
<title>pypy_g_stack_check (18,142,043 samples, 0.28%)</title><rect x="1184.3" y="501" width="3.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1187.33" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ExecutionContext_return_trace (14,045,045 samples, 0.21%)</title><rect x="716.0" y="485" width="2.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="719.03" y="495.5" ></text>
</g>
<g >
<title>pypy_g_get_and_call_function__star_2 (15,241,471 samples, 0.23%)</title><rect x="861.3" y="485" width="2.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="864.33" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (37,257,028 samples, 0.57%)</title><rect x="463.2" y="261" width="6.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="466.24" y="271.5" ></text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_fail (31,007,022 samples, 0.47%)</title><rect x="291.0" y="485" width="5.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="293.99" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch (23,458,785 samples, 0.36%)</title><rect x="439.7" y="245" width="4.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="442.74" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (516,053,792 samples, 7.84%)</title><rect x="959.9" y="485" width="92.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="962.92" y="495.5" >entry_SYSCA..</text>
</g>
<g >
<title>pypy_g_create_ref (12,079,248 samples, 0.18%)</title><rect x="795.0" y="485" width="2.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="797.97" y="495.5" ></text>
</g>
<g >
<title>pypy_g_LifetimeManager_try_pick_free_reg (20,580,933 samples, 0.31%)</title><rect x="1072.7" y="501" width="3.7" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1075.70" y="511.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1,493,676 samples, 0.02%)</title><rect x="383.7" y="293" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="386.74" y="303.5" ></text>
</g>
<g >
<title>vma_merge (11,536,635 samples, 0.18%)</title><rect x="665.5" y="405" width="2.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="668.49" y="415.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (494,616,246 samples, 7.52%)</title><rect x="564.3" y="261" width="88.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="567.31" y="271.5" >__ip_queue..</text>
</g>
<g >
<title>inflate (35,720,288 samples, 0.54%)</title><rect x="667.6" y="485" width="6.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="670.56" y="495.5" ></text>
</g>
<g >
<title>pypy_g_RPyReRaiseException (4,201,637 samples, 0.06%)</title><rect x="732.3" y="485" width="0.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="735.30" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (29,514,698 samples, 0.45%)</title><rect x="1095.8" y="501" width="5.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1098.84" y="511.5" ></text>
</g>
<g >
<title>dequeue_task_fair (17,488,524 samples, 0.27%)</title><rect x="463.2" y="245" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="466.24" y="255.5" ></text>
</g>
<g >
<title>__schedule (279,208,881 samples, 4.24%)</title><rect x="393.9" y="261" width="50.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="396.89" y="271.5" >__sch..</text>
</g>
<g >
<title>__vma_adjust (11,536,635 samples, 0.18%)</title><rect x="665.5" y="389" width="2.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="668.49" y="399.5" ></text>
</g>
<g >
<title>update_curr (16,337,198 samples, 0.25%)</title><rect x="419.5" y="197" width="2.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="422.47" y="207.5" ></text>
</g>
<g >
<title>skb_free_head (38,515,072 samples, 0.59%)</title><rect x="972.6" y="341" width="6.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="975.56" y="351.5" ></text>
</g>
<g >
<title>tcp_push (15,200,469 samples, 0.23%)</title><rect x="276.3" y="341" width="2.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="279.34" y="351.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (18,444,471 samples, 0.28%)</title><rect x="457.2" y="277" width="3.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="460.18" y="287.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (28,018,888 samples, 0.43%)</title><rect x="684.3" y="485" width="5.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="687.31" y="495.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (13,437,664 samples, 0.20%)</title><rect x="384.0" y="277" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="387.01" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (426,735,173 samples, 6.48%)</title><rect x="369.6" y="373" width="76.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="372.57" y="383.5" >do_sysca..</text>
</g>
<g >
<title>__copy_skb_header (27,163,273 samples, 0.41%)</title><rect x="640.3" y="37" width="4.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="643.31" y="47.5" ></text>
</g>
<g >
<title>pypy_g__ll_malloc_varsize_no_length__Signed_Signed_Sign (18,625,259 samples, 0.28%)</title><rect x="1127.1" y="501" width="3.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1130.08" y="511.5" ></text>
</g>
<g >
<title>pypy_g_hash_w (14,970,305 samples, 0.23%)</title><rect x="877.4" y="485" width="2.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="880.44" y="495.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_1 (15,813,562 samples, 0.24%)</title><rect x="853.0" y="485" width="2.8" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="855.96" y="495.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_recv (11,766,518 samples, 0.18%)</title><rect x="1079.0" y="501" width="2.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1082.01" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,899,960 samples, 0.18%)</title><rect x="444.0" y="261" width="2.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="446.95" y="271.5" ></text>
</g>
<g >
<title>drm_connector_pick_cmdline_mode (19,109,227 samples, 0.29%)</title><rect x="601.7" y="181" width="3.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="604.72" y="191.5" ></text>
</g>
<g >
<title>aa_sk_perm (12,670,386 samples, 0.19%)</title><rect x="979.5" y="373" width="2.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="982.46" y="383.5" ></text>
</g>
<g >
<title>neigh_resolve_output (74,224,325 samples, 1.13%)</title><rect x="637.2" y="165" width="13.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="640.23" y="175.5" ></text>
</g>
<g >
<title>[unknown] (618,928,414 samples, 9.40%)</title><rect x="366.4" y="469" width="111.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="369.44" y="479.5" >[unknown]</text>
</g>
<g >
<title>malloc (21,543,626 samples, 0.33%)</title><rect x="674.0" y="485" width="3.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="676.96" y="495.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (128,565,972 samples, 1.95%)</title><rect x="341.0" y="485" width="23.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="343.96" y="495.5" >[..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_int (14,814,106 samples, 0.23%)</title><rect x="742.1" y="485" width="2.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="745.13" y="495.5" ></text>
</g>
<g >
<title>pypy_g_tuple_from_args_w (20,138,856 samples, 0.31%)</title><rect x="933.2" y="485" width="3.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="936.22" y="495.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (178,993,347 samples, 2.72%)</title><rect x="37.7" y="501" width="32.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="40.67" y="511.5" >[l..</text>
</g>
<g >
<title>ep_poll (402,177,491 samples, 6.11%)</title><rect x="374.0" y="325" width="72.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="376.98" y="335.5" >ep_poll</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (14,468,767 samples, 0.22%)</title><rect x="474.8" y="453" width="2.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="477.82" y="463.5" ></text>
</g>
<g >
<title>__sys_sendto (15,200,469 samples, 0.23%)</title><rect x="276.3" y="421" width="2.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="279.34" y="431.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__pure_lookup_where_with_method_cach (31,806,692 samples, 0.48%)</title><rect x="752.4" y="485" width="5.7" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="755.38" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (402,177,491 samples, 6.11%)</title><rect x="374.0" y="357" width="72.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="376.98" y="367.5" >__x64_sy..</text>
</g>
<g >
<title>syscall_return_via_sysret (10,838,845 samples, 0.16%)</title><rect x="469.9" y="405" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="472.92" y="415.5" ></text>
</g>
<g >
<title>__lock_text_start (14,639,692 samples, 0.22%)</title><rect x="386.4" y="261" width="2.6" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="389.42" y="271.5" ></text>
</g>
<g >
<title>dequeue_entity (75,309,074 samples, 1.14%)</title><rect x="415.7" y="213" width="13.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="418.73" y="223.5" ></text>
</g>
<g >
<title>queue_wait (10,778,488 samples, 0.16%)</title><rect x="628.1" y="101" width="1.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="631.08" y="111.5" ></text>
</g>
<g >
<title>dev_queue_xmit (136,388,320 samples, 2.07%)</title><rect x="612.8" y="165" width="24.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="615.78" y="175.5" >d..</text>
</g>
<g >
<title>pypy_g_PyFrame___init__ (14,639,692 samples, 0.22%)</title><rect x="1076.4" y="501" width="2.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1079.39" y="511.5" ></text>
</g>
<g >
<title>dev_queue_xmit (74,224,325 samples, 1.13%)</title><rect x="637.2" y="149" width="13.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="640.23" y="159.5" ></text>
</g>
<g >
<title>pypy_g_assembler_call_helper_57 (16,577,009 samples, 0.25%)</title><rect x="780.8" y="485" width="2.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="783.77" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (235,938,371 samples, 3.58%)</title><rect x="397.4" y="245" width="42.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="400.44" y="255.5" >dea..</text>
</g>
<g >
<title>pypy_g__invoke_comparison (15,018,865 samples, 0.23%)</title><rect x="767.2" y="485" width="2.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="770.22" y="495.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (74,224,325 samples, 1.13%)</title><rect x="637.2" y="133" width="13.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="640.23" y="143.5" ></text>
</g>
<g >
<title>memcpy_erms (11,854,268 samples, 0.18%)</title><rect x="630.0" y="69" width="2.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="633.01" y="79.5" ></text>
</g>
<g >
<title>ktime_get_ts64 (13,334,263 samples, 0.20%)</title><rect x="454.8" y="325" width="2.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="457.79" y="335.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (23,458,785 samples, 0.36%)</title><rect x="439.7" y="229" width="4.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="442.74" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,200,469 samples, 0.23%)</title><rect x="276.3" y="469" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="279.34" y="479.5" ></text>
</g>
<g >
<title>__alloc_skb (17,132,531 samples, 0.26%)</title><rect x="637.2" y="53" width="3.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="640.23" y="63.5" ></text>
</g>
<g >
<title>sock_sendmsg (15,200,469 samples, 0.23%)</title><rect x="276.3" y="405" width="2.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="279.34" y="415.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (16,262,775 samples, 0.25%)</title><rect x="786.4" y="485" width="2.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="789.43" y="495.5" ></text>
</g>
<g >
<title>sock_recvmsg (106,302,087 samples, 1.62%)</title><rect x="962.7" y="421" width="19.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="965.68" y="431.5" ></text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (42,734,802 samples, 0.65%)</title><rect x="769.9" y="485" width="7.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="772.91" y="495.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (522,807,793 samples, 7.94%)</title><rect x="561.5" y="293" width="93.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="564.49" y="303.5" >__tcp_trans..</text>
</g>
<g >
<title>schedule (52,606,743 samples, 0.80%)</title><rect x="460.5" y="293" width="9.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="463.48" y="303.5" ></text>
</g>
<g >
<title>nlm_traverse_locks (13,666,405 samples, 0.21%)</title><rect x="650.5" y="165" width="2.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="653.54" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (682,100,816 samples, 10.36%)</title><rect x="543.2" y="437" width="122.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="546.20" y="447.5" >__x64_sys_sendto</text>
</g>
<g >
<title>ip_output (266,866,890 samples, 4.05%)</title><rect x="605.1" y="229" width="47.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="608.14" y="239.5" >ip_o..</text>
</g>
<g >
<title>ep_poll (84,385,477 samples, 1.28%)</title><rect x="454.8" y="341" width="15.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="457.79" y="351.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (27,276,456 samples, 0.41%)</title><rect x="1132.6" y="501" width="4.9" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1135.61" y="511.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (12,323,014 samples, 0.19%)</title><rect x="549.1" y="325" width="2.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="552.12" y="335.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_writebarrier_before_copy (155,479,356 samples, 2.36%)</title><rect x="483.8" y="469" width="27.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="486.82" y="479.5" >p..</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1525___simple_call__function_ (31,532,558 samples, 0.48%)</title><rect x="1154.4" y="501" width="5.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1157.44" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1141___simple_call__function_ (14,634,377 samples, 0.22%)</title><rect x="891.1" y="485" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="894.08" y="495.5" ></text>
</g>
<g >
<title>tcp_write_xmit (599,844,194 samples, 9.11%)</title><rect x="555.0" y="309" width="107.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="558.01" y="319.5" >tcp_write_xmit</text>
</g>
<g >
<title>tcp_stream_memory_free (16,342,349 samples, 0.25%)</title><rect x="662.6" y="357" width="2.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="665.56" y="367.5" ></text>
</g>
<g >
<title>pypy_g_Reader_next_item (41,486,426 samples, 0.63%)</title><rect x="1085.6" y="501" width="7.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1088.62" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output2 (225,209,508 samples, 3.42%)</title><rect x="610.2" y="181" width="40.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="613.16" y="191.5" >ip_..</text>
</g>
<g >
<title>crtc_crc_read (13,666,405 samples, 0.21%)</title><rect x="650.5" y="197" width="2.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="653.54" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (14,869,761 samples, 0.23%)</title><rect x="536.1" y="469" width="2.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="539.12" y="479.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (17,132,531 samples, 0.26%)</title><rect x="637.2" y="37" width="3.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="640.23" y="47.5" ></text>
</g>
<g >
<title>sch_direct_xmit (74,224,325 samples, 1.13%)</title><rect x="637.2" y="117" width="13.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="640.23" y="127.5" ></text>
</g>
<g >
<title>pypy_g__call_binop_impl____or_____ror__ (16,049,506 samples, 0.24%)</title><rect x="761.2" y="485" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="764.24" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (35,473,227 samples, 0.54%)</title><rect x="334.6" y="485" width="6.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="337.60" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1962___simple_call__fu (22,516,576 samples, 0.34%)</title><rect x="1150.4" y="501" width="4.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1153.41" y="511.5" ></text>
</g>
<g >
<title>drm_syncobj_signal_ioctl (19,109,227 samples, 0.29%)</title><rect x="601.7" y="165" width="3.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="604.72" y="175.5" ></text>
</g>
<g >
<title>machine_cred (16,847,355 samples, 0.26%)</title><rect x="625.1" y="101" width="3.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="628.06" y="111.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (14,639,692 samples, 0.22%)</title><rect x="386.4" y="277" width="2.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="389.42" y="287.5" ></text>
</g>
</g>
</svg>
