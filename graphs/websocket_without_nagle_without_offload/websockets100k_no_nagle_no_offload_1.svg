<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>debug_table (16,503,897 samples, 0.26%)</title><rect x="730.1" y="101" width="3.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="733.06" y="111.5" ></text>
</g>
<g >
<title>pypy_g_CALL_METHOD_KW__AccessDirect_star_1 (45,292,874 samples, 0.70%)</title><rect x="1043.8" y="501" width="8.2" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1046.75" y="511.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (17,707,242 samples, 0.27%)</title><rect x="283.8" y="341" width="3.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="286.84" y="351.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (425,332,907 samples, 6.57%)</title><rect x="685.7" y="357" width="77.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="688.67" y="367.5" >tcp_send..</text>
</g>
<g >
<title>drm_mode_atomic_ioctl (15,045,833 samples, 0.23%)</title><rect x="720.0" y="165" width="2.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="723.03" y="175.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (249,482,129 samples, 3.86%)</title><rect x="424.4" y="293" width="45.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="427.41" y="303.5" >sche..</text>
</g>
<g >
<title>malloc (33,095,479 samples, 0.51%)</title><rect x="294.8" y="485" width="6.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="297.76" y="495.5" ></text>
</g>
<g >
<title>pypy_g_bh_getfield_gc_i___ptr (11,642,123 samples, 0.18%)</title><rect x="1118.1" y="501" width="2.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1121.13" y="511.5" ></text>
</g>
<g >
<title>deactivate_task (44,540,150 samples, 0.69%)</title><rect x="507.6" y="261" width="8.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="510.56" y="271.5" ></text>
</g>
<g >
<title>pypy_g_set_contextvar_context (13,759,977 samples, 0.21%)</title><rect x="662.4" y="469" width="2.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="665.36" y="479.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (32,466,833 samples, 0.50%)</title><rect x="418.5" y="309" width="5.9" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="421.49" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (10,463,246 samples, 0.16%)</title><rect x="25.8" y="469" width="1.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="28.78" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (311,524,013 samples, 4.81%)</title><rect x="413.1" y="357" width="56.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="416.10" y="367.5" >__x64_..</text>
</g>
<g >
<title>__fget_light (34,529,154 samples, 0.53%)</title><rect x="763.2" y="389" width="6.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="766.23" y="399.5" ></text>
</g>
<g >
<title>ip_queue_xmit (267,931,464 samples, 4.14%)</title><rect x="704.9" y="277" width="48.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="707.88" y="287.5" >ip_q..</text>
</g>
<g >
<title>ip_local_out (230,682,815 samples, 3.56%)</title><rect x="711.7" y="245" width="42.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="714.67" y="255.5" >ip_..</text>
</g>
<g >
<title>__sys_recvfrom (123,664,209 samples, 1.91%)</title><rect x="996.7" y="437" width="22.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="999.74" y="447.5" >_..</text>
</g>
<g >
<title>pypy_g_wrapper_second_level__star_1_31 (23,292,966 samples, 0.36%)</title><rect x="362.5" y="485" width="4.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="365.45" y="495.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (34,529,154 samples, 0.53%)</title><rect x="763.2" y="405" width="6.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="766.23" y="415.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (13,981,153 samples, 0.22%)</title><rect x="505.0" y="261" width="2.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="508.01" y="271.5" ></text>
</g>
<g >
<title>pypy_g__rawrefcount_perform (14,756,829 samples, 0.23%)</title><rect x="1112.9" y="501" width="2.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1115.94" y="511.5" ></text>
</g>
<g >
<title>dev_queue_xmit (100,480,809 samples, 1.55%)</title><rect x="730.1" y="165" width="18.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="733.06" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,463,703,012 samples, 22.62%)</title><rect x="398.0" y="485" width="266.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="400.96" y="495.5" >[unknown]</text>
</g>
<g >
<title>update_load_avg (18,635,096 samples, 0.29%)</title><rect x="442.3" y="197" width="3.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="445.27" y="207.5" ></text>
</g>
<g >
<title>do_IRQ (15,938,386 samples, 0.25%)</title><rect x="424.4" y="229" width="2.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="427.41" y="239.5" ></text>
</g>
<g >
<title>pypy_g_handler_getfield_gc_r_pure_1 (17,923,002 samples, 0.28%)</title><rect x="956.5" y="485" width="3.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="959.49" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (19,596,474 samples, 0.30%)</title><rect x="36.5" y="485" width="3.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="39.49" y="495.5" ></text>
</g>
<g >
<title>account_entity_dequeue (15,233,481 samples, 0.24%)</title><rect x="435.3" y="213" width="2.8" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="438.29" y="223.5" ></text>
</g>
<g >
<title>pypy_g__flat_pycall__AccessDirect_None (11,798,148 samples, 0.18%)</title><rect x="879.0" y="485" width="2.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="882.01" y="495.5" ></text>
</g>
<g >
<title>psi_task_change (44,197,604 samples, 0.68%)</title><rect x="445.7" y="229" width="8.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="448.67" y="239.5" ></text>
</g>
<g >
<title>pypy_g_IS_OP__AccessDirect_None (22,905,683 samples, 0.35%)</title><rect x="821.3" y="485" width="4.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="824.34" y="495.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (29,667,394 samples, 0.46%)</title><rect x="1011.4" y="389" width="5.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1014.39" y="399.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (15,245,537 samples, 0.24%)</title><rect x="975.9" y="485" width="2.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="978.89" y="495.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (42,406,456 samples, 0.66%)</title><rect x="490.5" y="293" width="7.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="493.55" y="303.5" ></text>
</g>
<g >
<title>ep_poll (191,415,041 samples, 2.96%)</title><rect x="486.5" y="341" width="34.9" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="489.53" y="351.5" >ep..</text>
</g>
<g >
<title>tcp_sendmsg_locked (17,707,242 samples, 0.27%)</title><rect x="283.8" y="357" width="3.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="286.84" y="367.5" ></text>
</g>
<g >
<title>__getpid (39,196,562 samples, 0.61%)</title><rect x="276.7" y="485" width="7.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="279.70" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (31,831,309 samples, 0.49%)</title><rect x="1025.1" y="485" width="5.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1028.06" y="495.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (38,265,783 samples, 0.59%)</title><rect x="999.7" y="373" width="7.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1002.73" y="383.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (86,919,758 samples, 1.34%)</title><rect x="382.1" y="485" width="15.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="385.11" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (249,482,129 samples, 3.86%)</title><rect x="424.4" y="309" width="45.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="427.41" y="319.5" >sche..</text>
</g>
<g >
<title>rpc_pipe_fs_type (36,874,030 samples, 0.57%)</title><rect x="733.1" y="101" width="6.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="736.07" y="111.5" ></text>
</g>
<g >
<title>cfree (16,503,897 samples, 0.26%)</title><rect x="1022.0" y="501" width="3.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1025.05" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (33,284,648 samples, 0.51%)</title><rect x="456.3" y="229" width="6.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="459.29" y="239.5" ></text>
</g>
<g >
<title>pypy_g_dropvalues__AccessDirect_None (15,242,279 samples, 0.24%)</title><rect x="1124.6" y="501" width="2.8" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1127.63" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (26,464,065 samples, 0.41%)</title><rect x="279.0" y="453" width="4.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="282.02" y="463.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1182___simple_call__function_ (29,856,874 samples, 0.46%)</title><rect x="1152.1" y="501" width="5.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1155.07" y="511.5" ></text>
</g>
<g >
<title>inet_sendmsg (17,707,242 samples, 0.27%)</title><rect x="283.8" y="389" width="3.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="286.84" y="399.5" ></text>
</g>
<g >
<title>tg3_tx_skb_unmap.isra.0 (28,762,472 samples, 0.44%)</title><rect x="743.1" y="101" width="5.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="746.14" y="111.5" ></text>
</g>
<g >
<title>skb_free_head (16,407,968 samples, 0.25%)</title><rect x="996.7" y="341" width="3.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="999.74" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_init (15,938,386 samples, 0.25%)</title><rect x="424.4" y="261" width="2.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="427.41" y="271.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (63,625,995 samples, 0.98%)</title><rect x="714.3" y="197" width="11.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="717.29" y="207.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_register_finalizer (10,606,798 samples, 0.16%)</title><rect x="304.2" y="485" width="1.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="307.17" y="495.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (311,310,465 samples, 4.81%)</title><rect x="700.4" y="325" width="56.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="703.42" y="335.5" >__tcp_..</text>
</g>
<g >
<title>tcp_send_mss (33,099,482 samples, 0.51%)</title><rect x="757.2" y="341" width="6.0" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="760.19" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (14,014,196 samples, 0.22%)</title><rect x="453.7" y="229" width="2.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="456.73" y="239.5" ></text>
</g>
<g >
<title>sock_sendmsg (451,251,164 samples, 6.97%)</title><rect x="680.9" y="405" width="82.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="683.94" y="415.5" >sock_send..</text>
</g>
<g >
<title>[perf-84960.map] (1,272,660,122 samples, 19.67%)</title><rect x="40.1" y="485" width="232.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="43.06" y="495.5" >[perf-84960.map]</text>
</g>
<g >
<title>__errno_location (13,467,416 samples, 0.21%)</title><rect x="991.9" y="501" width="2.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="994.90" y="511.5" ></text>
</g>
<g >
<title>inflate (9,221,134 samples, 0.14%)</title><rect x="779.5" y="485" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="782.45" y="495.5" ></text>
</g>
<g >
<title>neigh_resolve_output (29,382,521 samples, 0.45%)</title><rect x="748.4" y="165" width="5.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="751.38" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (17,707,242 samples, 0.27%)</title><rect x="283.8" y="437" width="3.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="286.84" y="447.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_2_2 (16,415,467 samples, 0.25%)</title><rect x="932.0" y="485" width="3.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="934.97" y="495.5" ></text>
</g>
<g >
<title>pypy_g_clear_vable_token (164,818,889 samples, 2.55%)</title><rect x="315.2" y="485" width="30.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="318.18" y="495.5" >py..</text>
</g>
<g >
<title>do_epoll_wait (206,154,505 samples, 3.19%)</title><rect x="483.8" y="357" width="37.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="486.84" y="367.5" >do_..</text>
</g>
<g >
<title>pypy_g_W_AbstractSeqIterObject_shortcut___next__ (14,306,167 samples, 0.22%)</title><rect x="1095.8" y="501" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1098.84" y="511.5" ></text>
</g>
<g >
<title>convertitem (30,355,131 samples, 0.47%)</title><rect x="773.9" y="485" width="5.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="776.92" y="495.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (44,581,359 samples, 0.69%)</title><rect x="1008.7" y="405" width="8.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1011.67" y="415.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (36,837,401 samples, 0.57%)</title><rect x="524.4" y="469" width="6.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="527.37" y="479.5" ></text>
</g>
<g >
<title>pypy_g_force_now_1 (47,725,180 samples, 0.74%)</title><rect x="345.2" y="485" width="8.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="348.24" y="495.5" ></text>
</g>
<g >
<title>all (6,470,971,126 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (31,472,514 samples, 0.49%)</title><rect x="714.3" y="165" width="5.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="717.29" y="175.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (13,976,348 samples, 0.22%)</title><rect x="453.7" y="181" width="2.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="456.74" y="191.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v3654___simple_call__function_ (26,912,391 samples, 0.42%)</title><rect x="1163.9" y="501" width="4.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1166.92" y="511.5" ></text>
</g>
<g >
<title>sock_poll (42,406,456 samples, 0.66%)</title><rect x="490.5" y="277" width="7.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="493.55" y="287.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (12,081,344 samples, 0.19%)</title><rect x="700.4" y="309" width="2.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="703.42" y="319.5" ></text>
</g>
<g >
<title>pypy_g_ExecutionContext_return_trace (21,249,500 samples, 0.33%)</title><rect x="817.5" y="485" width="3.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="820.46" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (30,003,376 samples, 0.46%)</title><rect x="516.0" y="245" width="5.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="518.96" y="255.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_2 (52,533,864 samples, 0.81%)</title><rect x="944.1" y="485" width="9.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="947.14" y="495.5" ></text>
</g>
<g >
<title>malloc (30,870,446 samples, 0.48%)</title><rect x="1034.4" y="501" width="5.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1037.38" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (30,693,256 samples, 0.47%)</title><rect x="852.1" y="485" width="5.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="855.14" y="495.5" ></text>
</g>
<g >
<title>pypy_g_GeneratorOrCoroutine__send_ex (14,671,419 samples, 0.23%)</title><rect x="1052.0" y="501" width="2.7" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1055.01" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (47,298,844 samples, 0.73%)</title><rect x="453.7" y="245" width="8.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="456.73" y="255.5" ></text>
</g>
<g >
<title>pypy_g__ll_dictnext_look_inside_iff__dictiterPtr_7 (18,349,837 samples, 0.28%)</title><rect x="309.6" y="485" width="3.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="312.58" y="495.5" ></text>
</g>
<g >
<title>__ksize (38,592,240 samples, 0.60%)</title><rect x="690.3" y="293" width="7.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="693.28" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (503,060,131 samples, 7.77%)</title><rect x="677.8" y="437" width="91.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="680.79" y="447.5" >__x64_sys_..</text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (49,446,611 samples, 0.76%)</title><rect x="900.4" y="485" width="9.0" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="903.37" y="495.5" ></text>
</g>
<g >
<title>pypy_g_dispatcher_Py_14 (8,766,154 samples, 0.14%)</title><rect x="1123.0" y="501" width="1.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1126.04" y="511.5" ></text>
</g>
<g >
<title>put_prev_task_fair (20,809,537 samples, 0.32%)</title><rect x="462.4" y="229" width="3.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="465.35" y="239.5" ></text>
</g>
<g >
<title>tcp_recvmsg (65,445,590 samples, 1.01%)</title><rect x="996.7" y="389" width="12.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="999.74" y="399.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1525___simple_call__function_ (18,995,995 samples, 0.29%)</title><rect x="1157.5" y="501" width="3.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1160.52" y="511.5" ></text>
</g>
<g >
<title>drm_mode_list_lessees_ioctl (12,205,204 samples, 0.19%)</title><rect x="725.9" y="165" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="728.89" y="175.5" ></text>
</g>
<g >
<title>__libc_send (17,707,242 samples, 0.27%)</title><rect x="283.8" y="485" width="3.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="286.84" y="495.5" ></text>
</g>
<g >
<title>_PyPyArg_ParseTupleAndKeywords_SizeT (25,024,158 samples, 0.39%)</title><rect x="272.1" y="485" width="4.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="275.13" y="495.5" ></text>
</g>
<g >
<title>ep_poll (311,524,013 samples, 4.81%)</title><rect x="413.1" y="325" width="56.8" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="416.10" y="335.5" >ep_poll</text>
</g>
<g >
<title>[unknown] (647,214,387 samples, 10.00%)</title><rect x="403.4" y="437" width="118.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="406.41" y="447.5" >[unknown]</text>
</g>
<g >
<title>pypy_g__flat_pycall__AccessDirect_None (21,193,329 samples, 0.33%)</title><rect x="1098.4" y="501" width="3.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1101.45" y="511.5" ></text>
</g>
<g >
<title>__remove_hrtimer (18,070,844 samples, 0.28%)</title><rect x="427.3" y="261" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="430.32" y="271.5" ></text>
</g>
<g >
<title>psi_task_change (33,340,178 samples, 0.52%)</title><rect x="509.6" y="245" width="6.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="512.60" y="255.5" ></text>
</g>
<g >
<title>update_curr (23,061,173 samples, 0.36%)</title><rect x="438.1" y="197" width="4.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="441.07" y="207.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (681,193,836 samples, 10.53%)</title><rect x="533.3" y="469" width="124.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="536.33" y="479.5" >pypy_g_dispatch..</text>
</g>
<g >
<title>pypy_g_comparison_lt_impl (18,774,521 samples, 0.29%)</title><rect x="911.4" y="485" width="3.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="914.40" y="495.5" ></text>
</g>
<g >
<title>pypy_g__ll_alloc_and_set_nojit__GcStruct_listLlT_Signed (13,532,066 samples, 0.21%)</title><rect x="1107.3" y="501" width="2.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1110.27" y="511.5" ></text>
</g>
<g >
<title>pypy_g_BaseCpyTypedescr_allocate (15,960,067 samples, 0.25%)</title><rect x="792.3" y="485" width="2.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="795.34" y="495.5" ></text>
</g>
<g >
<title>pypy_g_POP_JUMP_IF_FALSE__AccessDirect_None (12,780,321 samples, 0.20%)</title><rect x="1061.5" y="501" width="2.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1064.50" y="511.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (48,253,053 samples, 0.75%)</title><rect x="27.7" y="501" width="8.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="30.69" y="511.5" ></text>
</g>
<g >
<title>pypy_g_allocate__rpython_jit_metainterp_resume_ResumeDa (15,523,506 samples, 0.24%)</title><rect x="895.6" y="485" width="2.8" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="898.56" y="495.5" ></text>
</g>
<g >
<title>pypy_g_W_BytesObject_shortcut___len__ (8,767,455 samples, 0.14%)</title><rect x="865.7" y="485" width="1.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="868.74" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (110,735,910 samples, 1.71%)</title><rect x="433.5" y="245" width="20.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="436.54" y="255.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (18,933,626 samples, 0.29%)</title><rect x="753.7" y="277" width="3.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="756.74" y="287.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1637___simple_call__function_ (16,140,890 samples, 0.25%)</title><rect x="1161.0" y="501" width="2.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1163.98" y="511.5" ></text>
</g>
<g >
<title>pypy_epoll_wait (21,311,542 samples, 0.33%)</title><rect x="781.1" y="485" width="3.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="784.14" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (354,428,580 samples, 5.48%)</title><rect x="405.3" y="389" width="64.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="408.28" y="399.5" >entry_S..</text>
</g>
<g >
<title>do_syscall_64 (503,060,131 samples, 7.77%)</title><rect x="677.8" y="453" width="91.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="680.79" y="463.5" >do_syscall..</text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2 (15,924,791 samples, 0.25%)</title><rect x="978.7" y="485" width="2.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="981.67" y="495.5" ></text>
</g>
<g >
<title>__cgroup_bpf_run_filter_skb (10,656,059 samples, 0.16%)</title><rect x="728.1" y="213" width="2.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="731.12" y="223.5" ></text>
</g>
<g >
<title>pypy_g_W_SetObject_shortcut___iter__ (12,318,504 samples, 0.19%)</title><rect x="531.1" y="469" width="2.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="534.08" y="479.5" ></text>
</g>
<g >
<title>pypy3.10 (6,470,971,126 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >pypy3.10</text>
</g>
<g >
<title>pypy_epoll_wait (15,145,375 samples, 0.23%)</title><rect x="475.8" y="405" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="478.76" y="415.5" ></text>
</g>
<g >
<title>memset_erms (15,658,998 samples, 0.24%)</title><rect x="733.1" y="37" width="2.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="736.07" y="47.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__R (18,944,217 samples, 0.29%)</title><rect x="881.2" y="485" width="3.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="884.16" y="495.5" ></text>
</g>
<g >
<title>native_write_msr (13,976,348 samples, 0.22%)</title><rect x="453.7" y="165" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="456.74" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (503,060,131 samples, 7.77%)</title><rect x="677.8" y="469" width="91.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="680.79" y="479.5" >entry_SYSC..</text>
</g>
<g >
<title>pypy_g_ResumeDataVirtualAdder_register_box (14,358,858 samples, 0.22%)</title><rect x="857.7" y="485" width="2.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="860.74" y="495.5" ></text>
</g>
<g >
<title>schedule (109,797,232 samples, 1.70%)</title><rect x="501.4" y="293" width="20.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="504.41" y="303.5" ></text>
</g>
<g >
<title>__ip_local_out (20,563,601 samples, 0.32%)</title><rect x="707.9" y="245" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="710.92" y="255.5" ></text>
</g>
<g >
<title>pypy_g__invoke_comparison (19,598,291 samples, 0.30%)</title><rect x="884.6" y="485" width="3.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="887.61" y="495.5" ></text>
</g>
<g >
<title>get_errno (16,568,454 samples, 0.26%)</title><rect x="291.7" y="485" width="3.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="294.74" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (126,952,957 samples, 1.96%)</title><rect x="498.3" y="325" width="23.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="501.28" y="335.5" >s..</text>
</g>
<g >
<title>schedule (214,018,589 samples, 3.31%)</title><rect x="430.9" y="277" width="39.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="433.88" y="287.5" >sch..</text>
</g>
<g >
<title>do_syscall_64 (136,711,712 samples, 2.11%)</title><rect x="994.4" y="469" width="24.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="997.36" y="479.5" >d..</text>
</g>
<g >
<title>pypy_g__match_keywords__v1018___simple_call__function_ (12,364,031 samples, 0.19%)</title><rect x="312.9" y="485" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="315.93" y="495.5" ></text>
</g>
<g >
<title>pypy_g_trace__gc_callback__trace_drag_out (39,005,992 samples, 0.60%)</title><rect x="1182.9" y="501" width="7.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1185.89" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (12,732,497 samples, 0.20%)</title><rect x="276.7" y="469" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="279.70" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_reindex__dicttablePtr_Signed_1 (14,026,111 samples, 0.22%)</title><rect x="973.3" y="485" width="2.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="976.33" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (311,524,013 samples, 4.81%)</title><rect x="413.1" y="341" width="56.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="416.10" y="351.5" >do_epo..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_getvirtual_ptr (12,290,835 samples, 0.19%)</title><rect x="1087.9" y="501" width="2.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1090.90" y="511.5" ></text>
</g>
<g >
<title>sch_direct_xmit (100,480,809 samples, 1.55%)</title><rect x="730.1" y="133" width="18.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="733.06" y="143.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader___init__ (19,180,424 samples, 0.30%)</title><rect x="846.9" y="485" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="849.93" y="495.5" ></text>
</g>
<g >
<title>sock_zerocopy_put (13,786,323 samples, 0.21%)</title><rect x="683.2" y="357" width="2.5" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="686.15" y="367.5" ></text>
</g>
<g >
<title>apply_mask (25,591,471 samples, 0.40%)</title><rect x="287.1" y="485" width="4.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="290.07" y="495.5" ></text>
</g>
<g >
<title>ip_output (140,519,389 samples, 2.17%)</title><rect x="728.1" y="229" width="25.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="731.12" y="239.5" >i..</text>
</g>
<g >
<title>finish_task_switch (31,518,908 samples, 0.49%)</title><rect x="515.7" y="261" width="5.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="518.68" y="271.5" ></text>
</g>
<g >
<title>ip_finish_output (129,863,330 samples, 2.01%)</title><rect x="730.1" y="213" width="23.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="733.06" y="223.5" >i..</text>
</g>
<g >
<title>sockfd_lookup_light (13,637,260 samples, 0.21%)</title><rect x="1016.8" y="421" width="2.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1019.80" y="431.5" ></text>
</g>
<g >
<title>pypy_g__check_len_result (22,091,216 samples, 0.34%)</title><rect x="875.0" y="485" width="4.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="877.98" y="495.5" ></text>
</g>
<g >
<title>pypy_g_get_awaitable_iter.part.0 (15,153,319 samples, 0.23%)</title><rect x="953.7" y="485" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="956.72" y="495.5" ></text>
</g>
<g >
<title>skb_release_data (16,503,897 samples, 0.26%)</title><rect x="730.1" y="53" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="733.06" y="63.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (16,102,548 samples, 0.25%)</title><rect x="521.4" y="453" width="3.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="524.43" y="463.5" ></text>
</g>
<g >
<title>pypy_g_call_function__star_2 (10,992,588 samples, 0.17%)</title><rect x="909.4" y="485" width="2.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="912.39" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,707,242 samples, 0.27%)</title><rect x="283.8" y="453" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="286.84" y="463.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_loop (39,103,858 samples, 0.60%)</title><rect x="916.8" y="485" width="7.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="919.76" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BuiltinCode2_fastcall_2.part.0 (17,564,485 samples, 0.27%)</title><rect x="814.3" y="485" width="3.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="817.26" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__allocate_shadow (40,042,676 samples, 0.62%)</title><rect x="825.5" y="485" width="7.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="828.52" y="495.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (10,879,461 samples, 0.17%)</title><rect x="898.4" y="485" width="2.0" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="901.39" y="495.5" ></text>
</g>
<g >
<title>visit_groups_merge (17,415,435 samples, 0.27%)</title><rect x="516.0" y="197" width="3.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="518.96" y="207.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (13,112,603 samples, 0.20%)</title><rect x="685.7" y="293" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="688.67" y="303.5" ></text>
</g>
<g >
<title>pypy_g_AsciiSetStrategy_length_2 (11,553,764 samples, 0.18%)</title><rect x="790.2" y="485" width="2.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="793.23" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (66,649,707 samples, 1.03%)</title><rect x="802.1" y="485" width="12.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="805.11" y="495.5" ></text>
</g>
<g >
<title>__fget_light (13,637,260 samples, 0.21%)</title><rect x="1016.8" y="405" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1019.80" y="415.5" ></text>
</g>
<g >
<title>sock_sendmsg (17,707,242 samples, 0.27%)</title><rect x="283.8" y="405" width="3.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="286.84" y="415.5" ></text>
</g>
<g >
<title>dev_queue_xmit (29,382,521 samples, 0.45%)</title><rect x="748.4" y="149" width="5.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="751.38" y="159.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_identityhash (34,319,818 samples, 0.53%)</title><rect x="832.8" y="485" width="6.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="835.82" y="495.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (16,632,462 samples, 0.26%)</title><rect x="1176.5" y="501" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1179.46" y="511.5" ></text>
</g>
<g >
<title>ep_send_events_proc (42,406,456 samples, 0.66%)</title><rect x="490.5" y="309" width="7.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="493.55" y="319.5" ></text>
</g>
<g >
<title>inet_recvmsg (65,445,590 samples, 1.01%)</title><rect x="996.7" y="405" width="12.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="999.74" y="415.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject_lookup_where_with_method_cache (15,526,028 samples, 0.24%)</title><rect x="869.7" y="485" width="2.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="872.68" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (15,064,864 samples, 0.23%)</title><rect x="795.2" y="485" width="2.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="798.25" y="495.5" ></text>
</g>
<g >
<title>set_next_task_idle (20,603,613 samples, 0.32%)</title><rect x="466.1" y="229" width="3.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="469.15" y="239.5" ></text>
</g>
<g >
<title>pypy_g_Reader_next_item (13,551,717 samples, 0.21%)</title><rect x="1063.8" y="501" width="2.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1066.83" y="511.5" ></text>
</g>
<g >
<title>nf_nat_locks (17,107,648 samples, 0.26%)</title><rect x="722.8" y="181" width="3.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="725.77" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (341,996,889 samples, 5.29%)</title><rect x="407.5" y="373" width="62.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="410.54" y="383.5" >do_sys..</text>
</g>
<g >
<title>pypy_g_funccall_valuestack__AccessDirect_None (12,660,862 samples, 0.20%)</title><rect x="1137.0" y="501" width="2.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1139.96" y="511.5" ></text>
</g>
<g >
<title>pypy_g_wrapper_second_level__star_2_27 (13,729,630 samples, 0.21%)</title><rect x="366.7" y="485" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="369.70" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (10,904,571 samples, 0.17%)</title><rect x="769.5" y="469" width="2.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="772.52" y="479.5" ></text>
</g>
<g >
<title>__schedule (214,018,589 samples, 3.31%)</title><rect x="430.9" y="261" width="39.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="433.88" y="271.5" >__s..</text>
</g>
<g >
<title>dequeue_entity (41,696,269 samples, 0.64%)</title><rect x="438.1" y="213" width="7.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="441.07" y="223.5" ></text>
</g>
<g >
<title>clock_gettime (31,831,309 samples, 0.49%)</title><rect x="1025.1" y="501" width="5.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1028.06" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (126,952,957 samples, 1.96%)</title><rect x="498.3" y="309" width="23.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="501.28" y="319.5" >s..</text>
</g>
<g >
<title>pick_next_task_idle (41,413,150 samples, 0.64%)</title><rect x="462.4" y="245" width="7.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="465.35" y="255.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (42,406,456 samples, 0.66%)</title><rect x="490.5" y="325" width="7.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="493.55" y="335.5" ></text>
</g>
<g >
<title>sch_direct_xmit (12,306,633 samples, 0.19%)</title><rect x="751.5" y="117" width="2.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="754.50" y="127.5" ></text>
</g>
<g >
<title>PyPyTuple_New (12,998,132 samples, 0.20%)</title><rect x="369.2" y="485" width="2.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="372.20" y="495.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (12,205,204 samples, 0.19%)</title><rect x="725.9" y="197" width="2.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="728.89" y="207.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (15,938,386 samples, 0.25%)</title><rect x="424.4" y="277" width="2.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="427.41" y="287.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1182___simple_call__function_ (15,394,231 samples, 0.24%)</title><rect x="356.9" y="485" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="359.86" y="495.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (299,229,121 samples, 4.62%)</title><rect x="702.6" y="293" width="54.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="705.63" y="303.5" >__tcp..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (235,319,064 samples, 3.64%)</title><rect x="478.5" y="405" width="42.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="481.52" y="415.5" >entr..</text>
</g>
<g >
<title>x86_pmu_enable (14,014,196 samples, 0.22%)</title><rect x="453.7" y="197" width="2.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="456.73" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (18,635,096 samples, 0.29%)</title><rect x="442.3" y="165" width="3.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="445.27" y="175.5" ></text>
</g>
<g >
<title>cfree (13,191,944 samples, 0.20%)</title><rect x="771.5" y="485" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="774.51" y="495.5" ></text>
</g>
<g >
<title>check_cfs_rq_runtime (20,809,537 samples, 0.32%)</title><rect x="462.4" y="213" width="3.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="465.35" y="223.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (13,112,603 samples, 0.20%)</title><rect x="685.7" y="309" width="2.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="688.67" y="319.5" ></text>
</g>
<g >
<title>pypy_g_RPyRaiseException (16,032,901 samples, 0.25%)</title><rect x="844.0" y="485" width="2.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="847.00" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (12,587,941 samples, 0.19%)</title><rect x="519.1" y="229" width="2.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="522.14" y="239.5" ></text>
</g>
<g >
<title>pypy_g_dropvalues__AccessDirect_None (12,983,931 samples, 0.20%)</title><rect x="923.9" y="485" width="2.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="926.89" y="495.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (12,306,633 samples, 0.19%)</title><rect x="751.5" y="85" width="2.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="754.50" y="95.5" ></text>
</g>
<g >
<title>pypy_g_newlist (18,635,096 samples, 0.29%)</title><rect x="1179.5" y="501" width="3.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1182.49" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (12,431,691 samples, 0.19%)</title><rect x="405.3" y="373" width="2.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="408.28" y="383.5" ></text>
</g>
<g >
<title>skb_release_all (16,407,968 samples, 0.25%)</title><rect x="996.7" y="357" width="3.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="999.74" y="367.5" ></text>
</g>
<g >
<title>__sys_sendto (17,707,242 samples, 0.27%)</title><rect x="283.8" y="421" width="3.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="286.84" y="431.5" ></text>
</g>
<g >
<title>pypy_g_force_from_resumedata (28,941,430 samples, 0.45%)</title><rect x="938.9" y="485" width="5.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="941.87" y="495.5" ></text>
</g>
<g >
<title>skb_entail (17,026,604 samples, 0.26%)</title><rect x="697.3" y="341" width="3.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="700.32" y="351.5" ></text>
</g>
<g >
<title>skb_copy_bits (21,215,032 samples, 0.33%)</title><rect x="735.9" y="69" width="3.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="738.92" y="79.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (31,344,959 samples, 0.48%)</title><rect x="926.3" y="485" width="5.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="929.26" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1200___simple_call__fu (13,050,178 samples, 0.20%)</title><rect x="1146.7" y="501" width="2.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1149.66" y="511.5" ></text>
</g>
<g >
<title>__dev_kfree_skb_any (16,503,897 samples, 0.26%)</title><rect x="730.1" y="85" width="3.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="733.06" y="95.5" ></text>
</g>
<g >
<title>__alloc_skb (15,658,998 samples, 0.24%)</title><rect x="733.1" y="69" width="2.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="736.07" y="79.5" ></text>
</g>
<g >
<title>tcp_write_xmit (299,229,121 samples, 4.62%)</title><rect x="702.6" y="309" width="54.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="705.63" y="319.5" >tcp_w..</text>
</g>
<g >
<title>__dev_queue_xmit (29,382,521 samples, 0.45%)</title><rect x="748.4" y="133" width="5.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="751.38" y="143.5" ></text>
</g>
<g >
<title>pypy_g_BaseCpyTypedescr_allocate (20,541,952 samples, 0.32%)</title><rect x="1040.0" y="501" width="3.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1043.01" y="511.5" ></text>
</g>
<g >
<title>pypy_g_SnapshotIterator___init__ (19,030,891 samples, 0.29%)</title><rect x="862.3" y="485" width="3.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="865.26" y="495.5" ></text>
</g>
<g >
<title>[perf-84960.map] (1,824,578,956 samples, 28.20%)</title><rect x="36.5" y="501" width="332.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="39.49" y="511.5" >[perf-84960.map]</text>
</g>
<g >
<title>pypy_g_MIFrame_setup (12,460,054 samples, 0.19%)</title><rect x="839.1" y="485" width="2.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="842.08" y="495.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (19,525,154 samples, 0.30%)</title><rect x="427.3" y="277" width="3.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="430.32" y="287.5" ></text>
</g>
<g >
<title>aa_sk_perm (29,667,394 samples, 0.46%)</title><rect x="1011.4" y="373" width="5.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1014.39" y="383.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (63,896,356 samples, 0.99%)</title><rect x="685.7" y="341" width="11.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="688.67" y="351.5" ></text>
</g>
<g >
<title>ip_finish_output2 (129,863,330 samples, 2.01%)</title><rect x="730.1" y="181" width="23.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="733.06" y="191.5" >i..</text>
</g>
<g >
<title>ksize (38,592,240 samples, 0.60%)</title><rect x="690.3" y="309" width="7.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="693.28" y="319.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (100,480,809 samples, 1.55%)</title><rect x="730.1" y="117" width="18.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="733.06" y="127.5" ></text>
</g>
<g >
<title>pypy_g_LLBuffer_get_raw_address (18,634,988 samples, 0.29%)</title><rect x="1054.7" y="501" width="3.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1057.69" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ll_grow_and_append__stringbuilderPtr_rpy_stringP (15,251,808 samples, 0.24%)</title><rect x="359.7" y="485" width="2.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="362.67" y="495.5" ></text>
</g>
<g >
<title>tcp_push (311,310,465 samples, 4.81%)</title><rect x="700.4" y="341" width="56.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="703.42" y="351.5" >tcp_push</text>
</g>
<g >
<title>[libc-2.31.so] (57,764,403 samples, 0.89%)</title><rect x="371.6" y="485" width="10.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="374.57" y="495.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (10,771,839 samples, 0.17%)</title><rect x="1006.7" y="373" width="2.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1009.71" y="383.5" ></text>
</g>
<g >
<title>__libc_recv (136,711,712 samples, 2.11%)</title><rect x="994.4" y="501" width="24.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="997.36" y="511.5" >_..</text>
</g>
<g >
<title>__alloc_skb (63,896,356 samples, 0.99%)</title><rect x="685.7" y="325" width="11.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="688.67" y="335.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (100,480,809 samples, 1.55%)</title><rect x="730.1" y="149" width="18.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="733.06" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (12,191,513 samples, 0.19%)</title><rect x="688.1" y="309" width="2.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="691.06" y="319.5" ></text>
</g>
<g >
<title>__libc_send (571,645,387 samples, 8.83%)</title><rect x="667.3" y="485" width="104.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="670.27" y="495.5" >__libc_send</text>
</g>
<g >
<title>page_fault (10,463,246 samples, 0.16%)</title><rect x="25.8" y="485" width="1.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="28.78" y="495.5" ></text>
</g>
<g >
<title>pypy_g__siphash24_with_key___1 (9,221,134 samples, 0.14%)</title><rect x="893.9" y="485" width="1.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="896.88" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (17,707,242 samples, 0.27%)</title><rect x="283.8" y="325" width="3.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="286.84" y="335.5" ></text>
</g>
<g >
<title>pypy_g_PyFrame___init__ (14,571,250 samples, 0.23%)</title><rect x="841.3" y="485" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="844.35" y="495.5" ></text>
</g>
<g >
<title>ctx_sched_in (17,415,435 samples, 0.27%)</title><rect x="516.0" y="213" width="3.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="518.96" y="223.5" ></text>
</g>
<g >
<title>pypy_g_ll_extend_with_str_slice_startonly__listPtr_rpy_ (18,414,393 samples, 0.28%)</title><rect x="1173.1" y="501" width="3.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1176.10" y="511.5" ></text>
</g>
<g >
<title>pypy_g__match_keywords__v999___simple_call__function__ (17,546,101 samples, 0.27%)</title><rect x="1109.7" y="501" width="3.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1112.74" y="511.5" ></text>
</g>
<g >
<title>[unknown] (3,414,789,186 samples, 52.77%)</title><rect x="369.2" y="501" width="622.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="372.20" y="511.5" >[unknown]</text>
</g>
<g >
<title>dequeue_task_fair (66,538,306 samples, 1.03%)</title><rect x="433.5" y="229" width="12.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="436.54" y="239.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_inline_call_r_v (22,550,519 samples, 0.35%)</title><rect x="798.0" y="485" width="4.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="800.99" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (18,512,990 samples, 0.29%)</title><rect x="300.8" y="485" width="3.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="303.80" y="495.5" ></text>
</g>
<g >
<title>epoll_wait (396,749,948 samples, 6.13%)</title><rect x="403.4" y="405" width="72.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="406.41" y="415.5" >epoll_wait</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (63,272,063 samples, 0.98%)</title><rect x="1066.3" y="501" width="11.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1069.30" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1543___simple_call__fu (16,040,572 samples, 0.25%)</title><rect x="353.9" y="485" width="3.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="356.94" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1141___simple_call__function_ (16,643,142 samples, 0.26%)</title><rect x="1149.0" y="501" width="3.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1152.04" y="511.5" ></text>
</g>
<g >
<title>epoll_wait (235,319,064 samples, 3.64%)</title><rect x="478.5" y="421" width="42.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="481.52" y="431.5" >epol..</text>
</g>
<g >
<title>pypy_g_call_shortcut__star_0_1 (15,282,819 samples, 0.24%)</title><rect x="1120.2" y="501" width="2.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1123.25" y="511.5" ></text>
</g>
<g >
<title>[unknown] (647,214,387 samples, 10.00%)</title><rect x="403.4" y="453" width="118.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="406.41" y="463.5" >[unknown]</text>
</g>
<g >
<title>__x64_sys_recvfrom (123,664,209 samples, 1.91%)</title><rect x="996.7" y="453" width="22.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="999.74" y="463.5" >_..</text>
</g>
<g >
<title>ret_from_intr (15,938,386 samples, 0.25%)</title><rect x="424.4" y="245" width="2.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="427.41" y="255.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (51,376,680 samples, 0.79%)</title><rect x="962.0" y="485" width="9.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="964.98" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (235,319,064 samples, 3.64%)</title><rect x="478.5" y="389" width="42.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="481.52" y="399.5" >do_s..</text>
</g>
<g >
<title>pypy_g_fixedview__True (15,698,207 samples, 0.24%)</title><rect x="657.5" y="469" width="2.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="660.55" y="479.5" ></text>
</g>
<g >
<title>__tls_get_addr (15,149,884 samples, 0.23%)</title><rect x="1019.3" y="501" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1022.29" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (41,230,259 samples, 0.64%)</title><rect x="670.3" y="469" width="7.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="673.27" y="479.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (16,007,535 samples, 0.25%)</title><rect x="1077.8" y="501" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1080.84" y="511.5" ></text>
</g>
<g >
<title>pypy_g_handler_setfield_vable_i (12,206,791 samples, 0.19%)</title><rect x="959.8" y="485" width="2.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="962.76" y="495.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__R (15,922,940 samples, 0.25%)</title><rect x="1104.4" y="501" width="2.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1107.37" y="511.5" ></text>
</g>
<g >
<title>pypy_g_execute_token__star_2_2 (21,390,758 samples, 0.33%)</title><rect x="935.0" y="485" width="3.9" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="937.97" y="495.5" ></text>
</g>
<g >
<title>[unknown] (663,316,935 samples, 10.25%)</title><rect x="403.4" y="469" width="121.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="406.41" y="479.5" >[unknown]</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,454,310 samples, 0.02%)</title><rect x="430.6" y="245" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="433.61" y="255.5" ></text>
</g>
<g >
<title>pypy_g_Signature_find_w_argname (31,242,380 samples, 0.48%)</title><rect x="1090.1" y="501" width="5.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1093.14" y="511.5" ></text>
</g>
<g >
<title>pypy_g_Arguments__parse (10,151,179 samples, 0.16%)</title><rect x="788.4" y="485" width="1.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="791.38" y="495.5" ></text>
</g>
<g >
<title>inet_sendmsg (451,251,164 samples, 6.97%)</title><rect x="680.9" y="389" width="82.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="683.94" y="399.5" >inet_send..</text>
</g>
<g >
<title>mutex_lock (32,466,833 samples, 0.50%)</title><rect x="418.5" y="293" width="5.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="421.49" y="303.5" ></text>
</g>
<g >
<title>pypy_g_W_Weakref_compare (13,548,119 samples, 0.21%)</title><rect x="872.5" y="485" width="2.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="875.51" y="495.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (14,988,616 samples, 0.23%)</title><rect x="984.4" y="485" width="2.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="987.40" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_init (17,155,725 samples, 0.27%)</title><rect x="498.3" y="293" width="3.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="501.28" y="303.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (23,405,935 samples, 0.36%)</title><rect x="1168.8" y="501" width="4.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1171.83" y="511.5" ></text>
</g>
<g >
<title>pypy_g_allocate__rpython_jit_metainterp_resume_ResumeDa (13,686,519 samples, 0.21%)</title><rect x="1115.6" y="501" width="2.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1118.63" y="511.5" ></text>
</g>
<g >
<title>x86_pmu_enable (12,576,916 samples, 0.19%)</title><rect x="519.1" y="213" width="2.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="522.14" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (14,014,196 samples, 0.22%)</title><rect x="453.7" y="213" width="2.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="456.73" y="223.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (52,376,310 samples, 0.81%)</title><rect x="1127.4" y="501" width="9.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1130.41" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (20,580,556 samples, 0.32%)</title><rect x="1142.9" y="501" width="3.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1145.90" y="511.5" ></text>
</g>
<g >
<title>intel_pstate_update_util (18,635,096 samples, 0.29%)</title><rect x="442.3" y="181" width="3.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="445.27" y="191.5" ></text>
</g>
<g >
<title>memcg_kmem_put_cache (17,707,242 samples, 0.27%)</title><rect x="283.8" y="293" width="3.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="286.84" y="303.5" ></text>
</g>
<g >
<title>__tcp_select_window (18,806,613 samples, 0.29%)</title><rect x="1003.3" y="357" width="3.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1006.28" y="367.5" ></text>
</g>
<g >
<title>pypy_g_handler_getfield_gc_i_pure (19,907,281 samples, 0.31%)</title><rect x="1139.3" y="501" width="3.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1142.27" y="511.5" ></text>
</g>
<g >
<title>tcp_current_mss (21,021,297 samples, 0.32%)</title><rect x="759.4" y="325" width="3.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="762.39" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (31,831,309 samples, 0.49%)</title><rect x="1025.1" y="469" width="5.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1028.06" y="479.5" ></text>
</g>
<g >
<title>iptable_filter_hook (14,332,227 samples, 0.22%)</title><rect x="711.7" y="213" width="2.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="714.67" y="223.5" ></text>
</g>
<g >
<title>[unknown] (411,895,323 samples, 6.37%)</title><rect x="403.4" y="421" width="75.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="406.41" y="431.5" >[unknown]</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (136,711,712 samples, 2.11%)</title><rect x="994.4" y="485" width="24.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="997.36" y="495.5" >e..</text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (13,143,012 samples, 0.20%)</title><rect x="891.5" y="485" width="2.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="894.48" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_force_all_virtuals (39,171,736 samples, 0.61%)</title><rect x="1080.8" y="501" width="7.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1083.76" y="511.5" ></text>
</g>
<g >
<title>pypy_g__ll_dict_setitem_lookup_done__v1940___simple_cal (18,068,685 samples, 0.28%)</title><rect x="888.2" y="485" width="3.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="891.19" y="495.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (15,658,998 samples, 0.24%)</title><rect x="733.1" y="53" width="2.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="736.07" y="63.5" ></text>
</g>
<g >
<title>rpc_pipefs_notifier_list (18,340,410 samples, 0.28%)</title><rect x="739.8" y="101" width="3.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="742.79" y="111.5" ></text>
</g>
<g >
<title>pypy_g_scoped_alloc__array_False_1 (10,680,012 samples, 0.17%)</title><rect x="660.4" y="469" width="2.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="663.41" y="479.5" ></text>
</g>
<g >
<title>drm_mode_atomic_ioctl (15,045,833 samples, 0.23%)</title><rect x="720.0" y="181" width="2.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="723.03" y="191.5" ></text>
</g>
<g >
<title>pypy_g_trace__gc_callback__trace_drag_out (13,807,519 samples, 0.21%)</title><rect x="987.1" y="485" width="2.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="990.14" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (96,994,829 samples, 1.50%)</title><rect x="10.0" y="501" width="17.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>pypy_g_MetaInterp_generate_guard (18,702,450 samples, 0.29%)</title><rect x="1058.1" y="501" width="3.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1061.09" y="511.5" ></text>
</g>
<g >
<title>tcp_chrono_start (17,026,604 samples, 0.26%)</title><rect x="697.3" y="325" width="3.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="700.32" y="335.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__F (11,276,253 samples, 0.17%)</title><rect x="1102.3" y="501" width="2.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1105.31" y="511.5" ></text>
</g>
<g >
<title>tcp_sendmsg (439,119,230 samples, 6.79%)</title><rect x="683.2" y="373" width="80.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="686.15" y="383.5" >tcp_sendmsg</text>
</g>
<g >
<title>dev_hard_start_xmit (12,306,633 samples, 0.19%)</title><rect x="751.5" y="101" width="2.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="754.50" y="111.5" ></text>
</g>
<g >
<title>consume_skb (16,503,897 samples, 0.26%)</title><rect x="730.1" y="69" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="733.06" y="79.5" ></text>
</g>
<g >
<title>tcp_sendmsg (17,707,242 samples, 0.27%)</title><rect x="283.8" y="373" width="3.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="286.84" y="383.5" ></text>
</g>
<g >
<title>tcp_poll (15,812,562 samples, 0.24%)</title><rect x="495.4" y="261" width="2.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="498.40" y="271.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (17,707,242 samples, 0.27%)</title><rect x="283.8" y="309" width="3.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="286.84" y="319.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (9,399,451 samples, 0.15%)</title><rect x="850.4" y="485" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="853.43" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,707,242 samples, 0.27%)</title><rect x="283.8" y="469" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="286.84" y="479.5" ></text>
</g>
<g >
<title>__update_idle_core (20,603,613 samples, 0.32%)</title><rect x="466.1" y="213" width="3.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="469.15" y="223.5" ></text>
</g>
<g >
<title>__libc_calloc (13,184,581 samples, 0.20%)</title><rect x="664.9" y="485" width="2.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="667.87" y="495.5" ></text>
</g>
<g >
<title>__sys_sendto (503,060,131 samples, 7.77%)</title><rect x="677.8" y="421" width="91.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="680.79" y="431.5" >__sys_sendto</text>
</g>
<g >
<title>sem_wait@@GLIBC_2.2.5 (12,316,866 samples, 0.19%)</title><rect x="989.7" y="485" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="992.65" y="495.5" ></text>
</g>
<g >
<title>skb_copy (36,874,030 samples, 0.57%)</title><rect x="733.1" y="85" width="6.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="736.07" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (26,464,065 samples, 0.41%)</title><rect x="279.0" y="469" width="4.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="282.02" y="479.5" ></text>
</g>
<g >
<title>pypy_g_create_ref (10,634,973 samples, 0.16%)</title><rect x="914.8" y="485" width="2.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="917.82" y="495.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (15,529,954 samples, 0.24%)</title><rect x="981.6" y="485" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="984.57" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (10,463,246 samples, 0.16%)</title><rect x="25.8" y="453" width="1.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="28.78" y="463.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_malloc (18,411,453 samples, 0.28%)</title><rect x="785.0" y="485" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="788.02" y="495.5" ></text>
</g>
<g >
<title>pypy_g_STORE_ATTR__AccessDirect_None (10,471,635 samples, 0.16%)</title><rect x="860.4" y="485" width="1.9" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="863.36" y="495.5" ></text>
</g>
<g >
<title>nf_hook_slow (75,831,199 samples, 1.17%)</title><rect x="714.3" y="213" width="13.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="717.29" y="223.5" ></text>
</g>
<g >
<title>drm_connector_pick_cmdline_mode (12,205,204 samples, 0.19%)</title><rect x="725.9" y="181" width="2.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="728.89" y="191.5" ></text>
</g>
<g >
<title>__ip_finish_output (129,863,330 samples, 2.01%)</title><rect x="730.1" y="197" width="23.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="733.06" y="207.5" >_..</text>
</g>
<g >
<title>__ip_queue_xmit (267,931,464 samples, 4.14%)</title><rect x="704.9" y="261" width="48.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="707.88" y="271.5" >__ip..</text>
</g>
<g >
<title>release_sock (12,131,934 samples, 0.19%)</title><rect x="680.9" y="373" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="683.94" y="383.5" ></text>
</g>
<g >
<title>__ip_local_out (90,163,426 samples, 1.39%)</title><rect x="711.7" y="229" width="16.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="714.67" y="239.5" ></text>
</g>
<g >
<title>convertitem (19,288,232 samples, 0.30%)</title><rect x="1030.9" y="501" width="3.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1033.86" y="511.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (29,898,140 samples, 0.46%)</title><rect x="398.0" y="469" width="5.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="400.96" y="479.5" ></text>
</g>
<g >
<title>perf_event_sched_in (17,415,435 samples, 0.27%)</title><rect x="516.0" y="229" width="3.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="518.96" y="239.5" ></text>
</g>
<g >
<title>rb_erase (18,070,844 samples, 0.28%)</title><rect x="427.3" y="245" width="3.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="430.32" y="255.5" ></text>
</g>
<g >
<title>drm_connector_attach_content_protection_property (31,472,514 samples, 0.49%)</title><rect x="714.3" y="181" width="5.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="717.29" y="191.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1441___simple_call__function_ (10,850,756 samples, 0.17%)</title><rect x="971.4" y="485" width="1.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="974.35" y="495.5" ></text>
</g>
<g >
<title>__kfree_skb (16,407,968 samples, 0.25%)</title><rect x="996.7" y="373" width="3.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="999.74" y="383.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (32,088,208 samples, 0.50%)</title><rect x="469.9" y="389" width="5.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="472.91" y="399.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__cpyext_as_pyobj (12,849,553 samples, 0.20%)</title><rect x="867.3" y="485" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="870.33" y="495.5" ></text>
</g>
<g >
<title>lock_hrtimer_base (1,454,310 samples, 0.02%)</title><rect x="430.6" y="261" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="433.61" y="271.5" ></text>
</g>
<g >
<title>skb_copy_bits (12,306,633 samples, 0.19%)</title><rect x="751.5" y="69" width="2.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="754.50" y="79.5" ></text>
</g>
<g >
<title>__schedule (109,797,232 samples, 1.70%)</title><rect x="501.4" y="277" width="20.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="504.41" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (206,154,505 samples, 3.19%)</title><rect x="483.8" y="373" width="37.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="486.84" y="383.5" >__x..</text>
</g>
<g >
<title>sock_recvmsg (110,026,949 samples, 1.70%)</title><rect x="996.7" y="421" width="20.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="999.74" y="431.5" ></text>
</g>
<g >
<title>down_read_trylock (10,463,246 samples, 0.16%)</title><rect x="25.8" y="437" width="1.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="28.78" y="447.5" ></text>
</g>
<g >
<title>pypy_g__ll_dictnext_look_inside_iff__dictiterPtr_12 (19,052,062 samples, 0.29%)</title><rect x="306.1" y="485" width="3.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="309.11" y="495.5" ></text>
</g>
</g>
</svg>
