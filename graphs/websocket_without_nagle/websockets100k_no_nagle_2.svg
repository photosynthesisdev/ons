<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="614" onload="init(evt)" viewBox="0 0 1200 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="614.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="597" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="597" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (123,241,811 samples, 2.22%)</title><rect x="1022.9" y="501" width="26.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1025.91" y="511.5" >d..</text>
</g>
<g >
<title>[unknown] (18,762,870 samples, 0.34%)</title><rect x="460.1" y="453" width="4.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="463.11" y="463.5" ></text>
</g>
<g >
<title>[perf-84040.map] (1,148,998,016 samples, 20.74%)</title><rect x="80.9" y="517" width="244.8" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="83.94" y="527.5" >[perf-84040.map]</text>
</g>
<g >
<title>pypy_g_dispatch_loop (53,359,814 samples, 0.96%)</title><rect x="957.1" y="517" width="11.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="960.12" y="527.5" ></text>
</g>
<g >
<title>nf_hook_slow (116,828,736 samples, 2.11%)</title><rect x="743.4" y="245" width="24.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="746.44" y="255.5" >n..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (12,165,022 samples, 0.22%)</title><rect x="597.4" y="421" width="2.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="600.39" y="431.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (10,882,026 samples, 0.20%)</title><rect x="1046.8" y="453" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1049.84" y="463.5" ></text>
</g>
<g >
<title>pypy_g__siphash24_with_key___1 (37,516,088 samples, 0.68%)</title><rect x="929.3" y="517" width="7.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="932.25" y="527.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (30,805,123 samples, 0.56%)</title><rect x="548.9" y="229" width="6.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="551.90" y="239.5" ></text>
</g>
<g >
<title>tcp_send_mss (19,224,501 samples, 0.35%)</title><rect x="818.4" y="373" width="4.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="821.40" y="383.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__recursively_bump_finaliza (22,401,287 samples, 0.40%)</title><rect x="1067.3" y="533" width="4.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1070.26" y="543.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (32,990,747 samples, 0.60%)</title><rect x="1132.1" y="533" width="7.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1135.09" y="543.5" ></text>
</g>
<g >
<title>perf_swevent_add (20,270,811 samples, 0.37%)</title><rect x="579.5" y="165" width="4.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="582.50" y="175.5" ></text>
</g>
<g >
<title>event_rpc_call_status (18,189,665 samples, 0.33%)</title><rect x="776.9" y="133" width="3.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="779.92" y="143.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (21,548,097 samples, 0.39%)</title><rect x="408.3" y="517" width="4.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="411.31" y="527.5" ></text>
</g>
<g >
<title>ipt_do_table (11,830,784 samples, 0.21%)</title><rect x="765.8" y="213" width="2.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="768.80" y="223.5" ></text>
</g>
<g >
<title>inet_sendmsg (605,475,590 samples, 10.93%)</title><rect x="696.5" y="421" width="129.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="699.52" y="431.5" >inet_sendmsg</text>
</g>
<g >
<title>epoll_wait (12,165,022 samples, 0.22%)</title><rect x="597.4" y="469" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="600.39" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (14,698,564 samples, 0.27%)</title><rect x="583.8" y="261" width="3.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="586.82" y="271.5" ></text>
</g>
<g >
<title>pypy_g__operate (24,065,341 samples, 0.43%)</title><rect x="655.4" y="501" width="5.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="658.44" y="511.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (39,747,512 samples, 0.72%)</title><rect x="937.2" y="517" width="8.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="940.24" y="527.5" ></text>
</g>
<g >
<title>skb_release_data (18,344,450 samples, 0.33%)</title><rect x="1039.2" y="373" width="3.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1042.15" y="383.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (21,041,702 samples, 0.38%)</title><rect x="339.1" y="517" width="4.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="342.13" y="527.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (454,285,626 samples, 8.20%)</title><rect x="721.6" y="357" width="96.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="724.65" y="367.5" >__tcp_push_..</text>
</g>
<g >
<title>pypy_g_trace__gc_callback__collect_ref_rec (41,081,523 samples, 0.74%)</title><rect x="1177.8" y="533" width="8.8" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1180.83" y="543.5" ></text>
</g>
<g >
<title>dequeue_task_fair (129,351,841 samples, 2.33%)</title><rect x="532.4" y="277" width="27.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="535.42" y="287.5" >d..</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__trace_drag_out1 (23,354,580 samples, 0.42%)</title><rect x="631.5" y="501" width="5.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="634.53" y="511.5" ></text>
</g>
<g >
<title>__getpid (15,702,765 samples, 0.28%)</title><rect x="325.7" y="517" width="3.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="328.65" y="527.5" ></text>
</g>
<g >
<title>do_brk_flags (18,133,817 samples, 0.33%)</title><rect x="825.5" y="453" width="3.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="828.47" y="463.5" ></text>
</g>
<g >
<title>pypy_g_execute_assembler__star_2_2 (13,171,458 samples, 0.24%)</title><rect x="968.5" y="517" width="2.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="971.49" y="527.5" ></text>
</g>
<g >
<title>deflate (34,730,250 samples, 0.63%)</title><rect x="617.0" y="501" width="7.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="620.02" y="511.5" ></text>
</g>
<g >
<title>drm_client_pick_crtcs (17,454,532 samples, 0.32%)</title><rect x="803.9" y="229" width="3.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="806.87" y="239.5" ></text>
</g>
<g >
<title>__alloc_skb (31,551,445 samples, 0.57%)</title><rect x="714.9" y="357" width="6.7" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="717.93" y="367.5" ></text>
</g>
<g >
<title>drm_mode_atomic_ioctl (34,854,258 samples, 0.63%)</title><rect x="756.0" y="213" width="7.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="759.05" y="223.5" ></text>
</g>
<g >
<title>dequeue_entity (92,522,460 samples, 1.67%)</title><rect x="535.8" y="261" width="19.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="538.76" y="271.5" ></text>
</g>
<g >
<title>malloc (36,494,020 samples, 0.66%)</title><rect x="1055.3" y="533" width="7.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1058.27" y="543.5" ></text>
</g>
<g >
<title>[[vdso]] (16,709,381 samples, 0.30%)</title><rect x="1051.7" y="501" width="3.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1054.71" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeGuardForcedDescr_handle_async_forcing (27,115,754 samples, 0.49%)</title><rect x="333.4" y="517" width="5.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="336.35" y="527.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (574,886,847 samples, 10.38%)</title><rect x="700.1" y="389" width="122.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="703.06" y="399.5" >tcp_sendmsg_loc..</text>
</g>
<g >
<title>nlm_traverse_locks (15,648,601 samples, 0.28%)</title><rect x="800.5" y="197" width="3.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="803.54" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (597,190,783 samples, 10.78%)</title><rect x="470.2" y="421" width="127.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="473.20" y="431.5" >do_syscall_64</text>
</g>
<g >
<title>pypy_g__ll_alloc_and_set_nojit__GcStruct_listLlT_Signed (16,251,468 samples, 0.29%)</title><rect x="1112.6" y="533" width="3.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1115.55" y="543.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_mass_free_in_pages (13,123,815 samples, 0.24%)</title><rect x="624.4" y="501" width="2.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="627.42" y="511.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_deal_with_objects_with_fin (21,174,855 samples, 0.38%)</title><rect x="636.5" y="501" width="4.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="639.50" y="511.5" ></text>
</g>
<g >
<title>__ksize (17,383,104 samples, 0.31%)</title><rect x="717.9" y="325" width="3.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="720.95" y="335.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (14,479,948 samples, 0.26%)</title><rect x="815.3" y="325" width="3.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="818.32" y="335.5" ></text>
</g>
<g >
<title>pick_next_task_idle (30,866,090 samples, 0.56%)</title><rect x="590.8" y="293" width="6.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="593.82" y="303.5" ></text>
</g>
<g >
<title>all (5,540,429,692 samples, 100%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (638,992,112 samples, 11.53%)</title><rect x="689.4" y="501" width="136.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="692.38" y="511.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>__dev_kfree_skb_any (13,859,500 samples, 0.25%)</title><rect x="791.5" y="101" width="3.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="794.50" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (624,092,391 samples, 11.26%)</title><rect x="692.6" y="485" width="132.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="695.55" y="495.5" >do_syscall_64</text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si_15 (29,973,435 samples, 0.54%)</title><rect x="395.6" y="517" width="6.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="398.60" y="527.5" ></text>
</g>
<g >
<title>tcp_tx_timestamp (13,968,702 samples, 0.25%)</title><rect x="822.5" y="389" width="3.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="825.50" y="399.5" ></text>
</g>
<g >
<title>pick_next_task_fair (18,181,892 samples, 0.33%)</title><rect x="586.9" y="293" width="3.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="589.95" y="303.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (424,416,147 samples, 7.66%)</title><rect x="507.0" y="357" width="90.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="510.00" y="367.5" >schedule_h..</text>
</g>
<g >
<title>perf_event_sched_in (36,826,818 samples, 0.66%)</title><rect x="576.0" y="261" width="7.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="578.97" y="271.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (18,363,921 samples, 0.33%)</title><rect x="1128.2" y="533" width="3.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1131.18" y="543.5" ></text>
</g>
<g >
<title>event_sched_in.isra.0 (20,270,811 samples, 0.37%)</title><rect x="579.5" y="181" width="4.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="582.50" y="191.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (65,797,741 samples, 1.19%)</title><rect x="572.9" y="277" width="14.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="575.93" y="287.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_register_finalizer (32,403,447 samples, 0.58%)</title><rect x="645.4" y="501" width="6.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="648.39" y="511.5" ></text>
</g>
<g >
<title>tcp_recvmsg (83,629,950 samples, 1.51%)</title><rect x="1029.0" y="421" width="17.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1032.03" y="431.5" ></text>
</g>
<g >
<title>__libc_send (669,047,851 samples, 12.08%)</title><rect x="683.0" y="517" width="142.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="685.98" y="527.5" >__libc_send</text>
</g>
<g >
<title>[libz.so.1.2.11] (176,797,276 samples, 3.19%)</title><rect x="35.8" y="533" width="37.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="38.78" y="543.5" >[li..</text>
</g>
<g >
<title>hrtimer_interrupt (16,164,588 samples, 0.29%)</title><rect x="402.0" y="469" width="3.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="404.98" y="479.5" ></text>
</g>
<g >
<title>psi_task_change (60,865,663 samples, 1.10%)</title><rect x="560.0" y="277" width="12.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="562.97" y="287.5" ></text>
</g>
<g >
<title>pypy_g_POP_JUMP_IF_FALSE__AccessDirect_None (18,414,382 samples, 0.33%)</title><rect x="876.1" y="517" width="4.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="879.13" y="527.5" ></text>
</g>
<g >
<title>update_load_avg (30,805,123 samples, 0.56%)</title><rect x="548.9" y="245" width="6.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="551.90" y="255.5" ></text>
</g>
<g >
<title>auth_max_cred_cachesize (16,211,625 samples, 0.29%)</title><rect x="788.0" y="117" width="3.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="791.05" y="127.5" ></text>
</g>
<g >
<title>deactivate_task (207,605,078 samples, 3.75%)</title><rect x="528.7" y="293" width="44.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="531.72" y="303.5" >deac..</text>
</g>
<g >
<title>__ip_finish_output (117,387,298 samples, 2.12%)</title><rect x="772.3" y="229" width="25.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="775.29" y="239.5" >_..</text>
</g>
<g >
<title>tick_sched_handle (16,164,588 samples, 0.29%)</title><rect x="402.0" y="421" width="3.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="404.98" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,245,218 samples, 0.28%)</title><rect x="686.1" y="501" width="3.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="689.13" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (424,416,147 samples, 7.66%)</title><rect x="507.0" y="341" width="90.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="510.00" y="351.5" >schedule_h..</text>
</g>
<g >
<title>pypy_g_ll_build_look_inside_iff__stringbuilderPtr (14,905,936 samples, 0.27%)</title><rect x="671.4" y="501" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="674.45" y="511.5" ></text>
</g>
<g >
<title>pypy_g_read_int_at_mem___ptr (30,078,575 samples, 0.54%)</title><rect x="998.8" y="517" width="6.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1001.76" y="527.5" ></text>
</g>
<g >
<title>perf_event_mmap (18,133,817 samples, 0.33%)</title><rect x="825.5" y="437" width="3.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="828.47" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,133,817 samples, 0.33%)</title><rect x="825.5" y="501" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="828.47" y="511.5" ></text>
</g>
<g >
<title>pypy_g_get_strategy_from_list_object (14,835,473 samples, 0.27%)</title><rect x="971.3" y="517" width="3.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="974.29" y="527.5" ></text>
</g>
<g >
<title>skb_release_all (13,859,500 samples, 0.25%)</title><rect x="791.5" y="69" width="3.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="794.50" y="79.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (35,242,256 samples, 0.64%)</title><rect x="73.4" y="517" width="7.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="76.43" y="527.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (407,862,856 samples, 7.36%)</title><rect x="724.6" y="325" width="86.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="727.58" y="335.5" >__tcp_tran..</text>
</g>
<g >
<title>pypy_g_ExecutionContext_leave (13,123,585 samples, 0.24%)</title><rect x="866.0" y="517" width="2.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="868.98" y="527.5" ></text>
</g>
<g >
<title>lockd_up (13,475,512 samples, 0.24%)</title><rect x="753.2" y="181" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="756.18" y="191.5" ></text>
</g>
<g >
<title>[unknown] (656,747,565 samples, 11.85%)</title><rect x="460.1" y="485" width="139.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="463.11" y="495.5" >[unknown]</text>
</g>
<g >
<title>iptable_filter_hook (11,830,784 samples, 0.21%)</title><rect x="765.8" y="229" width="2.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="768.80" y="239.5" ></text>
</g>
<g >
<title>put_prev_task_fair (14,568,273 samples, 0.26%)</title><rect x="594.3" y="277" width="3.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="597.29" y="287.5" ></text>
</g>
<g >
<title>pypy_g_trace__gc_callback__trace_drag_out (18,960,698 samples, 0.34%)</title><rect x="1008.6" y="517" width="4.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1011.62" y="527.5" ></text>
</g>
<g >
<title>skb_release_all (33,471,085 samples, 0.60%)</title><rect x="1035.9" y="389" width="7.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1038.93" y="399.5" ></text>
</g>
<g >
<title>ep_poll (545,980,167 samples, 9.85%)</title><rect x="481.1" y="373" width="116.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="484.11" y="383.5" >ep_poll</text>
</g>
<g >
<title>pypy_g_endswith__str_str (23,125,652 samples, 0.42%)</title><rect x="366.6" y="517" width="5.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="369.64" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,702,765 samples, 0.28%)</title><rect x="325.7" y="501" width="3.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="328.65" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output (117,387,298 samples, 2.12%)</title><rect x="772.3" y="245" width="25.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="775.29" y="255.5" >i..</text>
</g>
<g >
<title>sk_stream_alloc_skb (75,121,099 samples, 1.36%)</title><rect x="705.6" y="373" width="16.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="708.65" y="383.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (17,439,217 samples, 0.31%)</title><rect x="987.0" y="517" width="3.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="990.01" y="527.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (13,321,445 samples, 0.24%)</title><rect x="794.5" y="117" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="797.45" y="127.5" ></text>
</g>
<g >
<title>pypy_g__ll_alloc_and_set_nojit__GcStruct_listLlT_Signed (16,155,959 samples, 0.29%)</title><rect x="922.7" y="517" width="3.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="925.65" y="527.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (17,172,262 samples, 0.31%)</title><rect x="600.0" y="485" width="3.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="602.98" y="495.5" ></text>
</g>
<g >
<title>page_frag_free (18,344,450 samples, 0.33%)</title><rect x="1039.2" y="357" width="3.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1042.15" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,133,817 samples, 0.33%)</title><rect x="825.5" y="485" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="828.47" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (121,043,367 samples, 2.18%)</title><rect x="10.0" y="533" width="25.8" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >[..</text>
</g>
<g >
<title>__usecs_to_jiffies (14,479,948 samples, 0.26%)</title><rect x="815.3" y="309" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="818.32" y="319.5" ></text>
</g>
<g >
<title>pypy_g_eq_w (16,273,758 samples, 0.29%)</title><rect x="1139.1" y="533" width="3.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1142.12" y="543.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (13,753,455 samples, 0.25%)</title><rect x="896.3" y="517" width="2.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="899.31" y="527.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (22,151,638 samples, 0.40%)</title><rect x="31.1" y="501" width="4.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="34.06" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (562,597,778 samples, 10.15%)</title><rect x="477.6" y="405" width="119.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="480.57" y="415.5" >__x64_sys_epol..</text>
</g>
<g >
<title>do_syscall_64 (12,165,022 samples, 0.22%)</title><rect x="597.4" y="437" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="600.39" y="447.5" ></text>
</g>
<g >
<title>__sys_recvfrom (107,866,578 samples, 1.95%)</title><rect x="1026.2" y="469" width="23.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1029.19" y="479.5" >_..</text>
</g>
<g >
<title>drm_connector_attach_content_protection_property (59,184,593 samples, 1.07%)</title><rect x="743.4" y="213" width="12.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="746.44" y="223.5" ></text>
</g>
<g >
<title>clock_gettime (20,438,562 samples, 0.37%)</title><rect x="329.0" y="517" width="4.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.00" y="527.5" ></text>
</g>
<g >
<title>crtc_crc_read (15,648,601 samples, 0.28%)</title><rect x="800.5" y="229" width="3.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="803.54" y="239.5" ></text>
</g>
<g >
<title>pypy_g__ll_dict_del__v1702___simple_call__function_ (32,122,183 samples, 0.58%)</title><rect x="347.5" y="517" width="6.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="350.49" y="527.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__collect_ref_rec (20,266,999 samples, 0.37%)</title><rect x="627.2" y="501" width="4.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="630.21" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (16,164,588 samples, 0.29%)</title><rect x="402.0" y="437" width="3.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="404.98" y="447.5" ></text>
</g>
<g >
<title>pypy_g_LLBuffer_get_raw_address (15,086,306 samples, 0.27%)</title><rect x="1072.0" y="533" width="3.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1075.03" y="543.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,164,588 samples, 0.29%)</title><rect x="402.0" y="453" width="3.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="404.98" y="463.5" ></text>
</g>
<g >
<title>neigh_resolve_output (77,444,978 samples, 1.40%)</title><rect x="780.8" y="197" width="16.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="783.80" y="207.5" ></text>
</g>
<g >
<title>cpuacct_charge (13,227,900 samples, 0.24%)</title><rect x="546.1" y="229" width="2.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="549.09" y="239.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2 (17,133,442 samples, 0.31%)</title><rect x="990.7" y="517" width="3.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="993.73" y="527.5" ></text>
</g>
<g >
<title>__fget_light (10,882,026 samples, 0.20%)</title><rect x="1046.8" y="437" width="2.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1049.84" y="447.5" ></text>
</g>
<g >
<title>tcp_push (454,285,626 samples, 8.20%)</title><rect x="721.6" y="373" width="96.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="724.65" y="383.5" >tcp_push</text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (18,762,870 samples, 0.34%)</title><rect x="460.1" y="341" width="4.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="463.11" y="351.5" ></text>
</g>
<g >
<title>update_curr (21,157,415 samples, 0.38%)</title><rect x="555.5" y="261" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="558.46" y="271.5" ></text>
</g>
<g >
<title>inflate (33,216,384 samples, 0.60%)</title><rect x="832.8" y="517" width="7.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="835.77" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (624,092,391 samples, 11.26%)</title><rect x="692.6" y="469" width="132.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="695.55" y="479.5" >__x64_sys_sendto</text>
</g>
<g >
<title>sock_poll (26,744,602 samples, 0.48%)</title><rect x="497.0" y="309" width="5.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="500.03" y="319.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1441___simple_call__function_ (35,745,656 samples, 0.65%)</title><rect x="1146.9" y="533" width="7.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1149.87" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (16,164,588 samples, 0.29%)</title><rect x="402.0" y="485" width="3.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="404.98" y="495.5" ></text>
</g>
<g >
<title>bictcp_cwnd_event (16,218,579 samples, 0.29%)</title><rect x="740.0" y="309" width="3.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="742.99" y="319.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (43,392,570 samples, 0.78%)</title><rect x="788.0" y="133" width="9.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="791.05" y="143.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (77,444,978 samples, 1.40%)</title><rect x="780.8" y="165" width="16.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="783.80" y="175.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (104,997,952 samples, 1.90%)</title><rect x="743.4" y="229" width="22.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="746.44" y="239.5" >d..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (55,854,377 samples, 1.01%)</title><rect x="854.1" y="517" width="11.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="857.09" y="527.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (20,565,133 samples, 0.37%)</title><rect x="641.0" y="501" width="4.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="644.01" y="511.5" ></text>
</g>
<g >
<title>ep_poll (12,165,022 samples, 0.22%)</title><rect x="597.4" y="389" width="2.6" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="600.39" y="399.5" ></text>
</g>
<g >
<title>pypy_g_execute_token__star_2_2 (21,407,316 samples, 0.39%)</title><rect x="371.6" y="517" width="4.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="374.57" y="527.5" ></text>
</g>
<g >
<title>group_sched_in (20,270,811 samples, 0.37%)</title><rect x="579.5" y="197" width="4.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="582.50" y="207.5" ></text>
</g>
<g >
<title>ep_poll (18,762,870 samples, 0.34%)</title><rect x="460.1" y="357" width="4.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="463.11" y="367.5" ></text>
</g>
<g >
<title>tcp_sendmsg (605,475,590 samples, 10.93%)</title><rect x="696.5" y="405" width="129.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="699.52" y="415.5" >tcp_sendmsg</text>
</g>
<g >
<title>pypy_g__after_thread_switch (16,954,458 samples, 0.31%)</title><rect x="1108.9" y="533" width="3.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1111.94" y="543.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1,319,591 samples, 0.02%)</title><rect x="524.9" y="325" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="527.87" y="335.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (12,165,022 samples, 0.22%)</title><rect x="597.4" y="341" width="2.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="600.39" y="351.5" ></text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1652___simple_call__fu (13,520,107 samples, 0.24%)</title><rect x="405.4" y="517" width="2.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="408.43" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (107,866,578 samples, 1.95%)</title><rect x="1026.2" y="485" width="23.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1029.19" y="495.5" >_..</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1637___simple_call__function_ (18,106,816 samples, 0.33%)</title><rect x="1154.5" y="533" width="3.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1157.48" y="543.5" ></text>
</g>
<g >
<title>pypy_g__getitem_correct_indirection__v940___simple_call (18,226,333 samples, 0.33%)</title><rect x="343.6" y="517" width="3.9" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="346.61" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (18,762,870 samples, 0.34%)</title><rect x="460.1" y="389" width="4.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="463.11" y="399.5" ></text>
</g>
<g >
<title>skb_release_head_state (13,859,500 samples, 0.25%)</title><rect x="791.5" y="53" width="3.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="794.50" y="63.5" ></text>
</g>
<g >
<title>pypy_g_pypy_epoll_wait__Signed_arrayPtr_arrayPtr_Signed (19,779,173 samples, 0.36%)</title><rect x="1161.6" y="533" width="4.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1164.56" y="543.5" ></text>
</g>
<g >
<title>sock_recvmsg (96,984,552 samples, 1.75%)</title><rect x="1026.2" y="453" width="20.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1029.19" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (16,164,588 samples, 0.29%)</title><rect x="402.0" y="501" width="3.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="404.98" y="511.5" ></text>
</g>
<g >
<title>crtc_crc_read (15,648,601 samples, 0.28%)</title><rect x="800.5" y="213" width="3.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="803.54" y="223.5" ></text>
</g>
<g >
<title>pypy_g__ll_dict_setitem_lookup_done__v1669___simple_cal (37,440,918 samples, 0.68%)</title><rect x="354.3" y="517" width="8.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="357.33" y="527.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (12,165,022 samples, 0.22%)</title><rect x="597.4" y="373" width="2.6" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="600.39" y="383.5" ></text>
</g>
<g >
<title>debug_table (13,859,500 samples, 0.25%)</title><rect x="791.5" y="117" width="3.0" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="794.50" y="127.5" ></text>
</g>
<g >
<title>sch_direct_xmit (39,942,320 samples, 0.72%)</title><rect x="772.3" y="165" width="8.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="775.29" y="175.5" ></text>
</g>
<g >
<title>__wake_up (18,762,870 samples, 0.34%)</title><rect x="460.1" y="325" width="4.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="463.11" y="335.5" ></text>
</g>
<g >
<title>finish_task_switch (65,797,741 samples, 1.19%)</title><rect x="572.9" y="293" width="14.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="575.93" y="303.5" ></text>
</g>
<g >
<title>release_sock (17,770,789 samples, 0.32%)</title><rect x="1043.1" y="405" width="3.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1046.06" y="415.5" ></text>
</g>
<g >
<title>drm_mode_list_lessees_ioctl (17,454,532 samples, 0.32%)</title><rect x="803.9" y="197" width="3.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="806.87" y="207.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (16,709,381 samples, 0.30%)</title><rect x="1051.7" y="517" width="3.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1054.71" y="527.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (18,189,665 samples, 0.33%)</title><rect x="776.9" y="149" width="3.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="779.92" y="159.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (13,354,602 samples, 0.24%)</title><rect x="1026.2" y="437" width="2.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1029.19" y="447.5" ></text>
</g>
<g >
<title>visit_groups_merge (36,826,818 samples, 0.66%)</title><rect x="576.0" y="229" width="7.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="578.97" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (625,819,673 samples, 11.30%)</title><rect x="464.1" y="437" width="133.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="467.11" y="447.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (123,241,811 samples, 2.22%)</title><rect x="1022.9" y="517" width="26.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1025.91" y="527.5" >e..</text>
</g>
<g >
<title>pypy_g_ll_call_lookup_function__v1543___simple_call__fu (16,164,588 samples, 0.29%)</title><rect x="402.0" y="517" width="3.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="404.98" y="527.5" ></text>
</g>
<g >
<title>pypy_g_force_now_1 (73,603,034 samples, 1.33%)</title><rect x="376.1" y="517" width="15.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="379.13" y="527.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (26,255,621 samples, 0.47%)</title><rect x="700.1" y="373" width="5.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="703.06" y="383.5" ></text>
</g>
<g >
<title>newidle_balance (18,181,892 samples, 0.33%)</title><rect x="586.9" y="277" width="3.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="589.95" y="287.5" ></text>
</g>
<g >
<title>sk_free (13,859,500 samples, 0.25%)</title><rect x="791.5" y="37" width="3.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="794.50" y="47.5" ></text>
</g>
<g >
<title>tcp_rbtree_insert (18,194,960 samples, 0.33%)</title><rect x="811.4" y="325" width="3.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="814.44" y="335.5" ></text>
</g>
<g >
<title>update_curr (48,470,124 samples, 0.87%)</title><rect x="538.6" y="245" width="10.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="541.58" y="255.5" ></text>
</g>
<g >
<title>pypy_g_create_ref (30,709,131 samples, 0.55%)</title><rect x="950.6" y="517" width="6.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="953.58" y="527.5" ></text>
</g>
<g >
<title>pypy_g_jit_rvmprof_code (27,244,173 samples, 0.49%)</title><rect x="978.4" y="517" width="5.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="981.38" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr (11,965,128 samples, 0.22%)</title><rect x="1049.2" y="533" width="2.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1052.16" y="543.5" ></text>
</g>
<g >
<title>skb_push (18,088,362 samples, 0.33%)</title><rect x="807.6" y="309" width="3.8" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="810.59" y="319.5" ></text>
</g>
<g >
<title>pypy_g_UserDelAction__call_finalizer (19,497,375 samples, 0.35%)</title><rect x="905.7" y="517" width="4.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="908.67" y="527.5" ></text>
</g>
<g >
<title>ep_send_events_proc (75,917,670 samples, 1.37%)</title><rect x="490.8" y="341" width="16.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="493.83" y="351.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (92,335,097 samples, 1.67%)</title><rect x="416.3" y="517" width="19.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="419.31" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,762,870 samples, 0.34%)</title><rect x="460.1" y="405" width="4.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="463.11" y="415.5" ></text>
</g>
<g >
<title>ctx_sched_in (36,826,818 samples, 0.66%)</title><rect x="576.0" y="245" width="7.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="578.97" y="255.5" ></text>
</g>
<g >
<title>consume_skb (13,859,500 samples, 0.25%)</title><rect x="791.5" y="85" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="794.50" y="95.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader___init__ (16,770,515 samples, 0.30%)</title><rect x="880.1" y="517" width="3.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="883.05" y="527.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_recvinto (16,519,440 samples, 0.30%)</title><rect x="1075.2" y="533" width="3.6" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1078.24" y="543.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (39,942,320 samples, 0.72%)</title><rect x="772.3" y="181" width="8.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="775.29" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2,831,890,807 samples, 51.11%)</title><rect x="416.3" y="533" width="603.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="419.31" y="543.5" >[unknown]</text>
</g>
<g >
<title>sock_sendmsg (605,475,590 samples, 10.93%)</title><rect x="696.5" y="437" width="129.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="699.52" y="447.5" >sock_sendmsg</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__prepare_virtuals.part.0 (12,826,181 samples, 0.23%)</title><rect x="893.6" y="517" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="896.58" y="527.5" ></text>
</g>
<g >
<title>hash_conntrack_raw (14,022,364 samples, 0.25%)</title><rect x="760.5" y="197" width="3.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="763.48" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (14,639,984 samples, 0.26%)</title><rect x="487.7" y="341" width="3.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="490.71" y="351.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (26,255,621 samples, 0.47%)</title><rect x="700.1" y="357" width="5.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="703.06" y="367.5" ></text>
</g>
<g >
<title>clock_gettime (16,709,381 samples, 0.30%)</title><rect x="1051.7" y="533" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1054.71" y="543.5" ></text>
</g>
<g >
<title>get_l4proto (20,831,894 samples, 0.38%)</title><rect x="756.0" y="197" width="4.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="759.05" y="207.5" ></text>
</g>
<g >
<title>pypy_g_Reader_next_item (19,901,073 samples, 0.36%)</title><rect x="1083.8" y="533" width="4.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1086.84" y="543.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v3654___simple_call__function_ (20,019,316 samples, 0.36%)</title><rect x="674.6" y="501" width="4.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="677.62" y="511.5" ></text>
</g>
<g >
<title>pypy_g_from_ref (20,124,687 samples, 0.36%)</title><rect x="1142.6" y="533" width="4.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1145.58" y="543.5" ></text>
</g>
<g >
<title>__schedule (339,174,607 samples, 6.12%)</title><rect x="525.2" y="309" width="72.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="528.15" y="319.5" >__schedule</text>
</g>
<g >
<title>_raw_spin_lock (16,164,588 samples, 0.29%)</title><rect x="402.0" y="389" width="3.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="404.98" y="399.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_malloc (19,785,243 samples, 0.36%)</title><rect x="1063.0" y="533" width="4.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1066.04" y="543.5" ></text>
</g>
<g >
<title>ip_finish_output2 (117,387,298 samples, 2.12%)</title><rect x="772.3" y="213" width="25.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="775.29" y="223.5" >i..</text>
</g>
<g >
<title>__calc_delta (13,247,213 samples, 0.24%)</title><rect x="535.8" y="245" width="2.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="538.76" y="255.5" ></text>
</g>
<g >
<title>pypy_g_W_Root_is_w (12,644,788 samples, 0.23%)</title><rect x="1106.2" y="533" width="2.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1109.25" y="543.5" ></text>
</g>
<g >
<title>__tcp_select_window (21,148,469 samples, 0.38%)</title><rect x="735.5" y="309" width="4.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="738.48" y="319.5" ></text>
</g>
<g >
<title>update_process_times (16,164,588 samples, 0.29%)</title><rect x="402.0" y="405" width="3.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="404.98" y="415.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (17,965,978 samples, 0.32%)</title><rect x="518.1" y="309" width="3.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="521.09" y="319.5" ></text>
</g>
<g >
<title>pypy_g_W_Epoll_descr_poll (19,963,883 samples, 0.36%)</title><rect x="1102.0" y="533" width="4.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1105.00" y="543.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (29,249,247 samples, 0.53%)</title><rect x="660.6" y="501" width="6.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="663.57" y="511.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (33,543,505 samples, 0.61%)</title><rect x="839.8" y="517" width="7.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="842.84" y="527.5" ></text>
</g>
<g >
<title>__fget_light (16,617,611 samples, 0.30%)</title><rect x="477.6" y="373" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="480.57" y="383.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_shrink_array (34,518,194 samples, 0.62%)</title><rect x="868.8" y="517" width="7.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="871.78" y="527.5" ></text>
</g>
<g >
<title>pypy_g_ccall_clock_gettime (20,369,520 samples, 0.37%)</title><rect x="362.3" y="517" width="4.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="365.30" y="527.5" ></text>
</g>
<g >
<title>[unknown] (644,582,543 samples, 11.63%)</title><rect x="460.1" y="469" width="137.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="463.11" y="479.5" >[unknown]</text>
</g>
<g >
<title>__wake_up_common_lock (18,762,870 samples, 0.34%)</title><rect x="460.1" y="309" width="4.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="463.11" y="319.5" ></text>
</g>
<g >
<title>nf_conntrack_tcp_packet (59,184,593 samples, 1.07%)</title><rect x="743.4" y="197" width="12.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="746.44" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,762,870 samples, 0.34%)</title><rect x="460.1" y="421" width="4.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="463.11" y="431.5" ></text>
</g>
<g >
<title>__libc_calloc (19,204,426 samples, 0.35%)</title><rect x="678.9" y="517" width="4.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="681.89" y="527.5" ></text>
</g>
<g >
<title>brk (18,133,817 samples, 0.33%)</title><rect x="825.5" y="517" width="3.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="828.47" y="527.5" ></text>
</g>
<g >
<title>pypy_g__shrink_after_delete_from_start (14,825,993 samples, 0.27%)</title><rect x="926.1" y="517" width="3.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="929.09" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,165,022 samples, 0.22%)</title><rect x="597.4" y="453" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="600.39" y="463.5" ></text>
</g>
<g >
<title>pypy_g__handle_jitexception (10,818,878 samples, 0.20%)</title><rect x="920.3" y="517" width="2.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="923.35" y="527.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader__init (46,726,653 samples, 0.84%)</title><rect x="883.6" y="517" width="10.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="886.62" y="527.5" ></text>
</g>
<g >
<title>put_prev_entity (14,568,273 samples, 0.26%)</title><rect x="594.3" y="261" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="597.29" y="271.5" ></text>
</g>
<g >
<title>ip_output (184,366,040 samples, 3.33%)</title><rect x="768.3" y="261" width="39.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="771.32" y="271.5" >ip_..</text>
</g>
<g >
<title>__libc_recv (139,539,628 samples, 2.52%)</title><rect x="1019.4" y="533" width="29.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1022.44" y="543.5" >__..</text>
</g>
<g >
<title>dev_queue_xmit (77,444,978 samples, 1.40%)</title><rect x="780.8" y="181" width="16.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="783.80" y="191.5" ></text>
</g>
<g >
<title>timerqueue_add (17,965,978 samples, 0.32%)</title><rect x="518.1" y="293" width="3.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="521.09" y="303.5" ></text>
</g>
<g >
<title>ip_local_out (301,194,776 samples, 5.44%)</title><rect x="743.4" y="277" width="64.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="746.44" y="287.5" >ip_loca..</text>
</g>
<g >
<title>schedule (339,174,607 samples, 6.12%)</title><rect x="525.2" y="325" width="72.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="528.15" y="335.5" >schedule</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (22,151,638 samples, 0.40%)</title><rect x="31.1" y="517" width="4.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="34.06" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (14,168,341 samples, 0.26%)</title><rect x="714.9" y="341" width="3.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="717.93" y="351.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (30,207,224 samples, 0.55%)</title><rect x="899.2" y="517" width="6.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="902.24" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (16,620,041 samples, 0.30%)</title><rect x="696.5" y="389" width="3.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="699.52" y="399.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (67,212,568 samples, 1.21%)</title><rect x="510.6" y="325" width="14.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="513.56" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (14,899,721 samples, 0.27%)</title><rect x="689.4" y="485" width="3.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="692.38" y="495.5" ></text>
</g>
<g >
<title>[unknown] (736,740,032 samples, 13.30%)</title><rect x="460.1" y="501" width="156.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="463.11" y="511.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_handler_inline_call_r_v (18,425,254 samples, 0.33%)</title><rect x="974.5" y="517" width="3.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="977.45" y="527.5" ></text>
</g>
<g >
<title>pypy_g_RSocket_send (23,853,552 samples, 0.43%)</title><rect x="1078.8" y="533" width="5.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1081.76" y="543.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__pure_lookup_where_with_method_cach (49,420,840 samples, 0.89%)</title><rect x="909.8" y="517" width="10.5" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="912.82" y="527.5" ></text>
</g>
<g >
<title>__ip_local_out (116,828,736 samples, 2.11%)</title><rect x="743.4" y="261" width="24.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="746.44" y="271.5" >_..</text>
</g>
<g >
<title>[unknown] (1,027,222,917 samples, 18.54%)</title><rect x="460.1" y="517" width="218.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="463.11" y="527.5" >[unknown]</text>
</g>
<g >
<title>cfree (16,136,184 samples, 0.29%)</title><rect x="829.3" y="517" width="3.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="832.33" y="527.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (301,194,776 samples, 5.44%)</title><rect x="743.4" y="293" width="64.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="746.44" y="303.5" >__ip_qu..</text>
</g>
<g >
<title>do_epoll_wait (12,165,022 samples, 0.22%)</title><rect x="597.4" y="405" width="2.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="600.39" y="415.5" ></text>
</g>
<g >
<title>sock_poll (12,165,022 samples, 0.22%)</title><rect x="597.4" y="325" width="2.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="600.39" y="335.5" ></text>
</g>
<g >
<title>pypy3.10 (5,540,429,692 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >pypy3.10</text>
</g>
<g >
<title>epoll_wait (625,819,673 samples, 11.30%)</title><rect x="464.1" y="453" width="133.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="467.11" y="463.5" >epoll_wait</text>
</g>
<g >
<title>__sys_sendto (624,092,391 samples, 11.26%)</title><rect x="692.6" y="453" width="132.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="695.55" y="463.5" >__sys_sendto</text>
</g>
<g >
<title>pypy_g_wrapper_second_level__star_1_13 (16,683,234 samples, 0.30%)</title><rect x="1012.7" y="517" width="3.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1015.66" y="527.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (20,586,903 samples, 0.37%)</title><rect x="994.4" y="517" width="4.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="997.38" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (301,194,776 samples, 5.44%)</title><rect x="743.4" y="309" width="64.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="746.44" y="319.5" >ip_queu..</text>
</g>
<g >
<title>pypy_g_ll_dict_setitem__DICTPtr_Address_Address (15,137,384 samples, 0.27%)</title><rect x="1158.3" y="533" width="3.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1161.34" y="543.5" ></text>
</g>
<g >
<title>ep_send_events_proc (12,165,022 samples, 0.22%)</title><rect x="597.4" y="357" width="2.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="600.39" y="367.5" ></text>
</g>
<g >
<title>pypy_g_raw_malloc_memory_pressure_varsize (14,126,809 samples, 0.25%)</title><rect x="1165.8" y="533" width="3.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1168.78" y="543.5" ></text>
</g>
<g >
<title>pypy_g_allocate__rpython_jit_metainterp_resume_ResumeDa (37,870,776 samples, 0.68%)</title><rect x="1116.0" y="533" width="8.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1119.01" y="543.5" ></text>
</g>
<g >
<title>do_epoll_wait (562,597,778 samples, 10.15%)</title><rect x="477.6" y="389" width="119.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="480.57" y="399.5" >do_epoll_wait</text>
</g>
<g >
<title>pypy_g_PyFrame___init__ (14,794,126 samples, 0.27%)</title><rect x="652.3" y="501" width="3.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="655.29" y="511.5" ></text>
</g>
<g >
<title>do_epoll_wait (18,762,870 samples, 0.34%)</title><rect x="460.1" y="373" width="4.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="463.11" y="383.5" ></text>
</g>
<g >
<title>__x64_sys_brk (18,133,817 samples, 0.33%)</title><rect x="825.5" y="469" width="3.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="828.47" y="479.5" ></text>
</g>
<g >
<title>hrtimer_active (1,319,591 samples, 0.02%)</title><rect x="524.9" y="309" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="527.87" y="319.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (20,270,811 samples, 0.37%)</title><rect x="579.5" y="149" width="4.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="582.50" y="159.5" ></text>
</g>
<g >
<title>pypy_g_register_finalizer___pypy_interpreter_executionc (16,017,057 samples, 0.29%)</title><rect x="412.9" y="517" width="3.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="415.90" y="527.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (13,873,091 samples, 0.25%)</title><rect x="521.9" y="309" width="3.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="524.92" y="319.5" ></text>
</g>
<g >
<title>flexible_sched_in (20,270,811 samples, 0.37%)</title><rect x="579.5" y="213" width="4.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="582.50" y="223.5" ></text>
</g>
<g >
<title>inet_recvmsg (83,629,950 samples, 1.51%)</title><rect x="1029.0" y="437" width="17.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1032.03" y="447.5" ></text>
</g>
<g >
<title>pypy_g_foreach___reset_flag_old_objects_pointing_to_pin (21,829,840 samples, 0.39%)</title><rect x="666.8" y="501" width="4.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="669.80" y="511.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_inline_call_r_v (33,332,309 samples, 0.60%)</title><rect x="847.0" y="517" width="7.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="849.99" y="527.5" ></text>
</g>
<g >
<title>pypy_g__run_forever (62,820,205 samples, 1.13%)</title><rect x="603.6" y="485" width="13.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="606.64" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_grow__v1666___simple_call__function_ (13,295,603 samples, 0.24%)</title><rect x="984.2" y="517" width="2.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="987.18" y="527.5" ></text>
</g>
<g >
<title>pypy_g_stack_check (16,233,482 samples, 0.29%)</title><rect x="1005.2" y="517" width="3.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1008.17" y="527.5" ></text>
</g>
<g >
<title>[perf-84040.map] (1,609,883,639 samples, 29.06%)</title><rect x="73.4" y="533" width="342.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="76.43" y="543.5" >[perf-84040.map]</text>
</g>
<g >
<title>sch_direct_xmit (43,392,570 samples, 0.78%)</title><rect x="788.0" y="149" width="9.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="791.05" y="159.5" ></text>
</g>
<g >
<title>sock_poll (20,054,596 samples, 0.36%)</title><rect x="502.7" y="325" width="4.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="505.73" y="335.5" ></text>
</g>
<g >
<title>crtc_crc_read (18,619,544 samples, 0.34%)</title><rect x="768.3" y="245" width="4.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="771.32" y="255.5" ></text>
</g>
<g >
<title>dev_queue_xmit (39,942,320 samples, 0.72%)</title><rect x="772.3" y="197" width="8.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="775.29" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (28,628,890 samples, 0.52%)</title><rect x="464.1" y="421" width="6.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="467.11" y="431.5" ></text>
</g>
<g >
<title>ksize (17,383,104 samples, 0.31%)</title><rect x="717.9" y="341" width="3.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="720.95" y="351.5" ></text>
</g>
<g >
<title>account_entity_dequeue (15,671,966 samples, 0.28%)</title><rect x="532.4" y="261" width="3.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="535.42" y="271.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (113,329,319 samples, 2.05%)</title><rect x="436.0" y="517" width="24.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="438.97" y="527.5" >[..</text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (16,993,480 samples, 0.31%)</title><rect x="1098.4" y="533" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1101.38" y="543.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (48,364,019 samples, 0.87%)</title><rect x="1088.1" y="533" width="10.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1091.08" y="543.5" ></text>
</g>
<g >
<title>drm_connector_pick_cmdline_mode (17,454,532 samples, 0.32%)</title><rect x="803.9" y="213" width="3.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="806.87" y="223.5" ></text>
</g>
<g >
<title>tcp_write_xmit (454,285,626 samples, 8.20%)</title><rect x="721.6" y="341" width="96.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="724.65" y="351.5" >tcp_write_x..</text>
</g>
<g >
<title>skb_free_head (15,126,635 samples, 0.27%)</title><rect x="1035.9" y="373" width="3.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1038.93" y="383.5" ></text>
</g>
<g >
<title>__kfree_skb (33,471,085 samples, 0.60%)</title><rect x="1035.9" y="405" width="7.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1038.93" y="415.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (42,474,797 samples, 0.77%)</title><rect x="1168.8" y="533" width="9.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1171.79" y="543.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (26,744,602 samples, 0.48%)</title><rect x="497.0" y="325" width="5.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="500.03" y="335.5" ></text>
</g>
<g >
<title>pypy_g_cpy_call_external__funcPtr_arrayPtr (22,903,249 samples, 0.41%)</title><rect x="945.7" y="517" width="4.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="948.71" y="527.5" ></text>
</g>
<g >
<title>sem_post@@GLIBC_2.2.5 (15,152,081 samples, 0.27%)</title><rect x="1016.2" y="517" width="3.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1019.22" y="527.5" ></text>
</g>
<g >
<title>nf_nat_locks (10,959,101 samples, 0.20%)</title><rect x="763.5" y="213" width="2.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="766.47" y="223.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (104,940,390 samples, 1.89%)</title><rect x="484.7" y="357" width="22.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="487.65" y="367.5" >e..</text>
</g>
<g >
<title>nf_hook_slow (48,359,198 samples, 0.87%)</title><rect x="797.3" y="245" width="10.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="800.29" y="255.5" ></text>
</g>
<g >
<title>pypy_g_write_from_resume_data_partial (16,051,675 samples, 0.29%)</title><rect x="1186.6" y="533" width="3.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1189.58" y="543.5" ></text>
</g>
<g >
<title>tcp_current_mss (19,224,501 samples, 0.35%)</title><rect x="818.4" y="357" width="4.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="821.40" y="367.5" ></text>
</g>
<g >
<title>epoll_wait (18,762,870 samples, 0.34%)</title><rect x="460.1" y="437" width="4.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="463.11" y="447.5" ></text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (17,826,344 samples, 0.32%)</title><rect x="391.8" y="517" width="3.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="394.80" y="527.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (19,259,727 samples, 0.35%)</title><rect x="1124.1" y="533" width="4.1" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1127.08" y="543.5" ></text>
</g>
</g>
</svg>
