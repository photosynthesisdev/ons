<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>tcp_mtu_probe (16,208,423 samples, 0.25%)</title><rect x="497.2" y="309" width="2.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="500.16" y="319.5" ></text>
</g>
<g >
<title>pypy_g__ll_1_weakref_create__pypy_interpreter_generator (17,698,340 samples, 0.27%)</title><rect x="260.2" y="485" width="3.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="263.18" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handler_goto_if_not_1 (20,090,373 samples, 0.30%)</title><rect x="1167.6" y="501" width="3.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1170.56" y="511.5" ></text>
</g>
<g >
<title>[[vdso]] (38,987,400 samples, 0.59%)</title><rect x="1028.7" y="469" width="7.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1031.73" y="479.5" ></text>
</g>
<g >
<title>pypy_g_execute_and_record_varargs___216 (17,028,975 samples, 0.26%)</title><rect x="908.1" y="485" width="3.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="911.08" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_brk (14,205,337 samples, 0.21%)</title><rect x="565.2" y="437" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="568.23" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (33,676,192 samples, 0.51%)</title><rect x="991.4" y="485" width="6.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="994.44" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (249,421,643 samples, 3.77%)</title><rect x="1072.5" y="501" width="44.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1075.51" y="511.5" >pypy..</text>
</g>
<g >
<title>tick_sched_handle (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="405" width="3.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1128.75" y="415.5" ></text>
</g>
<g >
<title>cfree (14,096,392 samples, 0.21%)</title><rect x="567.8" y="485" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="570.76" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (69,344,597 samples, 1.05%)</title><rect x="386.3" y="309" width="12.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="389.31" y="319.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (69,344,597 samples, 1.05%)</title><rect x="386.3" y="325" width="12.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="389.31" y="335.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (15,103,579 samples, 0.23%)</title><rect x="408.8" y="453" width="2.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="411.80" y="463.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (18,527,235 samples, 0.28%)</title><rect x="513.3" y="197" width="3.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="516.29" y="207.5" ></text>
</g>
<g >
<title>epoll_wait (15,916,836 samples, 0.24%)</title><rect x="1035.7" y="501" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1038.69" y="511.5" ></text>
</g>
<g >
<title>skb_release_all (20,942,097 samples, 0.32%)</title><rect x="1002.7" y="357" width="3.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1005.67" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,298,832 samples, 0.23%)</title><rect x="316.1" y="213" width="2.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="319.10" y="223.5" ></text>
</g>
<g >
<title>pypy_g_create_ref (18,235,520 samples, 0.28%)</title><rect x="884.2" y="485" width="3.3" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="887.25" y="495.5" ></text>
</g>
<g >
<title>pypy_g_index (15,533,548 samples, 0.24%)</title><rect x="947.2" y="485" width="2.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="950.21" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (18,003,010 samples, 0.27%)</title><rect x="1006.4" y="373" width="3.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1009.41" y="383.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (88,324,299 samples, 1.34%)</title><rect x="318.8" y="309" width="15.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="321.84" y="319.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__pure_lookup_where_with_method_cach (19,310,178 samples, 0.29%)</title><rect x="841.5" y="485" width="3.5" height="15.0" fill="rgb(230,117,27)" rx="2" ry="2" />
<text  x="844.50" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output (114,293,461 samples, 1.73%)</title><rect x="521.2" y="213" width="20.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="524.18" y="223.5" ></text>
</g>
<g >
<title>pypy_g_BuiltinCode2_fastcall_2.part.0 (15,589,442 samples, 0.24%)</title><rect x="1055.2" y="501" width="2.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1058.24" y="511.5" ></text>
</g>
<g >
<title>pypy_g_RegAlloc_locs_for_fail (20,361,273 samples, 0.31%)</title><rect x="804.7" y="485" width="3.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="807.69" y="495.5" ></text>
</g>
<g >
<title>pypy_g_RPyRaiseException (15,094,586 samples, 0.23%)</title><rect x="1058.0" y="501" width="2.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1061.02" y="511.5" ></text>
</g>
<g >
<title>psi_task_change (27,594,916 samples, 0.42%)</title><rect x="393.8" y="245" width="4.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="396.76" y="255.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_getitem__dicttablePtr_objectPtr (20,642,217 samples, 0.31%)</title><rect x="1173.6" y="501" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1176.56" y="511.5" ></text>
</g>
<g >
<title>pypy_g_PyFrame_initialize_as_generator (20,482,334 samples, 0.31%)</title><rect x="738.4" y="485" width="3.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="741.44" y="495.5" ></text>
</g>
<g >
<title>pypy_g_bytes_realize (17,289,040 samples, 0.26%)</title><rect x="881.2" y="485" width="3.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="884.16" y="495.5" ></text>
</g>
<g >
<title>drm_connector_attach_content_protection_property (18,527,235 samples, 0.28%)</title><rect x="513.3" y="181" width="3.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="516.29" y="191.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader___init__ (20,917,394 samples, 0.32%)</title><rect x="811.2" y="485" width="3.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="814.22" y="495.5" ></text>
</g>
<g >
<title>iptable_filter_hook (9,358,116 samples, 0.14%)</title><rect x="516.6" y="197" width="1.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="519.59" y="207.5" ></text>
</g>
<g >
<title>tcp_current_mss (12,723,025 samples, 0.19%)</title><rect x="555.3" y="325" width="2.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="558.33" y="335.5" ></text>
</g>
<g >
<title>_raw_write_lock_irq (13,934,596 samples, 0.21%)</title><rect x="326.1" y="293" width="2.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="329.09" y="303.5" ></text>
</g>
<g >
<title>pypy_g__ll_dictnext_look_inside_iff__dictiterPtr_12 (21,619,270 samples, 0.33%)</title><rect x="263.3" y="485" width="3.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="266.34" y="495.5" ></text>
</g>
<g >
<title>pypy_epoll_wait (14,149,391 samples, 0.21%)</title><rect x="1042.1" y="501" width="2.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1045.14" y="511.5" ></text>
</g>
<g >
<title>ipv4_dst_check (38,122,668 samples, 0.58%)</title><rect x="504.0" y="229" width="6.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="507.03" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (17,062,451 samples, 0.26%)</title><rect x="367.7" y="405" width="3.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="370.73" y="415.5" ></text>
</g>
<g >
<title>page_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="469" width="4.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="608.60" y="479.5" ></text>
</g>
<g >
<title>sock_sendmsg (628,618,601 samples, 9.51%)</title><rect x="449.2" y="405" width="112.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="452.24" y="415.5" >sock_sendmsg</text>
</g>
<g >
<title>kmem_cache_alloc_node (176,279,924 samples, 2.67%)</title><rect x="463.0" y="309" width="31.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="466.01" y="319.5" >km..</text>
</g>
<g >
<title>pypy_g_W_IntObject_is_w (25,748,208 samples, 0.39%)</title><rect x="420.6" y="469" width="4.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="423.58" y="479.5" ></text>
</g>
<g >
<title>all (6,608,813,561 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>pypy_g__ll_list_resize_hint_really_look_inside_iff__lis_2 (17,946,503 samples, 0.27%)</title><rect x="267.2" y="485" width="3.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="270.20" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ExecutionContext_return_trace (16,555,101 samples, 0.25%)</title><rect x="595.2" y="485" width="2.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="598.18" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@plt (22,533,834 samples, 0.34%)</title><rect x="248.0" y="485" width="4.0" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="250.97" y="495.5" ></text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2.part.0 (15,780,251 samples, 0.24%)</title><rect x="977.4" y="485" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="980.43" y="495.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (20,008,408 samples, 0.30%)</title><rect x="904.5" y="485" width="3.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="907.50" y="495.5" ></text>
</g>
<g >
<title>__schedule (105,197,027 samples, 1.59%)</title><rect x="342.5" y="261" width="18.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="345.53" y="271.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel (1,507,014 samples, 0.02%)</title><rect x="386.3" y="293" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="389.31" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,079,597 samples, 0.20%)</title><rect x="252.0" y="469" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="255.00" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="373" width="3.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1128.75" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="421" width="3.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1128.75" y="431.5" ></text>
</g>
<g >
<title>pypy_g_jump_absolute__AccessDirect_None (41,121,446 samples, 0.62%)</title><rect x="956.7" y="485" width="7.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="959.73" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1441___simple_call__function_ (15,744,252 samples, 0.24%)</title><rect x="292.2" y="485" width="2.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="295.24" y="495.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__I (41,091,271 samples, 0.62%)</title><rect x="1144.7" y="501" width="7.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1147.72" y="511.5" ></text>
</g>
<g >
<title>__wake_up (10,568,429 samples, 0.16%)</title><rect x="321.0" y="293" width="1.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="324.00" y="303.5" ></text>
</g>
<g >
<title>pypy_g_handler_jit_merge_point (13,495,878 samples, 0.20%)</title><rect x="1171.1" y="501" width="2.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1174.15" y="511.5" ></text>
</g>
<g >
<title>mutex_lock (14,718,606 samples, 0.22%)</title><rect x="332.0" y="293" width="2.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="334.98" y="303.5" ></text>
</g>
<g >
<title>deactivate_task (44,918,413 samples, 0.68%)</title><rect x="390.7" y="261" width="8.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="393.67" y="271.5" ></text>
</g>
<g >
<title>rpc_pipe_fs_type (38,131,429 samples, 0.58%)</title><rect x="525.7" y="101" width="6.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="528.74" y="111.5" ></text>
</g>
<g >
<title>pypy_g_EmptySetStrategy_clear (15,733,384 samples, 0.24%)</title><rect x="592.4" y="485" width="2.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="595.37" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (23,530,031 samples, 0.36%)</title><rect x="605.6" y="373" width="4.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="608.60" y="383.5" ></text>
</g>
<g >
<title>ip_output (139,159,717 samples, 2.11%)</title><rect x="521.2" y="229" width="24.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="524.18" y="239.5" >i..</text>
</g>
<g >
<title>[libz.so.1.2.11] (104,048,387 samples, 1.57%)</title><rect x="22.5" y="501" width="18.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="25.49" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (237,905,686 samples, 3.60%)</title><rect x="318.8" y="373" width="42.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="321.84" y="383.5" >do_..</text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (26,249,674 samples, 0.40%)</title><rect x="295.0" y="485" width="4.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="298.05" y="495.5" ></text>
</g>
<g >
<title>schedule (67,837,583 samples, 1.03%)</title><rect x="386.6" y="293" width="12.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="389.58" y="303.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="373" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="383.5" ></text>
</g>
<g >
<title>sock_poll (23,839,323 samples, 0.36%)</title><rect x="382.1" y="293" width="4.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="385.05" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="405" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="608.60" y="415.5" ></text>
</g>
<g >
<title>__fget_light (35,044,458 samples, 0.53%)</title><rect x="1021.2" y="405" width="6.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1024.18" y="415.5" ></text>
</g>
<g >
<title>drm_connector_pick_cmdline_mode (13,732,716 samples, 0.21%)</title><rect x="510.8" y="213" width="2.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="513.83" y="223.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC__allocate_shadow (46,223,005 samples, 0.70%)</title><rect x="601.6" y="485" width="8.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="604.55" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_identityhash (13,870,634 samples, 0.21%)</title><rect x="254.3" y="485" width="2.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="257.33" y="495.5" ></text>
</g>
<g >
<title>deactivate_task (36,905,115 samples, 0.56%)</title><rect x="351.9" y="245" width="6.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="354.87" y="255.5" ></text>
</g>
<g >
<title>_PyPyArg_ParseTupleAndKeywords_SizeT (37,474,464 samples, 0.57%)</title><rect x="232.7" y="485" width="6.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="235.70" y="495.5" ></text>
</g>
<g >
<title>pypy_g_Trace_append (18,353,947 samples, 0.28%)</title><rect x="1141.4" y="501" width="3.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1144.44" y="511.5" ></text>
</g>
<g >
<title>pypy_g_RPyRaiseException (350,571,891 samples, 5.30%)</title><rect x="742.1" y="485" width="62.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="745.10" y="495.5" >pypy_g..</text>
</g>
<g >
<title>psi_task_change (21,083,147 samples, 0.32%)</title><rect x="354.7" y="229" width="3.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="357.70" y="239.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="309" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="319.5" ></text>
</g>
<g >
<title>__sk_dst_check (38,122,668 samples, 0.58%)</title><rect x="504.0" y="245" width="6.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="507.03" y="255.5" ></text>
</g>
<g >
<title>validate_xmit_skb_list (13,575,481 samples, 0.21%)</title><rect x="539.2" y="117" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="542.16" y="127.5" ></text>
</g>
<g >
<title>hrtimer_init_sleeper (27,388,504 samples, 0.41%)</title><rect x="337.6" y="277" width="4.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="340.64" y="287.5" ></text>
</g>
<g >
<title>pypy_g_descr__eq__ (14,714,071 samples, 0.22%)</title><rect x="887.5" y="485" width="2.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="890.50" y="495.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="357" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="367.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.constprop.0 (23,839,323 samples, 0.36%)</title><rect x="382.1" y="325" width="4.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="385.05" y="335.5" ></text>
</g>
<g >
<title>nf_hook_slow (24,866,256 samples, 0.38%)</title><rect x="541.6" y="213" width="4.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="544.58" y="223.5" ></text>
</g>
<g >
<title>dev_queue_xmit (114,293,461 samples, 1.73%)</title><rect x="521.2" y="165" width="20.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="524.18" y="175.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (606,892,833 samples, 9.18%)</title><rect x="449.2" y="357" width="108.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="452.24" y="367.5" >tcp_sendmsg_l..</text>
</g>
<g >
<title>skb_copy (38,131,429 samples, 0.58%)</title><rect x="525.7" y="85" width="6.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="528.74" y="95.5" ></text>
</g>
<g >
<title>get_errno (25,823,308 samples, 0.39%)</title><rect x="570.3" y="485" width="4.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="573.28" y="495.5" ></text>
</g>
<g >
<title>pypy_g__setitem_correct_indirection__v942___simple_call (36,266,768 samples, 0.55%)</title><rect x="868.4" y="485" width="6.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="871.42" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_setfield (43,305,855 samples, 0.66%)</title><rect x="824.5" y="485" width="7.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="827.47" y="495.5" ></text>
</g>
<g >
<title>schedule (105,197,027 samples, 1.59%)</title><rect x="342.5" y="277" width="18.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="345.53" y="287.5" ></text>
</g>
<g >
<title>pypy_g_enumerate_vars__unique_id (16,866,658 samples, 0.26%)</title><rect x="1159.8" y="501" width="3.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1162.79" y="511.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_optimize___star_0_4 (14,025,109 samples, 0.21%)</title><rect x="902.0" y="485" width="2.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="905.00" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter__resume_mainloop (35,638,262 samples, 0.54%)</title><rect x="402.4" y="453" width="6.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="405.44" y="463.5" ></text>
</g>
<g >
<title>find_vma (14,205,337 samples, 0.21%)</title><rect x="565.2" y="421" width="2.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="568.23" y="431.5" ></text>
</g>
<g >
<title>[unknown] (289,119,784 samples, 4.37%)</title><rect x="316.1" y="421" width="51.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="431.5" >[unkn..</text>
</g>
<g >
<title>pypy_g_ll_arraycopy__arrayPtr_arrayPtr_Signed_Signed_Si (37,944,600 samples, 0.57%)</title><rect x="285.5" y="485" width="6.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="288.46" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (649,592,709 samples, 9.83%)</title><rect x="449.2" y="453" width="116.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="452.24" y="463.5" >do_syscall_64</text>
</g>
<g >
<title>pypy_g_W_IntObjectUserDictWeakrefable__get_mapdict_map (21,219,953 samples, 0.32%)</title><rect x="832.2" y="485" width="3.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="835.20" y="495.5" ></text>
</g>
<g >
<title>__sys_sendto (628,618,601 samples, 9.51%)</title><rect x="449.2" y="421" width="112.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="452.24" y="431.5" >__sys_sendto</text>
</g>
<g >
<title>[unknown] (745,668,609 samples, 11.28%)</title><rect x="316.1" y="485" width="133.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="495.5" >[unknown]</text>
</g>
<g >
<title>nf_hook_slow (44,191,303 samples, 0.67%)</title><rect x="513.3" y="213" width="7.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="516.29" y="223.5" ></text>
</g>
<g >
<title>__fget_light (25,196,765 samples, 0.38%)</title><rect x="377.3" y="341" width="4.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="380.28" y="351.5" ></text>
</g>
<g >
<title>sem_wait@@GLIBC_2.2.5 (21,332,399 samples, 0.32%)</title><rect x="987.6" y="485" width="3.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="990.63" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_force_all_virtuals (35,077,153 samples, 0.53%)</title><rect x="1117.0" y="501" width="6.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1120.04" y="511.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (17,641,623 samples, 0.27%)</title><rect x="1011.7" y="341" width="3.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1014.70" y="351.5" ></text>
</g>
<g >
<title>inet_sendmsg (606,892,833 samples, 9.18%)</title><rect x="449.2" y="389" width="108.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="452.24" y="399.5" >inet_sendmsg</text>
</g>
<g >
<title>schedule_hrtimeout_range (149,581,387 samples, 2.26%)</title><rect x="334.6" y="309" width="26.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="337.61" y="319.5" >s..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (16,273,405 samples, 0.25%)</title><rect x="239.4" y="453" width="2.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="242.39" y="463.5" ></text>
</g>
<g >
<title>[unknown] (560,353,129 samples, 8.48%)</title><rect x="316.1" y="469" width="100.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="479.5" >[unknown]</text>
</g>
<g >
<title>syscall_return_via_sysret (14,887,779 samples, 0.23%)</title><rect x="242.3" y="469" width="2.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="245.29" y="479.5" ></text>
</g>
<g >
<title>sock_recvmsg (115,814,766 samples, 1.75%)</title><rect x="1000.5" y="421" width="20.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1003.50" y="431.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (16,588,977 samples, 0.25%)</title><rect x="1014.9" y="373" width="2.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1017.85" y="383.5" ></text>
</g>
<g >
<title>mod_timer (16,646,126 samples, 0.25%)</title><rect x="552.4" y="245" width="2.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="555.36" y="255.5" ></text>
</g>
<g >
<title>tcp_push (325,810,749 samples, 4.93%)</title><rect x="497.2" y="341" width="58.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="500.16" y="351.5" >tcp_push</text>
</g>
<g >
<title>pypy_g_RegisterManager__check_invariants (16,193,913 samples, 0.25%)</title><rect x="808.3" y="485" width="2.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="811.33" y="495.5" ></text>
</g>
<g >
<title>ep_poll (94,747,162 samples, 1.43%)</title><rect x="381.8" y="341" width="16.9" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="384.77" y="351.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (12,369,135 samples, 0.19%)</title><rect x="815.0" y="485" width="2.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="817.95" y="495.5" ></text>
</g>
<g >
<title>pypy_g__run_forever (26,094,603 samples, 0.39%)</title><rect x="411.5" y="453" width="4.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="414.50" y="463.5" ></text>
</g>
<g >
<title>pypy_g_bh_setfield_gc_i___ptr (23,915,436 samples, 0.36%)</title><rect x="1152.1" y="501" width="4.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1155.05" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="357" width="3.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1128.75" y="367.5" ></text>
</g>
<g >
<title>pypy_g_shortcut_comparison (19,176,315 samples, 0.29%)</title><rect x="984.2" y="485" width="3.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="987.21" y="495.5" ></text>
</g>
<g >
<title>inet_recvmsg (115,814,766 samples, 1.75%)</title><rect x="1000.5" y="405" width="20.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1003.50" y="415.5" ></text>
</g>
<g >
<title>nf_hook_slow (14,261,800 samples, 0.22%)</title><rect x="549.8" y="229" width="2.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="552.81" y="239.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (14,333,991 samples, 0.22%)</title><rect x="525.7" y="53" width="2.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="528.74" y="63.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_shrink_array (21,991,358 samples, 0.33%)</title><rect x="612.6" y="485" width="3.9" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="615.60" y="495.5" ></text>
</g>
<g >
<title>ep_poll (237,905,686 samples, 3.60%)</title><rect x="318.8" y="325" width="42.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="321.84" y="335.5" >ep_..</text>
</g>
<g >
<title>tcp_sendmsg (606,892,833 samples, 9.18%)</title><rect x="449.2" y="373" width="108.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="452.24" y="383.5" >tcp_sendmsg</text>
</g>
<g >
<title>smp_apic_timer_interrupt (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="469" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1128.75" y="479.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (270,691,260 samples, 4.10%)</title><rect x="504.0" y="261" width="48.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="507.03" y="271.5" >__ip..</text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_bhimpl_getfield_vable_r (17,804,662 samples, 0.27%)</title><rect x="1052.1" y="501" width="3.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1055.06" y="511.5" ></text>
</g>
<g >
<title>pypy_g_W_TypeObject__cpyext_as_pyobj (14,441,069 samples, 0.22%)</title><rect x="838.9" y="485" width="2.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="841.92" y="495.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (69,967,041 samples, 1.06%)</title><rect x="10.0" y="501" width="12.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>ip_local_out (232,568,592 samples, 3.52%)</title><rect x="510.8" y="245" width="41.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="513.83" y="255.5" >ip_..</text>
</g>
<g >
<title>pypy_g_dispatch_loop (66,473,834 samples, 1.01%)</title><rect x="890.1" y="485" width="11.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="893.13" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,273,405 samples, 0.25%)</title><rect x="239.4" y="469" width="2.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="242.39" y="479.5" ></text>
</g>
<g >
<title>pypy_g_funccall__star_2 (40,956,889 samples, 0.62%)</title><rect x="919.8" y="485" width="7.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="922.75" y="495.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (35,044,458 samples, 0.53%)</title><rect x="1021.2" y="421" width="6.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1024.18" y="431.5" ></text>
</g>
<g >
<title>pypy_g_Reader_next_item (26,434,356 samples, 0.40%)</title><rect x="1060.7" y="501" width="4.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1063.72" y="511.5" ></text>
</g>
<g >
<title>[perf-84040.map] (1,462,718,012 samples, 22.13%)</title><rect x="41.1" y="501" width="261.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="44.07" y="511.5" >[perf-84040.map]</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_malloc_fixedsize (12,710,205 samples, 0.19%)</title><rect x="416.2" y="469" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="419.16" y="479.5" ></text>
</g>
<g >
<title>sock_rfree (20,942,097 samples, 0.32%)</title><rect x="1002.7" y="341" width="3.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1005.67" y="351.5" ></text>
</g>
<g >
<title>__ip_local_out (57,924,019 samples, 0.88%)</title><rect x="510.8" y="229" width="10.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="513.83" y="239.5" ></text>
</g>
<g >
<title>__sys_recvfrom (150,859,224 samples, 2.28%)</title><rect x="1000.5" y="437" width="26.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1003.50" y="447.5" >_..</text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_register_finalizer (18,907,176 samples, 0.29%)</title><rect x="256.8" y="485" width="3.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="259.81" y="495.5" ></text>
</g>
<g >
<title>__check_object_size (17,641,623 samples, 0.27%)</title><rect x="1011.7" y="325" width="3.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1014.70" y="335.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="293" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="303.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="405" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="415.5" ></text>
</g>
<g >
<title>pypy_g_handler_inline_call_ir_v (16,845,329 samples, 0.25%)</title><rect x="938.0" y="485" width="3.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="940.97" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (237,905,686 samples, 3.60%)</title><rect x="318.8" y="389" width="42.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="321.84" y="399.5" >ent..</text>
</g>
<g >
<title>dequeue_task_fair (17,323,497 samples, 0.26%)</title><rect x="390.7" y="245" width="3.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="393.67" y="255.5" ></text>
</g>
<g >
<title>pypy_g_GcRewriterAssembler_emit_op (19,135,898 samples, 0.29%)</title><rect x="598.1" y="485" width="3.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="601.14" y="495.5" ></text>
</g>
<g >
<title>__libc_recv (201,586,087 samples, 3.05%)</title><rect x="991.4" y="501" width="36.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="994.44" y="511.5" >__l..</text>
</g>
<g >
<title>pypy_g_ModuleDictStrategy_getitem_str (14,969,489 samples, 0.23%)</title><rect x="619.2" y="485" width="2.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="622.20" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (167,909,895 samples, 2.54%)</title><rect x="997.5" y="485" width="29.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1000.45" y="495.5" >en..</text>
</g>
<g >
<title>perf_event_sched_in (15,916,836 samples, 0.24%)</title><rect x="358.5" y="213" width="2.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="361.47" y="223.5" ></text>
</g>
<g >
<title>pypy_g__ll_dict_setitem_lookup_done__v1669___simple_cal (24,443,040 samples, 0.37%)</title><rect x="864.1" y="485" width="4.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="867.05" y="495.5" ></text>
</g>
<g >
<title>sk_reset_timer (16,646,126 samples, 0.25%)</title><rect x="552.4" y="261" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="555.36" y="271.5" ></text>
</g>
<g >
<title>rpc_pipefs_notifier_list (14,071,967 samples, 0.21%)</title><rect x="532.5" y="101" width="2.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="535.54" y="111.5" ></text>
</g>
<g >
<title>pypy_g_dispatch_bytecode__AccessDirect_None (88,640,711 samples, 1.34%)</title><rect x="425.2" y="469" width="15.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="428.18" y="479.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="389" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="399.5" ></text>
</g>
<g >
<title>ep_send_events_proc (19,061,630 samples, 0.29%)</title><rect x="328.6" y="293" width="3.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="331.58" y="303.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_setposition (33,164,017 samples, 0.50%)</title><rect x="586.4" y="485" width="6.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="589.45" y="495.5" ></text>
</g>
<g >
<title>sk_stream_alloc_skb (226,529,471 samples, 3.43%)</title><rect x="456.7" y="341" width="40.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="459.71" y="351.5" >sk_..</text>
</g>
<g >
<title>pypy_g_maybe_compile_and_run__star_5_2 (16,919,504 samples, 0.26%)</title><rect x="974.4" y="485" width="3.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="977.41" y="495.5" ></text>
</g>
<g >
<title>pypy_g_BlackholeInterpreter_run (28,029,267 samples, 0.42%)</title><rect x="581.4" y="485" width="5.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="584.44" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="437" width="4.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="608.60" y="447.5" ></text>
</g>
<g >
<title>skb_copy_bits (23,797,438 samples, 0.36%)</title><rect x="528.3" y="69" width="4.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="531.30" y="79.5" ></text>
</g>
<g >
<title>epoll_wait (273,820,952 samples, 4.14%)</title><rect x="318.8" y="405" width="48.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="321.84" y="415.5" >epol..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,205,337 samples, 0.21%)</title><rect x="565.2" y="469" width="2.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="568.23" y="479.5" ></text>
</g>
<g >
<title>pypy_g_makespecialisedtuple2 (14,303,436 samples, 0.22%)</title><rect x="971.9" y="485" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="974.85" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (156,360,789 samples, 2.37%)</title><rect x="370.8" y="405" width="27.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="373.77" y="415.5" >e..</text>
</g>
<g >
<title>skb_copy_datagram_iter (29,285,002 samples, 0.44%)</title><rect x="1009.6" y="373" width="5.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1012.62" y="383.5" ></text>
</g>
<g >
<title>epoll_wait (173,423,240 samples, 2.62%)</title><rect x="367.7" y="421" width="31.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="370.73" y="431.5" >ep..</text>
</g>
<g >
<title>pypy_g_jit_rvmprof_code (37,765,764 samples, 0.57%)</title><rect x="950.0" y="485" width="6.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="952.99" y="495.5" ></text>
</g>
<g >
<title>inflate (19,887,174 samples, 0.30%)</title><rect x="574.9" y="485" width="3.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="577.89" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_getvirtual_ptr (30,623,312 samples, 0.46%)</title><rect x="1123.3" y="501" width="5.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1126.30" y="511.5" ></text>
</g>
<g >
<title>__getpid (31,161,184 samples, 0.47%)</title><rect x="239.4" y="485" width="5.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="242.39" y="495.5" ></text>
</g>
<g >
<title>pypy_g_W_Root__cpyext_as_pyobj (16,438,780 samples, 0.25%)</title><rect x="836.0" y="485" width="2.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="838.99" y="495.5" ></text>
</g>
<g >
<title>pypy_g__invoke_comparison (24,910,113 samples, 0.38%)</title><rect x="859.6" y="485" width="4.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="862.61" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_get__DICTPtr_Address_Address (19,252,958 samples, 0.29%)</title><rect x="445.8" y="469" width="3.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="448.81" y="479.5" ></text>
</g>
<g >
<title>ip_queue_xmit (270,691,260 samples, 4.10%)</title><rect x="504.0" y="277" width="48.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="507.03" y="287.5" >ip_q..</text>
</g>
<g >
<title>pypy_g_execute_token__star_2_2 (16,592,587 samples, 0.25%)</title><rect x="911.1" y="485" width="3.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="914.12" y="495.5" ></text>
</g>
<g >
<title>update_process_times (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="389" width="3.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1128.75" y="399.5" ></text>
</g>
<g >
<title>do_page_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="453" width="4.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="608.60" y="463.5" ></text>
</g>
<g >
<title>pypy_g_index (26,899,374 samples, 0.41%)</title><rect x="441.0" y="469" width="4.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="444.00" y="479.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (325,810,749 samples, 4.93%)</title><rect x="497.2" y="325" width="58.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="500.16" y="335.5" >__tcp_..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (237,905,686 samples, 3.60%)</title><rect x="318.8" y="357" width="42.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="321.84" y="367.5" >__x..</text>
</g>
<g >
<title>pypy_g__extend_from_tuple__v354___simple_call__function (21,466,950 samples, 0.32%)</title><rect x="849.0" y="485" width="3.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="851.98" y="495.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (35,280,058 samples, 0.53%)</title><rect x="456.7" y="293" width="6.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="459.71" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="389" width="4.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="608.60" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (649,592,709 samples, 9.83%)</title><rect x="449.2" y="469" width="116.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="452.24" y="479.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>pypy_g_MetaInterp_newframe (14,974,347 samples, 0.23%)</title><rect x="616.5" y="485" width="2.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="619.52" y="495.5" ></text>
</g>
<g >
<title>default_wake_function (10,568,429 samples, 0.16%)</title><rect x="321.0" y="245" width="1.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="324.00" y="255.5" ></text>
</g>
<g >
<title>dequeue_entity (17,323,497 samples, 0.26%)</title><rect x="390.7" y="229" width="3.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="393.67" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_epoll_wait (119,943,927 samples, 1.81%)</title><rect x="377.3" y="373" width="21.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="380.28" y="383.5" >_..</text>
</g>
<g >
<title>security_socket_sendmsg (21,725,768 samples, 0.33%)</title><rect x="557.6" y="389" width="3.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="560.60" y="399.5" ></text>
</g>
<g >
<title>memcpy@plt (16,811,063 samples, 0.25%)</title><rect x="578.4" y="485" width="3.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="581.44" y="495.5" ></text>
</g>
<g >
<title>__wake_up_common (10,568,429 samples, 0.16%)</title><rect x="321.0" y="261" width="1.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="324.00" y="271.5" ></text>
</g>
<g >
<title>[unknown] (3,860,007,418 samples, 58.41%)</title><rect x="302.2" y="501" width="689.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="305.24" y="511.5" >[unknown]</text>
</g>
<g >
<title>mem_cgroup_commit_charge (23,530,031 samples, 0.36%)</title><rect x="605.6" y="357" width="4.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="608.60" y="367.5" ></text>
</g>
<g >
<title>inflate (20,197,324 samples, 0.31%)</title><rect x="1038.5" y="501" width="3.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1041.53" y="511.5" ></text>
</g>
<g >
<title>update_load_avg (17,323,497 samples, 0.26%)</title><rect x="390.7" y="213" width="3.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="393.67" y="223.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (114,293,461 samples, 1.73%)</title><rect x="521.2" y="149" width="20.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="524.18" y="159.5" ></text>
</g>
<g >
<title>_cond_resched (17,921,226 samples, 0.27%)</title><rect x="322.9" y="293" width="3.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="325.89" y="303.5" ></text>
</g>
<g >
<title>pypy_g_assembler_call_helper_57 (17,133,490 samples, 0.26%)</title><rect x="270.4" y="485" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="273.41" y="495.5" ></text>
</g>
<g >
<title>__libc_send (649,592,709 samples, 9.83%)</title><rect x="449.2" y="485" width="116.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="452.24" y="495.5" >__libc_send</text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="261" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (35,915,266 samples, 0.54%)</title><rect x="361.3" y="389" width="6.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="364.31" y="399.5" ></text>
</g>
<g >
<title>brk (14,205,337 samples, 0.21%)</title><rect x="565.2" y="485" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="568.23" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataLoopMemo__number_boxes (23,023,951 samples, 0.35%)</title><rect x="1128.8" y="501" width="4.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1131.77" y="511.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_decode_ref (40,914,730 samples, 0.62%)</title><rect x="817.2" y="485" width="7.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.16" y="495.5" ></text>
</g>
<g >
<title>do_epoll_wait (237,905,686 samples, 3.60%)</title><rect x="318.8" y="341" width="42.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="321.84" y="351.5" >do_..</text>
</g>
<g >
<title>__wake_up_common_lock (10,568,429 samples, 0.16%)</title><rect x="321.0" y="277" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="324.00" y="287.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (14,033,811 samples, 0.21%)</title><rect x="313.6" y="485" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="316.60" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,916,836 samples, 0.24%)</title><rect x="1035.7" y="485" width="2.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1038.69" y="495.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_free_rawmalloced_object_if (15,632,066 samples, 0.24%)</title><rect x="609.8" y="485" width="2.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="612.81" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handle_jitexception_from_blackhole_57 (18,453,094 samples, 0.28%)</title><rect x="930.9" y="485" width="3.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="933.88" y="495.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="277" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="287.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (15,955,844 samples, 0.24%)</title><rect x="358.5" y="229" width="2.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="361.46" y="239.5" ></text>
</g>
<g >
<title>ksize (14,969,489 samples, 0.23%)</title><rect x="494.5" y="325" width="2.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="497.49" y="335.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (16,646,126 samples, 0.25%)</title><rect x="552.4" y="293" width="2.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="555.36" y="303.5" ></text>
</g>
<g >
<title>RPyThreadAcquireLockTimed (18,071,587 samples, 0.27%)</title><rect x="302.2" y="485" width="3.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="305.24" y="495.5" ></text>
</g>
<g >
<title>pypy_g_may_ignore_finalizer__pypy_interpreter_generator_1 (14,022,928 samples, 0.21%)</title><rect x="299.7" y="485" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="302.73" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (156,360,789 samples, 2.37%)</title><rect x="370.8" y="389" width="27.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="373.77" y="399.5" >d..</text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1637___simple_call__function_ (17,919,737 samples, 0.27%)</title><rect x="1177.2" y="501" width="3.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1180.24" y="511.5" ></text>
</g>
<g >
<title>__alloc_skb (211,559,982 samples, 3.20%)</title><rect x="456.7" y="325" width="37.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="459.71" y="335.5" >__a..</text>
</g>
<g >
<title>apic_timer_interrupt (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="485" width="3.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1128.75" y="495.5" ></text>
</g>
<g >
<title>do_user_addr_fault (23,530,031 samples, 0.36%)</title><rect x="605.6" y="421" width="4.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="608.60" y="431.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (292,956,200 samples, 4.43%)</title><rect x="500.1" y="293" width="52.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="503.05" y="303.5" >__tcp..</text>
</g>
<g >
<title>__ip_finish_output (114,293,461 samples, 1.73%)</title><rect x="521.2" y="197" width="20.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="524.18" y="207.5" ></text>
</g>
<g >
<title>pypy_g_PyFrame___init__ (652,881,790 samples, 9.88%)</title><rect x="621.9" y="485" width="116.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="624.87" y="495.5" >pypy_g_PyFrame..</text>
</g>
<g >
<title>tcp_send_mss (12,723,025 samples, 0.19%)</title><rect x="555.3" y="341" width="2.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="558.33" y="351.5" ></text>
</g>
<g >
<title>finish_task_switch (15,977,099 samples, 0.24%)</title><rect x="358.5" y="245" width="2.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="361.46" y="255.5" ></text>
</g>
<g >
<title>ep_send_events_proc (23,839,323 samples, 0.36%)</title><rect x="382.1" y="309" width="4.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="385.05" y="319.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (18,884,749 samples, 0.29%)</title><rect x="1183.0" y="501" width="3.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1185.96" y="511.5" ></text>
</g>
<g >
<title>validate_xmit_skb (13,575,481 samples, 0.21%)</title><rect x="539.2" y="101" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="542.16" y="111.5" ></text>
</g>
<g >
<title>ipt_do_table (9,358,116 samples, 0.14%)</title><rect x="516.6" y="181" width="1.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="519.59" y="191.5" ></text>
</g>
<g >
<title>pypy_g_ResumeDataDirectReader_consume_vref_and_vable (39,579,338 samples, 0.60%)</title><rect x="1065.4" y="501" width="7.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1068.44" y="511.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="245" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="255.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (19,061,630 samples, 0.29%)</title><rect x="328.6" y="277" width="3.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="331.58" y="287.5" ></text>
</g>
<g >
<title>tcp_recvmsg (115,814,766 samples, 1.75%)</title><rect x="1000.5" y="389" width="20.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1003.50" y="399.5" ></text>
</g>
<g >
<title>pypy_g_handler_int_return_1 (15,343,497 samples, 0.23%)</title><rect x="941.0" y="485" width="2.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="943.98" y="495.5" ></text>
</g>
<g >
<title>pypy_g_ll_dict_lookup__v1141___simple_call__function_ (34,219,117 samples, 0.52%)</title><rect x="964.1" y="485" width="6.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="967.07" y="495.5" ></text>
</g>
<g >
<title>pypy_g__handle_getattribute (19,477,672 samples, 0.29%)</title><rect x="856.1" y="485" width="3.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="859.13" y="495.5" ></text>
</g>
<g >
<title>sock_poll (19,061,630 samples, 0.29%)</title><rect x="328.6" y="261" width="3.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="331.58" y="271.5" ></text>
</g>
<g >
<title>pypy_g_force_now_1 (39,842,829 samples, 0.60%)</title><rect x="278.3" y="485" width="7.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="281.35" y="495.5" ></text>
</g>
<g >
<title>pypy_g_blackhole_from_resumedata (35,105,189 samples, 0.53%)</title><rect x="874.9" y="485" width="6.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="877.89" y="495.5" ></text>
</g>
<g >
<title>pypy_g_handler_goto (21,245,727 samples, 0.32%)</title><rect x="934.2" y="485" width="3.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="937.18" y="495.5" ></text>
</g>
<g >
<title>__check_object_size (11,643,379 samples, 0.18%)</title><rect x="1009.6" y="341" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1012.62" y="351.5" ></text>
</g>
<g >
<title>pypy3.10 (6,608,813,561 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >pypy3.10</text>
</g>
<g >
<title>tcp_rcv_space_adjust (18,826,330 samples, 0.28%)</title><rect x="1017.8" y="373" width="3.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1020.81" y="383.5" ></text>
</g>
<g >
<title>pypy_g_resume_in_blackhole (18,453,094 samples, 0.28%)</title><rect x="930.9" y="469" width="3.3" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="933.88" y="479.5" ></text>
</g>
<g >
<title>sch_direct_xmit (88,762,502 samples, 1.34%)</title><rect x="525.7" y="133" width="15.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="528.74" y="143.5" ></text>
</g>
<g >
<title>ip_finish_output2 (114,293,461 samples, 1.73%)</title><rect x="521.2" y="181" width="20.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="524.18" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock_bh (18,527,235 samples, 0.28%)</title><rect x="513.3" y="165" width="3.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="516.29" y="175.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="341" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="351.5" ></text>
</g>
<g >
<title>epoll_wait (15,298,832 samples, 0.23%)</title><rect x="316.1" y="229" width="2.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="319.10" y="239.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (35,280,058 samples, 0.53%)</title><rect x="456.7" y="309" width="6.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="459.71" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="437" width="3.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1128.75" y="447.5" ></text>
</g>
<g >
<title>__kmalloc_node_track_caller (14,333,991 samples, 0.22%)</title><rect x="525.7" y="37" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="528.74" y="47.5" ></text>
</g>
<g >
<title>do_epoll_wait (119,943,927 samples, 1.81%)</title><rect x="377.3" y="357" width="21.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="380.28" y="367.5" >d..</text>
</g>
<g >
<title>pypy_g_handle_bytecode__AccessDirect_None (21,375,257 samples, 0.32%)</title><rect x="927.1" y="485" width="3.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="930.07" y="495.5" ></text>
</g>
<g >
<title>clock_gettime (46,248,671 samples, 0.70%)</title><rect x="1027.4" y="501" width="8.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1030.43" y="511.5" ></text>
</g>
<g >
<title>[unknown] (15,298,832 samples, 0.23%)</title><rect x="316.1" y="325" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="335.5" ></text>
</g>
<g >
<title>pypy_g_from_ref (26,658,138 samples, 0.40%)</title><rect x="1162.8" y="501" width="4.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1165.80" y="511.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (38,987,400 samples, 0.59%)</title><rect x="1028.7" y="485" width="7.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1031.73" y="495.5" ></text>
</g>
<g >
<title>pypy_g_Signature_find_w_argname (47,926,305 samples, 0.73%)</title><rect x="1132.9" y="501" width="8.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1135.88" y="511.5" ></text>
</g>
<g >
<title>__tcp_select_window (22,264,940 samples, 0.34%)</title><rect x="500.1" y="277" width="3.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="503.05" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (150,859,224 samples, 2.28%)</title><rect x="1000.5" y="453" width="26.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1003.50" y="463.5" >_..</text>
</g>
<g >
<title>ktime_get (18,826,330 samples, 0.28%)</title><rect x="1017.8" y="357" width="3.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1020.81" y="367.5" ></text>
</g>
<g >
<title>[unknown] (483,516,685 samples, 7.32%)</title><rect x="316.1" y="437" width="86.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="447.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_ll_grow_by__stringbuilderPtr_Signed (9,358,116 samples, 0.14%)</title><rect x="970.2" y="485" width="1.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="973.18" y="495.5" ></text>
</g>
<g >
<title>netif_skb_features (13,575,481 samples, 0.21%)</title><rect x="539.2" y="85" width="2.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="542.16" y="95.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (29,285,002 samples, 0.44%)</title><rect x="1009.6" y="357" width="5.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1012.62" y="367.5" ></text>
</g>
<g >
<title>__kfree_skb (20,942,097 samples, 0.32%)</title><rect x="1002.7" y="373" width="3.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1005.67" y="383.5" ></text>
</g>
<g >
<title>pypy_g_IncrementalMiniMarkGC_remove_young_arrays_from_o (12,064,024 samples, 0.18%)</title><rect x="418.4" y="469" width="2.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="421.42" y="479.5" ></text>
</g>
<g >
<title>pypy_epoll_wait (20,973,661 samples, 0.32%)</title><rect x="398.7" y="421" width="3.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="401.69" y="431.5" ></text>
</g>
<g >
<title>pypy_g_ArenaCollection_malloc (41,427,409 samples, 0.63%)</title><rect x="1044.7" y="501" width="7.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1047.67" y="511.5" ></text>
</g>
<g >
<title>pypy_g_setfields__rpython_jit_metainterp_resume_ResumeD (22,183,208 samples, 0.34%)</title><rect x="980.2" y="485" width="4.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="983.25" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_init (27,388,504 samples, 0.41%)</title><rect x="337.6" y="261" width="4.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="340.64" y="271.5" ></text>
</g>
<g >
<title>pypy_g_force_now (14,601,225 samples, 0.22%)</title><rect x="275.7" y="485" width="2.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="278.74" y="495.5" ></text>
</g>
<g >
<title>pypy_g__get_list_of_values__R (18,581,949 samples, 0.28%)</title><rect x="852.8" y="485" width="3.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="855.81" y="495.5" ></text>
</g>
<g >
<title>tcp_write_xmit (309,602,326 samples, 4.68%)</title><rect x="500.1" y="309" width="55.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="503.05" y="319.5" >tcp_w..</text>
</g>
<g >
<title>pypy_g_W_Weakref_shortcut___eq__ (22,552,759 samples, 0.34%)</title><rect x="845.0" y="485" width="4.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="847.95" y="495.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (16,646,126 samples, 0.25%)</title><rect x="552.4" y="277" width="2.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="555.36" y="287.5" ></text>
</g>
<g >
<title>apply_mask (16,929,241 samples, 0.26%)</title><rect x="245.0" y="485" width="3.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="247.95" y="495.5" ></text>
</g>
<g >
<title>pypy_g_comparison_eq_impl (19,410,258 samples, 0.29%)</title><rect x="1156.3" y="501" width="3.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1159.32" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,205,337 samples, 0.21%)</title><rect x="565.2" y="453" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="568.23" y="463.5" ></text>
</g>
<g >
<title>__alloc_skb (14,333,991 samples, 0.22%)</title><rect x="525.7" y="69" width="2.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="528.74" y="79.5" ></text>
</g>
<g >
<title>pypy_g_unichr_as_utf8 (20,559,195 samples, 0.31%)</title><rect x="1186.3" y="501" width="3.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1189.33" y="511.5" ></text>
</g>
<g >
<title>epoll_wait (13,079,597 samples, 0.20%)</title><rect x="252.0" y="485" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="255.00" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (149,581,387 samples, 2.26%)</title><rect x="334.6" y="293" width="26.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="337.61" y="303.5" >s..</text>
</g>
<g >
<title>hrtimer_interrupt (16,934,452 samples, 0.26%)</title><rect x="1125.7" y="453" width="3.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1128.75" y="463.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (20,974,108 samples, 0.32%)</title><rect x="561.5" y="421" width="3.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="564.48" y="431.5" ></text>
</g>
<g >
<title>pypy_g_handler_setfield_vable_i (19,575,808 samples, 0.30%)</title><rect x="943.7" y="485" width="3.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="946.72" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_sendto (649,592,709 samples, 9.83%)</title><rect x="449.2" y="437" width="116.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="452.24" y="447.5" >__x64_sys_sendto</text>
</g>
<g >
<title>pypy_g_newtuple2 (14,084,380 samples, 0.21%)</title><rect x="1180.4" y="501" width="2.6" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1183.44" y="511.5" ></text>
</g>
<g >
<title>[unknown] (483,516,685 samples, 7.32%)</title><rect x="316.1" y="453" width="86.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="319.10" y="463.5" >[unknown]</text>
</g>
<g >
<title>pypy_g_endswith__str_str (12,725,580 samples, 0.19%)</title><rect x="273.5" y="485" width="2.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="276.47" y="495.5" ></text>
</g>
<g >
<title>tg3_start_xmit (22,983,625 samples, 0.35%)</title><rect x="535.1" y="101" width="4.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="538.06" y="111.5" ></text>
</g>
<g >
<title>ip_send_check (21,223,056 samples, 0.32%)</title><rect x="546.0" y="229" width="3.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="549.02" y="239.5" ></text>
</g>
<g >
<title>tcp_poll (19,061,630 samples, 0.29%)</title><rect x="328.6" y="245" width="3.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="331.58" y="255.5" ></text>
</g>
<g >
<title>crtc_crc_read (24,866,256 samples, 0.38%)</title><rect x="541.6" y="197" width="4.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="544.58" y="207.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (75,187,021 samples, 1.14%)</title><rect x="525.7" y="117" width="13.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="528.74" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (167,909,895 samples, 2.54%)</title><rect x="997.5" y="469" width="29.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1000.45" y="479.5" >do..</text>
</g>
<g >
<title>[libc-2.31.so] (45,558,578 samples, 0.69%)</title><rect x="305.5" y="485" width="8.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="308.46" y="495.5" ></text>
</g>
<g >
<title>pypy_g_force_from_resumedata (31,781,934 samples, 0.48%)</title><rect x="914.1" y="485" width="5.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="917.08" y="495.5" ></text>
</g>
<g >
<title>nf_nat_ipv4_local_fn (16,305,952 samples, 0.25%)</title><rect x="518.3" y="197" width="2.9" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="521.27" y="207.5" ></text>
</g>
<g >
<title>[perf-84040.map] (1,073,233,191 samples, 16.24%)</title><rect x="41.1" y="485" width="191.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="44.07" y="495.5" >[perf-84040.map]</text>
</g>
<g >
<title>nlm_traverse_locks (24,866,256 samples, 0.38%)</title><rect x="541.6" y="181" width="4.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="544.58" y="191.5" ></text>
</g>
<g >
<title>__schedule (67,837,583 samples, 1.03%)</title><rect x="386.6" y="277" width="12.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="389.58" y="287.5" ></text>
</g>
</g>
</svg>
