<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>ctx_sched_in (21,848,631 samples, 0.91%)</title><rect x="424.7" y="165" width="10.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="427.67" y="175.5" ></text>
</g>
<g >
<title>check_preempt_curr (43,232,282 samples, 1.80%)</title><rect x="1019.4" y="69" width="21.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1022.37" y="79.5" >c..</text>
</g>
<g >
<title>ttwu_do_activate (89,193,066 samples, 3.72%)</title><rect x="996.7" y="101" width="44.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="999.74" y="111.5" >ttwu..</text>
</g>
<g >
<title>__slab_alloc (16,261,894 samples, 0.68%)</title><rect x="569.4" y="165" width="8.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="572.37" y="175.5" ></text>
</g>
<g >
<title>ldsem_down_read (15,428,214 samples, 0.64%)</title><rect x="1140.6" y="213" width="7.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1143.58" y="223.5" ></text>
</g>
<g >
<title>vfs_write (536,213,432 samples, 22.37%)</title><rect x="909.0" y="277" width="264.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="911.99" y="287.5" >vfs_write</text>
</g>
<g >
<title>__x64_sys_sendto (226,948,239 samples, 9.47%)</title><rect x="540.3" y="373" width="111.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="543.33" y="383.5" >__x64_sys_sen..</text>
</g>
<g >
<title>_raw_spin_lock (13,356,935 samples, 0.56%)</title><rect x="1052.9" y="165" width="6.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1055.88" y="175.5" ></text>
</g>
<g >
<title>server::main (971,336,335 samples, 40.53%)</title><rect x="711.7" y="453" width="478.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="714.73" y="463.5" >server::main</text>
</g>
<g >
<title>get_work_pool (146,138,652 samples, 6.10%)</title><rect x="1059.5" y="165" width="71.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1062.45" y="175.5" >get_work..</text>
</g>
<g >
<title>__x64_sys_write (699,588,634 samples, 29.19%)</title><rect x="828.5" y="309" width="344.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="831.55" y="319.5" >__x64_sys_write</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (14,449,588 samples, 0.60%)</title><rect x="770.4" y="341" width="7.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="773.42" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (25,809,772 samples, 1.08%)</title><rect x="318.3" y="165" width="12.7" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="321.32" y="175.5" ></text>
</g>
<g >
<title>&lt;udp_dtls::udp_channel::UdpChannel as std::io::Read&gt;::read (551,074,120 samples, 22.99%)</title><rect x="199.5" y="437" width="271.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="202.46" y="447.5" >&lt;udp_dtls::udp_channel::UdpChannel a..</text>
</g>
<g >
<title>tty_write_room (18,620,897 samples, 0.78%)</title><rect x="1131.4" y="213" width="9.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1134.41" y="223.5" ></text>
</g>
<g >
<title>group_sched_in (1,257,828 samples, 0.05%)</title><rect x="434.8" y="117" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="437.81" y="127.5" ></text>
</g>
<g >
<title>std::rt::lang_start (1,079,518,590 samples, 45.05%)</title><rect x="658.5" y="469" width="531.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="661.46" y="479.5" >std::rt::lang_start</text>
</g>
<g >
<title>__perf_event_task_sched_out (163,629,643 samples, 6.83%)</title><rect x="223.6" y="213" width="80.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="226.57" y="223.5" >__perf_ev..</text>
</g>
<g >
<title>openssl::ssl::SslStream&lt;S&gt;::read_uninit (13,017,595 samples, 0.54%)</title><rect x="683.7" y="453" width="6.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="686.67" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (29,576,669 samples, 1.23%)</title><rect x="605.4" y="165" width="14.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="608.44" y="175.5" ></text>
</g>
<g >
<title>ip_idents_reserve (11,913,712 samples, 0.50%)</title><rect x="577.4" y="261" width="5.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="580.38" y="271.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (18,620,897 samples, 0.78%)</title><rect x="1131.4" y="197" width="9.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.41" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_enable (30,298,380 samples, 1.26%)</title><rect x="435.4" y="165" width="14.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="438.43" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_bh (1,579,268 samples, 0.07%)</title><rect x="450.4" y="277" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="453.35" y="287.5" ></text>
</g>
<g >
<title>&lt;alloc::borrow::Cow&lt;B&gt; as core::fmt::Debug&gt;::fmt (30,897,065 samples, 1.29%)</title><rect x="727.0" y="405" width="15.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="729.96" y="415.5" ></text>
</g>
<g >
<title>crtc_crc_read (32,185,354 samples, 1.34%)</title><rect x="629.1" y="213" width="15.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="632.06" y="223.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (336,321,106 samples, 14.03%)</title><rect x="965.8" y="197" width="165.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="968.81" y="207.5" >tty_flip_buffer_push</text>
</g>
<g >
<title>[libcrypto.so.1.1] (74,843,946 samples, 3.12%)</title><rect x="30.4" y="453" width="36.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="33.36" y="463.5" >[li..</text>
</g>
<g >
<title>dev_hard_start_xmit (17,802,436 samples, 0.74%)</title><rect x="611.2" y="133" width="8.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="614.24" y="143.5" ></text>
</g>
<g >
<title>native_sched_clock (11,234,113 samples, 0.47%)</title><rect x="1047.3" y="69" width="5.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1050.35" y="79.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (30,307,494 samples, 1.26%)</title><rect x="435.4" y="181" width="14.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="438.42" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,288,897,645 samples, 53.78%)</title><rect x="23.8" y="469" width="634.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.83" y="479.5" >[unknown]</text>
</g>
<g >
<title>__ip_make_skb (11,913,712 samples, 0.50%)</title><rect x="577.4" y="277" width="5.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="580.38" y="287.5" ></text>
</g>
<g >
<title>switch_fpu_return (12,962,903 samples, 0.54%)</title><rect x="464.4" y="373" width="6.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="467.41" y="383.5" ></text>
</g>
<g >
<title>[libcrypto.so.1.1] (15,483,473 samples, 0.65%)</title><rect x="16.2" y="469" width="7.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="19.20" y="479.5" ></text>
</g>
<g >
<title>tg3_tx_frag_set (17,802,436 samples, 0.74%)</title><rect x="611.2" y="101" width="8.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="614.24" y="111.5" ></text>
</g>
<g >
<title>ip_make_skb (28,175,606 samples, 1.18%)</title><rect x="569.4" y="293" width="13.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="572.37" y="303.5" ></text>
</g>
<g >
<title>dst_release (18,387,442 samples, 0.77%)</title><rect x="620.0" y="149" width="9.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="623.00" y="159.5" ></text>
</g>
<g >
<title>__schedule (460,571,589 samples, 19.22%)</title><rect x="223.6" y="229" width="226.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="226.57" y="239.5" >__schedule</text>
</g>
<g >
<title>_raw_spin_lock (13,445,640 samples, 0.56%)</title><rect x="304.1" y="213" width="6.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="307.14" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (11,774,233 samples, 0.49%)</title><rect x="605.4" y="149" width="5.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="608.44" y="159.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (195,058,796 samples, 8.14%)</title><rect x="354.3" y="197" width="96.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="357.30" y="207.5" >__perf_even..</text>
</g>
<g >
<title>__alloc_skb (16,261,894 samples, 0.68%)</title><rect x="569.4" y="213" width="8.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="572.37" y="223.5" ></text>
</g>
<g >
<title>core::slice::memchr::memrchr (18,858,420 samples, 0.79%)</title><rect x="1173.0" y="357" width="9.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1176.01" y="367.5" ></text>
</g>
<g >
<title>get_l4proto (13,499,128 samples, 0.56%)</title><rect x="598.8" y="197" width="6.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="601.79" y="207.5" ></text>
</g>
<g >
<title>core::slice::raw::from_raw_parts (13,521,462 samples, 0.56%)</title><rect x="491.6" y="437" width="6.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="494.55" y="447.5" ></text>
</g>
<g >
<title>std::io::stdio::_print (952,549,630 samples, 39.75%)</title><rect x="721.0" y="437" width="469.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="723.98" y="447.5" >std::io::stdio::_print</text>
</g>
<g >
<title>tty_write_room (17,266,572 samples, 0.72%)</title><rect x="1156.4" y="229" width="8.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1159.39" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (240,997,385 samples, 10.06%)</title><rect x="533.4" y="389" width="118.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="536.42" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>__local_bh_enable_ip (1,579,268 samples, 0.07%)</title><rect x="450.4" y="261" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="453.35" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (24,026,775 samples, 1.00%)</title><rect x="1007.5" y="37" width="11.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1010.54" y="47.5" ></text>
</g>
<g >
<title>deactivate_task (87,246,841 samples, 3.64%)</title><rect x="311.3" y="213" width="43.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="314.34" y="223.5" >deac..</text>
</g>
<g >
<title>udp_sendmsg (199,578,908 samples, 8.33%)</title><rect x="546.6" y="309" width="98.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="549.63" y="319.5" >udp_sendmsg</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (30,897,065 samples, 1.29%)</title><rect x="727.0" y="357" width="15.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="729.96" y="367.5" ></text>
</g>
<g >
<title>select_task_rq_fair (34,241,462 samples, 1.43%)</title><rect x="979.9" y="101" width="16.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="982.88" y="111.5" ></text>
</g>
<g >
<title>openssl::ssl::bio::bread (25,985,160 samples, 1.08%)</title><rect x="498.2" y="437" width="12.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="501.21" y="447.5" ></text>
</g>
<g >
<title>tty_paranoia_check (16,679,889 samples, 0.70%)</title><rect x="1148.2" y="229" width="8.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1151.18" y="239.5" ></text>
</g>
<g >
<title>sock_alloc_send_pskb (16,261,894 samples, 0.68%)</title><rect x="569.4" y="245" width="8.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="572.37" y="255.5" ></text>
</g>
<g >
<title>dev_queue_xmit (18,387,442 samples, 0.77%)</title><rect x="620.0" y="165" width="9.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="623.00" y="175.5" ></text>
</g>
<g >
<title>ip_finish_output2 (47,964,111 samples, 2.00%)</title><rect x="605.4" y="197" width="23.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="608.44" y="207.5" >i..</text>
</g>
<g >
<title>__libc_write (10,515,158 samples, 0.44%)</title><rect x="478.8" y="421" width="5.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="481.75" y="431.5" ></text>
</g>
<g >
<title>__skb_recv_udp (483,517,529 samples, 20.18%)</title><rect x="213.1" y="293" width="238.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="216.05" y="303.5" >__skb_recv_udp</text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (837,680,461 samples, 34.95%)</title><rect x="777.5" y="373" width="412.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="780.54" y="383.5" >&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all</text>
</g>
<g >
<title>sock_alloc_send_skb (16,261,894 samples, 0.68%)</title><rect x="569.4" y="261" width="8.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="572.37" y="271.5" ></text>
</g>
<g >
<title>[libcrypto.so.1.1] (16,157,072 samples, 0.67%)</title><rect x="470.8" y="437" width="8.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="473.80" y="447.5" ></text>
</g>
<g >
<title>move_addr_to_kernel.part.0 (12,793,600 samples, 0.53%)</title><rect x="540.3" y="341" width="6.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="543.33" y="351.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u16&gt;::fmt (14,449,588 samples, 0.60%)</title><rect x="770.4" y="357" width="7.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="773.42" y="367.5" ></text>
</g>
<g >
<title>nf_hook_slow (13,499,128 samples, 0.56%)</title><rect x="598.8" y="229" width="6.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="601.79" y="239.5" ></text>
</g>
<g >
<title>&lt;core::net::socket_addr::SocketAddr as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (14,411,039 samples, 0.60%)</title><rect x="192.4" y="437" width="7.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="195.36" y="447.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (30,275,968 samples, 1.26%)</title><rect x="435.4" y="149" width="14.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="438.44" y="159.5" ></text>
</g>
<g >
<title>activate_task (45,960,784 samples, 1.92%)</title><rect x="996.7" y="85" width="22.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="999.74" y="95.5" >a..</text>
</g>
<g >
<title>visit_groups_merge (21,848,631 samples, 0.91%)</title><rect x="424.7" y="149" width="10.7" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="427.67" y="159.5" ></text>
</g>
<g >
<title>do_output_char (42,066,493 samples, 1.76%)</title><rect x="945.1" y="213" width="20.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="948.10" y="223.5" ></text>
</g>
<g >
<title>event_rpc_bind_status (17,802,436 samples, 0.74%)</title><rect x="611.2" y="117" width="8.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="614.24" y="127.5" ></text>
</g>
<g >
<title>__intel_pmu_disable_all (163,629,643 samples, 6.83%)</title><rect x="223.6" y="133" width="80.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="226.57" y="143.5" >__intel_p..</text>
</g>
<g >
<title>ksys_write (699,588,634 samples, 29.19%)</title><rect x="828.5" y="293" width="344.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="831.55" y="303.5" >ksys_write</text>
</g>
<g >
<title>tty_ldisc_ref_wait (15,428,214 samples, 0.64%)</title><rect x="1140.6" y="229" width="7.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1143.58" y="239.5" ></text>
</g>
<g >
<title>drm_crtc_add_crc_entry (13,499,128 samples, 0.56%)</title><rect x="598.8" y="213" width="6.6" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="601.79" y="223.5" ></text>
</g>
<g >
<title>sock_sendmsg (214,154,639 samples, 8.94%)</title><rect x="546.6" y="341" width="105.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="549.63" y="351.5" >sock_sendmsg</text>
</g>
<g >
<title>ip_route_output_flow (17,861,770 samples, 0.75%)</title><rect x="583.2" y="293" width="8.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="586.24" y="303.5" ></text>
</g>
<g >
<title>&lt;str as core::fmt::Debug&gt;::fmt (30,897,065 samples, 1.29%)</title><rect x="727.0" y="389" width="15.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="729.96" y="399.5" ></text>
</g>
<g >
<title>core::fmt::write (909,513,515 samples, 37.95%)</title><rect x="742.2" y="405" width="447.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="745.17" y="415.5" >core::fmt::write</text>
</g>
<g >
<title>crtc_crc_read (16,285,896 samples, 0.68%)</title><rect x="636.9" y="197" width="8.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="639.88" y="207.5" ></text>
</g>
<g >
<title>__libc_write (791,158,679 samples, 33.01%)</title><rect x="783.5" y="357" width="389.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="786.46" y="367.5" >__libc_write</text>
</g>
<g >
<title>flexible_sched_in (21,848,631 samples, 0.91%)</title><rect x="424.7" y="133" width="10.7" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="427.67" y="143.5" ></text>
</g>
<g >
<title>ip_output (80,149,465 samples, 3.34%)</title><rect x="605.4" y="245" width="39.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="608.44" y="255.5" >ip_..</text>
</g>
<g >
<title>task_ctx_sched_out (163,629,643 samples, 6.83%)</title><rect x="223.6" y="197" width="80.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="226.57" y="207.5" >task_ctx_..</text>
</g>
<g >
<title>__ip_append_data.isra.0 (16,261,894 samples, 0.68%)</title><rect x="569.4" y="277" width="8.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="572.37" y="287.5" ></text>
</g>
<g >
<title>insert_work (176,825,519 samples, 7.38%)</title><rect x="965.8" y="149" width="87.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="968.81" y="159.5" >insert_work</text>
</g>
<g >
<title>__sys_sendto (226,948,239 samples, 9.47%)</title><rect x="540.3" y="357" width="111.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="543.33" y="367.5" >__sys_sendto</text>
</g>
<g >
<title>try_to_wake_up (176,825,519 samples, 7.38%)</title><rect x="965.8" y="117" width="87.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="968.81" y="127.5" >try_to_wak..</text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (25,238,751 samples, 1.05%)</title><rect x="758.0" y="309" width="12.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="761.00" y="319.5" ></text>
</g>
<g >
<title>__sys_recvfrom (510,495,291 samples, 21.30%)</title><rect x="213.1" y="357" width="251.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="216.05" y="367.5" >__sys_recvfrom</text>
</g>
<g >
<title>BIO_read (12,598,191 samples, 0.53%)</title><rect x="10.0" y="469" width="6.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>dequeue_entity (40,645,008 samples, 1.70%)</title><rect x="318.3" y="181" width="20.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="321.32" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_reserve.isra.0 (16,261,894 samples, 0.68%)</title><rect x="569.4" y="197" width="8.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="572.37" y="207.5" ></text>
</g>
<g >
<title>__fget_light (13,478,634 samples, 0.56%)</title><rect x="457.8" y="325" width="6.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="460.78" y="335.5" ></text>
</g>
<g >
<title>ctx_sched_out (163,629,643 samples, 6.83%)</title><rect x="223.6" y="181" width="80.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="226.57" y="191.5" >ctx_sched..</text>
</g>
<g >
<title>core::slice::raw::from_raw_parts_mut::precondition_check (25,330,970 samples, 1.06%)</title><rect x="665.2" y="453" width="12.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="668.24" y="463.5" ></text>
</g>
<g >
<title>fsnotify (16,494,114 samples, 0.69%)</title><rect x="1164.9" y="261" width="8.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1167.89" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_recvfrom (510,495,291 samples, 21.30%)</title><rect x="213.1" y="373" width="251.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="216.05" y="383.5" >__x64_sys_recvfrom</text>
</g>
<g >
<title>[libssl.so.1.1] (13,772,269 samples, 0.57%)</title><rect x="658.5" y="453" width="6.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="661.46" y="463.5" ></text>
</g>
<g >
<title>perf_swevent_add (1,257,828 samples, 0.05%)</title><rect x="434.8" y="101" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="437.81" y="111.5" ></text>
</g>
<g >
<title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (940,410,580 samples, 39.24%)</title><rect x="727.0" y="421" width="463.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="729.96" y="431.5" >&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt</text>
</g>
<g >
<title>drm_connector_init_panel_orientation_property (13,713,969 samples, 0.57%)</title><rect x="592.0" y="229" width="6.8" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="595.04" y="239.5" ></text>
</g>
<g >
<title>&lt;core::net::socket_addr::SocketAddrV4 as core::fmt::Display&gt;::fmt (61,902,475 samples, 2.58%)</title><rect x="747.1" y="389" width="30.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="750.06" y="399.5" >&lt;c..</text>
</g>
<g >
<title>foreign_types_shared::ForeignTypeRef::as_ptr (12,088,708 samples, 0.50%)</title><rect x="677.7" y="453" width="6.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="680.71" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,483,473 samples, 0.65%)</title><rect x="483.9" y="421" width="7.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="486.93" y="431.5" ></text>
</g>
<g >
<title>resched_curr (10,349,749 samples, 0.43%)</title><rect x="1035.6" y="53" width="5.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1038.56" y="63.5" ></text>
</g>
<g >
<title>finish_wait (1,561,022 samples, 0.07%)</title><rect x="222.8" y="261" width="0.8" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="225.81" y="271.5" ></text>
</g>
<g >
<title>openssl::ssl::SslStream&lt;S&gt;::ssl_write (27,240,761 samples, 1.14%)</title><rect x="698.3" y="453" width="13.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="701.32" y="463.5" ></text>
</g>
<g >
<title>nlm_traverse_locks (16,285,896 samples, 0.68%)</title><rect x="636.9" y="181" width="8.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="639.88" y="191.5" ></text>
</g>
<g >
<title>server (2,396,497,899 samples, 100.00%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="495.5" >server</text>
</g>
<g >
<title>entry_SYSCALL_64 (28,426,912 samples, 1.19%)</title><rect x="519.4" y="405" width="14.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="522.42" y="415.5" ></text>
</g>
<g >
<title>core::fmt::write (47,452,887 samples, 1.98%)</title><rect x="747.1" y="341" width="23.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="750.06" y="351.5" >c..</text>
</g>
<g >
<title>xfrm_lookup_with_ifid (17,861,770 samples, 0.75%)</title><rect x="583.2" y="261" width="8.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="586.24" y="271.5" ></text>
</g>
<g >
<title>core::slice::memchr::memrchr (15,841,124 samples, 0.66%)</title><rect x="762.6" y="277" width="7.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="765.62" y="287.5" ></text>
</g>
<g >
<title>ip_finish_output (47,964,111 samples, 2.00%)</title><rect x="605.4" y="229" width="23.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="608.44" y="239.5" >i..</text>
</g>
<g >
<title>__vfs_write (163,375,202 samples, 6.82%)</title><rect x="828.5" y="277" width="80.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="831.55" y="287.5" >__vfs_write</text>
</g>
<g >
<title>dev_queue_xmit (29,576,669 samples, 1.23%)</title><rect x="605.4" y="181" width="14.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="608.44" y="191.5" ></text>
</g>
<g >
<title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (25,238,751 samples, 1.05%)</title><rect x="758.0" y="293" width="12.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="761.00" y="303.5" ></text>
</g>
<g >
<title>tty_write (519,719,318 samples, 21.69%)</title><rect x="909.0" y="245" width="255.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="911.99" y="255.5" >tty_write</text>
</g>
<g >
<title>apparmor_socket_sendmsg (14,575,731 samples, 0.61%)</title><rect x="644.9" y="309" width="7.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="647.90" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_disable (163,629,643 samples, 6.83%)</title><rect x="223.6" y="149" width="80.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="226.57" y="159.5" >x86_pmu_d..</text>
</g>
<g >
<title>do_syscall_64 (772,201,445 samples, 32.22%)</title><rect x="792.8" y="325" width="380.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="795.79" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>sock_recvmsg (497,016,657 samples, 20.74%)</title><rect x="213.1" y="341" width="244.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="216.05" y="351.5" >sock_recvmsg</text>
</g>
<g >
<title>xfrm_lookup_route (17,861,770 samples, 0.75%)</title><rect x="583.2" y="277" width="8.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="586.24" y="287.5" ></text>
</g>
<g >
<title>__skb_wait_for_more_packets (481,938,261 samples, 20.11%)</title><rect x="213.1" y="277" width="237.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="216.05" y="287.5" >__skb_wait_for_more_packets</text>
</g>
<g >
<title>[unknown] (946,617,956 samples, 39.50%)</title><rect x="192.4" y="453" width="466.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="195.36" y="463.5" >[unknown]</text>
</g>
<g >
<title>__kmalloc_node_track_caller (16,261,894 samples, 0.68%)</title><rect x="569.4" y="181" width="8.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="572.37" y="191.5" ></text>
</g>
<g >
<title>psi_task_change (32,436,558 samples, 1.35%)</title><rect x="338.3" y="197" width="16.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="341.33" y="207.5" ></text>
</g>
<g >
<title>nf_hook_slow (32,185,354 samples, 1.34%)</title><rect x="629.1" y="229" width="15.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="632.06" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (10,515,158 samples, 0.44%)</title><rect x="478.8" y="405" width="5.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="481.75" y="415.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (12,022,155 samples, 0.50%)</title><rect x="959.9" y="181" width="5.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="962.89" y="191.5" ></text>
</g>
<g >
<title>native_write_msr (30,275,968 samples, 1.26%)</title><rect x="435.4" y="133" width="14.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="438.44" y="143.5" ></text>
</g>
<g >
<title>std::net::udp::UdpSocket::send_to (269,424,297 samples, 11.24%)</title><rect x="519.4" y="437" width="132.7" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="522.42" y="447.5" >std::net::udp::U..</text>
</g>
<g >
<title>queue_work_on (336,321,106 samples, 14.03%)</title><rect x="965.8" y="181" width="165.6" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="968.81" y="191.5" >queue_work_on</text>
</g>
<g >
<title>__lock_text_start (16,216,084 samples, 0.68%)</title><rect x="971.9" y="101" width="8.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="974.90" y="111.5" ></text>
</g>
<g >
<title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (47,452,887 samples, 1.98%)</title><rect x="747.1" y="325" width="23.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="750.06" y="335.5" >c..</text>
</g>
<g >
<title>finish_task_switch (195,069,744 samples, 8.14%)</title><rect x="354.3" y="213" width="96.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="357.30" y="223.5" >finish_task..</text>
</g>
<g >
<title>security_socket_sendmsg (14,575,731 samples, 0.61%)</title><rect x="644.9" y="325" width="7.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="647.90" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1,179,721 samples, 0.05%)</title><rect x="310.8" y="213" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="313.76" y="223.5" ></text>
</g>
<g >
<title>&lt;core::net::ip_addr::Ipv4Addr as core::fmt::Display&gt;::fmt (47,452,887 samples, 1.98%)</title><rect x="747.1" y="357" width="23.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="750.06" y="367.5" >&lt;..</text>
</g>
<g >
<title>ip4_datagram_release_cb (31,381,632 samples, 1.31%)</title><rect x="553.9" y="293" width="15.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="556.92" y="303.5" ></text>
</g>
<g >
<title>enqueue_task_fair (45,960,784 samples, 1.92%)</title><rect x="996.7" y="69" width="22.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="999.74" y="79.5" >e..</text>
</g>
<g >
<title>__vfs_write (519,719,318 samples, 21.69%)</title><rect x="909.0" y="261" width="255.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="911.99" y="271.5" >__vfs_write</text>
</g>
<g >
<title>dequeue_task_fair (40,645,008 samples, 1.70%)</title><rect x="318.3" y="197" width="20.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="321.32" y="207.5" ></text>
</g>
<g >
<title>udp_recvmsg (497,016,657 samples, 20.74%)</title><rect x="213.1" y="309" width="244.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="216.05" y="319.5" >udp_recvmsg</text>
</g>
<g >
<title>___slab_alloc (16,261,894 samples, 0.68%)</title><rect x="569.4" y="149" width="8.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="572.37" y="159.5" ></text>
</g>
<g >
<title>openssl::ssl::SslStream&lt;S&gt;::ssl_read_uninit (16,731,952 samples, 0.70%)</title><rect x="690.1" y="453" width="8.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="693.08" y="463.5" ></text>
</g>
<g >
<title>sch_direct_xmit (17,802,436 samples, 0.74%)</title><rect x="611.2" y="149" width="8.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="614.24" y="159.5" ></text>
</g>
<g >
<title>__libc_write (15,483,473 samples, 0.65%)</title><rect x="483.9" y="437" width="7.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="486.93" y="447.5" ></text>
</g>
<g >
<title>ip_local_out (107,362,562 samples, 4.48%)</title><rect x="592.0" y="261" width="52.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="595.04" y="271.5" >ip_lo..</text>
</g>
<g >
<title>update_cfs_rq_h_load (13,580,153 samples, 0.57%)</title><rect x="1040.7" y="101" width="6.6" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1043.66" y="111.5" ></text>
</g>
<g >
<title>sched_clock_cpu (11,234,113 samples, 0.47%)</title><rect x="1047.3" y="85" width="5.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1050.35" y="95.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (12,958,786 samples, 0.54%)</title><rect x="652.1" y="437" width="6.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="655.08" y="447.5" ></text>
</g>
<g >
<title>all (2,396,497,899 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>_copy_to_iter (13,499,128 samples, 0.56%)</title><rect x="451.1" y="293" width="6.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="454.13" y="303.5" ></text>
</g>
<g >
<title>enqueue_entity (24,026,775 samples, 1.00%)</title><rect x="1007.5" y="53" width="11.9" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1010.54" y="63.5" ></text>
</g>
<g >
<title>openssl::ssl::bio::bwrite (17,087,389 samples, 0.71%)</title><rect x="511.0" y="437" width="8.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="514.01" y="447.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (837,680,461 samples, 34.95%)</title><rect x="777.5" y="389" width="412.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="780.54" y="399.5" >&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Wri..</text>
</g>
<g >
<title>inet_sendmsg (199,578,908 samples, 8.33%)</title><rect x="546.6" y="325" width="98.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="549.63" y="335.5" >inet_sendmsg</text>
</g>
<g >
<title>__libc_sendto (269,424,297 samples, 11.24%)</title><rect x="519.4" y="421" width="132.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="522.42" y="431.5" >__libc_sendto</text>
</g>
<g >
<title>inet_recvmsg (497,016,657 samples, 20.74%)</title><rect x="213.1" y="325" width="244.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="216.05" y="335.5" >inet_recvmsg</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (523,458,194 samples, 21.84%)</title><rect x="213.1" y="405" width="257.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="216.05" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>queue_work_on (12,022,155 samples, 0.50%)</title><rect x="959.9" y="165" width="5.9" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="962.89" y="175.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (43,232,282 samples, 1.80%)</title><rect x="1019.4" y="85" width="21.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1022.37" y="95.5" >t..</text>
</g>
<g >
<title>update_load_avg (14,835,236 samples, 0.62%)</title><rect x="331.0" y="165" width="7.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="334.03" y="175.5" ></text>
</g>
<g >
<title>OPENSSL_cleanse (13,259,049 samples, 0.55%)</title><rect x="23.8" y="453" width="6.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="26.83" y="463.5" ></text>
</g>
<g >
<title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (30,897,065 samples, 1.29%)</title><rect x="727.0" y="373" width="15.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="729.96" y="383.5" ></text>
</g>
<g >
<title>update_rq_clock (11,234,113 samples, 0.47%)</title><rect x="1047.3" y="101" width="5.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1050.35" y="111.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (13,478,634 samples, 0.56%)</title><rect x="457.8" y="341" width="6.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="460.78" y="351.5" ></text>
</g>
<g >
<title>[libssl.so.1.1] (254,176,694 samples, 10.61%)</title><rect x="67.2" y="453" width="125.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="70.21" y="463.5" >[libssl.so.1.1]</text>
</g>
<g >
<title>__ip_finish_output (47,964,111 samples, 2.00%)</title><rect x="605.4" y="213" width="23.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="608.44" y="223.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (240,997,385 samples, 10.06%)</title><rect x="533.4" y="405" width="118.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="536.42" y="415.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>_raw_spin_unlock_bh (14,797,338 samples, 0.62%)</title><rect x="546.6" y="293" width="7.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="549.63" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (523,458,194 samples, 21.84%)</title><rect x="213.1" y="389" width="257.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="216.05" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>memcpy_erms (13,036,018 samples, 0.54%)</title><rect x="953.5" y="181" width="6.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="956.47" y="191.5" ></text>
</g>
<g >
<title>ip_send_skb (107,362,562 samples, 4.48%)</title><rect x="592.0" y="277" width="52.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="595.04" y="287.5" >ip_se..</text>
</g>
<g >
<title>__queue_work (176,825,519 samples, 7.38%)</title><rect x="965.8" y="165" width="87.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="968.81" y="175.5" >__queue_work</text>
</g>
<g >
<title>__libc_recv (551,074,120 samples, 22.99%)</title><rect x="199.5" y="421" width="271.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="202.46" y="431.5" >__libc_recv</text>
</g>
<g >
<title>neigh_resolve_output (18,387,442 samples, 0.77%)</title><rect x="620.0" y="181" width="9.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="623.00" y="191.5" ></text>
</g>
<g >
<title>[unknown] (10,515,158 samples, 0.44%)</title><rect x="478.8" y="437" width="5.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="481.75" y="447.5" ></text>
</g>
<g >
<title>schedule (460,571,589 samples, 19.22%)</title><rect x="223.6" y="245" width="226.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="226.57" y="255.5" >schedule</text>
</g>
<g >
<title>core::fmt::write (61,902,475 samples, 2.58%)</title><rect x="747.1" y="373" width="30.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="750.06" y="383.5" >co..</text>
</g>
<g >
<title>schedule_timeout (460,571,589 samples, 19.22%)</title><rect x="223.6" y="261" width="226.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="226.57" y="271.5" >schedule_timeout</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (772,201,445 samples, 32.22%)</title><rect x="792.8" y="341" width="380.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="795.79" y="351.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>perf_pmu_disable.part.0 (163,629,643 samples, 6.83%)</title><rect x="223.6" y="165" width="80.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="226.57" y="175.5" >perf_pmu_..</text>
</g>
<g >
<title>pty_write (42,066,493 samples, 1.76%)</title><rect x="945.1" y="197" width="20.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="948.10" y="207.5" ></text>
</g>
<g >
<title>n_tty_write (470,344,643 samples, 19.63%)</title><rect x="909.0" y="229" width="231.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="911.99" y="239.5" >n_tty_write</text>
</g>
<g >
<title>__lock_text_start (17,008,320 samples, 0.71%)</title><rect x="945.1" y="181" width="8.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="948.10" y="191.5" ></text>
</g>
<g >
<title>alloc_skb_with_frags (16,261,894 samples, 0.68%)</title><rect x="569.4" y="229" width="8.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="572.37" y="239.5" ></text>
</g>
<g >
<title>perf_event_sched_in (21,848,631 samples, 0.91%)</title><rect x="424.7" y="181" width="10.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="427.67" y="191.5" ></text>
</g>
<g >
<title>pty_write (336,321,106 samples, 14.03%)</title><rect x="965.8" y="213" width="165.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="968.81" y="223.5" >pty_write</text>
</g>
<g >
<title>udp_send_skb.isra.0 (107,362,562 samples, 4.48%)</title><rect x="592.0" y="293" width="52.9" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="595.04" y="303.5" >udp_s..</text>
</g>
<g >
<title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (15,641,207 samples, 0.65%)</title><rect x="1182.3" y="357" width="7.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1185.30" y="367.5" ></text>
</g>
<g >
<title>__ip_local_out (27,213,097 samples, 1.14%)</title><rect x="592.0" y="245" width="13.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="595.04" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (176,825,519 samples, 7.38%)</title><rect x="965.8" y="133" width="87.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="968.81" y="143.5" >wake_up_pr..</text>
</g>
<g >
<title>aa_sk_perm (14,575,731 samples, 0.61%)</title><rect x="644.9" y="293" width="7.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="647.90" y="303.5" ></text>
</g>
</g>
</svg>
